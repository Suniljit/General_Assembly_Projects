@article{STEIMER2017163,
title = {Model-based Design Process for the Early Phases of Manufacturing System Planning using SysML},
journal = {Procedia CIRP},
volume = {60},
pages = {163-168},
year = {2017},
note = {Complex Systems Engineering and Development Proceedings of the 27th CIRP Design Conference Cranfield University, UK 10th – 12th May 2017},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2017.01.036},
url = {https://www.sciencedirect.com/science/article/pii/S2212827117300379},
author = {Chantal Steimer and Jan Fischer and Jan C. Aurich},
keywords = {Manufacturing, System, Planning, Design, Method, Modelling, MBSE},
abstract = {This paper presents an approach for a model-based planning process for the early phases of manufacturing system planning (MSP). The goals are a better integration of MSP with product development (PD) in the early design phases and an improvement of the coordination of the MSP-related planning disciplines. The presented approach is based on model-based systems engineering (MBSE) and is supported by a modeling scheme which uses the systems modeling language (SysML). The approach consists of a process description of the MSP and of different so called SysML views which describe the information artifacts of each MSP step. It is divided into four different modeling levels that describe the manufacturing system's structure and behavior from different points of view. In order to validate the approach, an exemplary cylinder head production was modeled. Extractions from this example are shown as SysML-diagrams. To conclude the paper, the advantages and disadvantages of using a model-based planning approach with SysML for MSP are discussed.}
}
@article{MICOUIN2013128,
title = {Model Based Systems Engineering using VHDL-AMS},
journal = {Procedia Computer Science},
volume = {16},
pages = {128-137},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.014},
url = {https://www.sciencedirect.com/science/article/pii/S187705091300015X},
author = {Patrice Micouin},
keywords = {Property-based requirement, MBSE, Specification model, Design model, System model, System configuration, Requirement derivation, Simulation, Specification model validation, Design model verification},
abstract = {The purpose of this paper is to contribute to the definition of a model based systems engineering (MBSE) approach which would meet the objective laid out by INCOSE to promote an approach that is not a simple extrapolation of current practices. After briefly presenting the tools used and summarizing a state-of-the-art system design process, we will show how it is possible to define property-based requirements (PBR) as features of specification models and to apply the design process to this model in order to develop design models. We will also show how it is possible, to perform a simulation-based verification process of design models in order to detect and remove design errors, to substitute the initial requirements of the system with derived requirements gradually assigned to the sub-entities of the model, to perform a simulation-based validation process of specification models in order to detect and remove specification errors. Thus, we consider that our proposals improve MBSE current practices making them safer for the development of present and future systems.}
}
@article{DING20223004,
title = {Code Generation Approach Supporting Complex System Modeling based on Graph Pattern Matching},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {10},
pages = {3004-3009},
year = {2022},
note = {10th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.10.189},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322022030},
author = {Jie Ding and Jinzhi Lu and Guoxin Wang and Junda Ma and Dimitris Kiritsis and Yan Yan},
keywords = {Code generation, MBSE, Model-driven, GOPPRR, Meta-modeling, KARMA language},
abstract = {Code generation is an effective way to drive the complex system development in model-based systems engineering. Currently, different code generators are developed for different modeling languages to deal with the development of systems with multi-domain. There are a lack of unified code generation approaches for multi-domain heterogeneous models. In addition, existing methods lack the ability to flexibly query and transform complex model structures to the target code, resulting in poor transformation efficiency. To solve the above problems, this paper proposes a unified approach which supports the code generation of heterogeneous models with complex model structure. First, The KARMA language based on GOPPRR-E meta-modeling approach is used for the unified formalism of models built by different modeling languages. Second, the code generation approach based on graph pattern matching is proposed to realize the query and transformation of complex model structures. Then, the syntax for code generation is integrated into KARMA and a compiler for code generation is developed. Finally, a case of unmanned vehicle system is taken to validate the effectiveness of the proposed approach.}
}
@article{MEINER202161,
title = {Model based systems engineering as enabler for rapid engineering change management},
journal = {Procedia CIRP},
volume = {100},
pages = {61-66},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.010},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121004686},
author = {Maximilian Meißner and Georg Jacobs and Patrick Jagla and Jonathan Sprehe},
keywords = {rapid ECM, MBSE, agile development},
abstract = {Product complexity is steadily increasing, customers are demanding more individualized products and market conditions are changing more frequently. To be able to increase customer satisfaction, while decreasing development lead-time under these conditions, the product development process (PDP) has to become more agile. One of the major challenges in implementing an agile PDP is the rapid adaptation to changed conditions and requirements. Due to the physical and multi-disciplinary relationships and dependencies the change management and execution in the development of cyber-physical products is highly complex and time consuming. In this paper an approach is presented, which enables a rapid engineering change management, by using model based systems engineering (MBSE) on parameter level. This MBSE approach incorporates a link between relevant system parameters and the domain-specific models and by that allows the quick estimation of change request impacts. In addition, it can be shown, that the execution of engineering changes can be supported even semi-automated to drastically reduce execution time. If the domain specific models are fully parameterized an automated execution of these models from within the system model is possible which enables a semi-automated or even fully automated execution of engineering changes as it is shown in an example for the requested material change of an A-pillar of an electrical vehicle.}
}
@article{ROUSSEAU20147886,
title = {Electric Drive Vehicle Development and Evaluation Using System Simulation},
journal = {IFAC Proceedings Volumes},
volume = {47},
number = {3},
pages = {7886-7891},
year = {2014},
note = {19th IFAC World Congress},
issn = {1474-6670},
doi = {https://doi.org/10.3182/20140824-6-ZA-1003.02832},
url = {https://www.sciencedirect.com/science/article/pii/S1474667016428557},
author = {A. Rousseau and S. Halbach and L. Michaels and N. Shidore and Na. Kim and N. Kim and D. Karbowski and M. Kropinski},
keywords = {Simulation, System Engineering, Control, Electric Drive Vehicles, Model Based System Engineering},
abstract = {To reduce development time and introduce technologies faster to the market, many companies have been moving to Model-based System Engineering (MBSE). In MBSE, the development process centers around a multi-physics model of the complete system being developed, from requirements to design, implementation and test. Engineers can avoid a generation of system design processes based on hand coding, and use graphical models to design, analyze, and implement the software that determines system performance and behavior. This paper describes the process implemented in Autonomie, a Plug-and-Play Software Environment, to design and evaluate electric drive powertrain and component technologies in a multi-physics environment. We will discuss best practices and provide examples of the different steps of the V-diagram including model-in-the-loop, software-in-the-loop and component-in-the-loop simulation.}
}
@article{MACCALMAN2016436,
title = {Integrating External Simulations Within the Model-Based Systems Engineering Approach Using Statistical Metamodels},
journal = {Procedia Computer Science},
volume = {95},
pages = {436-441},
year = {2016},
note = {Complex Adaptive Systems Los Angeles, CA November 2-4, 2016},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2016.09.309},
url = {https://www.sciencedirect.com/science/article/pii/S1877050916324826},
author = {Alex MacCalman and Gene Lesinski and Simon Goerger},
keywords = {Model Based Systems Engineering, Design of Experiments, SysML},
abstract = {The Model-Based Systems Engineering (MBSE) approach uses the Systems Modeling Language (SysML) to express the architectural information of a system throughout different stages of its lifecycle. Within the approach, the system's structure, behavior, requirements, and parametrics are defined as elements within an integrated model. System Engineers use nine SysML diagrams to display unique views of these system elements. A significant limitation of SysML is that it is only descriptive in nature and cannot produce analytical results to inform system effectiveness. In order to achieve the full benefit of the MBSE approach the systems engineering community must also rely on external models that capture more sophisticated analysis across a wide variety of domains. These domain models include simulations that measure operational effectiveness, life cycle costing models, physics-based computational simulations, manufacturing models, and many more. The purpose of this paper is to propose an approach that integrates these external simulation models with the MBSE integrated model using statistical metamodels that act as surrogates to the simulations. We demonstrate the approach using a simple system design problem and an agent-based simulation.}
}
@article{ROMERO2022103678,
title = {A user-centric computer-aided verification process in a virtuality-reality continuum},
journal = {Computers in Industry},
volume = {140},
pages = {103678},
year = {2022},
issn = {0166-3615},
doi = {https://doi.org/10.1016/j.compind.2022.103678},
url = {https://www.sciencedirect.com/science/article/pii/S0166361522000756},
author = {Victor Romero and Romain Pinquié and Frédéric Noël},
keywords = {Model-based systems engineering, Validation, Verification, User-centred design, Virtual reality, Human-in-the-loop simulation, Immersion, Realism},
abstract = {Although companies systematically strive for a full digitalisation of their products and their processes, the design phase shows that the quality of models is very unequal. Indeed, detailed design benefits from much more sophisticated methods and tools than the specification and architecture activities. Although, we should note the recent paradigm shift from document-based to model-based systems engineering, these models, which are mainly static 2D diagrams, remain poor to facilitate design verification early on. Thus, to detect most errors during the design phase, companies have no other alternative than to wait up to the testing phase which occurs after several years of development for complex systems. Thus, we propose a user-centric computer-aided verification process to ensure that the design meets the requirements under realistic operational conditions. The verification process provides a progressive immersion into the virtual system before seamlessly transitioning to the real system. Our work is built upon state-of-the-art MBSE methods such as the Property Model Methodology, which enables systems engineers to co-simulate specification models and design models. We improve such MBSE methods by increasing the level of realism that experiences the end-user during the verification of a design by the original combination of Model-In-the-Loop, Immersive Model-In-the-Loop, Human-In-the-Loop, and Hardware-In-the-Loop simulation strategies. A robot arm is used as a use case to illustrate the verification process.}
}
@article{ZAYAS20112737,
title = {Using knowledge and expressions to validate inter-model constraints},
journal = {IFAC Proceedings Volumes},
volume = {44},
number = {1},
pages = {2737-2742},
year = {2011},
note = {18th IFAC World Congress},
issn = {1474-6670},
doi = {https://doi.org/10.3182/20110828-6-IT-1002.03801},
url = {https://www.sciencedirect.com/science/article/pii/S1474667016440279},
author = {David Simon Zayas and Anne Monceaux and Yamine Ait-Ameur},
keywords = {Systems engineering, Interoperability, Concurrent Engineering, Models},
abstract = {Abstract
Model Based System Engineering (MBSE) field recommends practices, framework, tools and standards to improve the modeling of systems. Nevertheless, even though one follows a modeling methodology, inconsistencies arise in models since they are shared and developed in a collaborative context. This paper focuses on an approach to manage models heterogeneity by taking into consideration the implicit knowledge of the engineers. We defend this knowledge as the key to check inter-model constraints in the framework of MBSE methodologies.}
}
@article{LEMAZURIER20177260,
title = {An MBSE Approach to Pass from Requirements to Functional Architecture},
journal = {IFAC-PapersOnLine},
volume = {50},
number = {1},
pages = {7260-7265},
year = {2017},
note = {20th IFAC World Congress},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2017.08.1376},
url = {https://www.sciencedirect.com/science/article/pii/S2405896317319183},
author = {L. Lemazurier and V. Chapurlat and A. Grossetête},
keywords = {Complex systems, Model-Driven Systems Engineering Model Validation, Modelling},
abstract = {With systems being more and more complex, especially in the case of Nuclear Power Plant design, Systems Engineering (SE) has seen an increasing interest in the industrial world. Although SE concepts and processes have become well-known, passing from Requirements to Functional Architectures has not been a fully addressed issue. This paper proposes a tooled method that offers three different design perspectives: a Requirement View, a Context View and a Behavioural View. Those views mainly help the designers to express requirements, structure their architecture design, work together, verify and partially validate their design by means of five interconnected Design Specific Modelling Languages (DSML).}
}
@article{RASHID2015150,
title = {Toward the tools selection in model based system engineering for embedded systems—A systematic literature review},
journal = {Journal of Systems and Software},
volume = {106},
pages = {150-163},
year = {2015},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2015.04.089},
url = {https://www.sciencedirect.com/science/article/pii/S016412121500103X},
author = {Muhammad Rashid and Muhammad Waseem Anwar and Aamir M. Khan},
keywords = {MBSE, Embedded systems, Tools},
abstract = {Model based system engineering (MBSE) is a systematic approach of modeling which is frequently used to support requirement specification, design, verification and validation activities of system development. However, it is difficult to customize MBSE approach for the development of embedded systems due to their diverse behavioral aspects. Furthermore, appropriate tools selection to perform particular MBSE activities is always challenging. This paper focuses on the identification and classification of recent research practices pertaining to embedded systems development through MBSE approach. Consequently, a comprehensive analysis of various MBSE tools has been presented. Systematic literature review (SLR) has been used to identify 61 research practices published during 2008–2014. The identified researches have been classified into six different categories to analyze various aspects of MBSE approach for embedded systems. Consequently, 39 preliminary tools are identified that have been used in recent researches. Furthermore, classification and evaluation of tools have been presented. This research highlights important trends and approaches of MBSE to support development of embedded systems. A comprehensive investigation of tools in this article facilitates researchers, practitioners and developers to select appropriate tools according to their requirements.}
}
@article{LAUKOTKA2021684,
title = {Digital twins of product families in aviation based on an MBSE-assisted approach},
journal = {Procedia CIRP},
volume = {100},
pages = {684-689},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.144},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121006193},
author = {Fabian Laukotka and Michael Hanna and Dieter Krause},
keywords = {Digital Twin, Product Families, Aviation, Aircraft Cabins, MBSE},
abstract = {In this paper an approach to combine the basic concept of Digital Twins with research in product family development applied to civil aviation is presented. Concomitant benefits but also challenges regarding the management of information are introduced as well as the possibility to solve them by using the tools and methods of Model-Based Systems Engineering. As this conjoins three different topics, the basics of each of them in reference to the approach is introduced before they are subsequently combined. In the process, respective past and future research is presented as well.}
}
@article{VALENTE2022286,
title = {Extension of the Modeling Tool Suite for Development of Embedded Systems for the Space Domain},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {4},
pages = {286-291},
year = {2022},
note = {17th IFAC Conference on Programmable Devices and Embedded Systems PDES 2022 — Sarajevo, Bosnia and Herzegovina, 17-19 May 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.06.047},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322003627},
author = {Hugo Valente and Miguel A. {de Miguel} and Jesús Zurera and Ángel G. Pérez and Alejandro Alonso and Juan Zamorano and Juan A. {de la Puente}},
keywords = {embedded software, real-time systems, MBSE, reliable systems, automatic code generation, TASTE},
abstract = {As code complexity continues to increase, software development methods must support the handling of this complexity and reduce development failures. Model-based systems engineering (MBSE) is a modeling-centered development method that provides support to maintain consistency of different phases of the life cycle. Automatic code generation tools were created to reuse software solutions and design patterns and reduce development errors in the software development process, based on automatic model transformations and code generators. However, the use of these tools requires their adaptation to specific platforms and domains since tools only support certain functionalities. What determines how to approach the design of the system are the functionalities provided by the tools available rather than the user needs. In this paper, we propose a way to extend the elements supported by modelling tool suites for real-time embedded systems for the space domain. This enables developers to have greater flexibility by allowing them to modify their tool suite to fit their needs.}
}
@incollection{FRIEDENTHAL200815,
title = {Chapter 2 - Model-Based Systems Engineering},
editor = {Sanford Friedenthal and Alan Moore and Rick Steiner},
booktitle = {Practical Guide to SysML},
publisher = {Morgan Kaufmann},
address = {Burlington},
pages = {15-27},
year = {2008},
series = {The MK/OMG Press},
isbn = {978-0-12-374379-4},
doi = {https://doi.org/10.1016/B978-0-12-374379-4.00002-3},
url = {https://www.sciencedirect.com/science/article/pii/B9780123743794000023},
author = {Sanford Friedenthal and Alan Moore and Rick Steiner},
abstract = {Publisher Summary
This chapter summarizes model-based systems engineering (MBSE) concepts to provide further context for SysML without emphasizing the specific modeling language, method, or tools. MBSE is contrasted with the more traditional document-based approach to promote the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed in the chapter. The practice of systems engineering is transitioning from a document-based approach to a model-based approach like many of the other engineering disciplines, such as mechanical and electrical engineering. MBSE offers significant potential benefits to enhance communications, specification and design precision, design integration, and reuse that can improve design quality and productivity and reduce development risk. The emphasis in MBSE is on producing and controlling a coherent system model and using this model to specify and design the system.}
}
@article{BURSAC2016802,
title = {Model Based Systems Engineering in Modular Design – A Potential Analysis using Portal Type Scraper Reclaimers as an Example},
journal = {Procedia CIRP},
volume = {50},
pages = {802-807},
year = {2016},
note = {26th CIRP Design Conference},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2016.04.156},
url = {https://www.sciencedirect.com/science/article/pii/S2212827116303961},
author = {Nikola Bursac and Albert Albers and Thomas Schmitt},
keywords = {MBSE, Modular Design, Product Generation Engineering},
abstract = {Many industries have to react progressively to the increasing customer requirements regarding the individualization of products. As a consequence, companies are using more and more standardization methods, such as modular, platform or type series design. This leads to an increased complexity of product development processes and thus to the necessity of concepts which allow a consistent representation of constructions kits. Model Based Systems Engineering (MBSE) can support the development of such systems. A case study carried out in cooperation with thyssenkrupp Industrial Solutions shows the potential of the approach using the industrial sector, the machinery and plant engineering industry as an example.}
}
@article{BEMMAMI2021103486,
title = {Managing the use of simulation in systems engineering: An industrial state of practice and a prioritization method},
journal = {Computers in Industry},
volume = {131},
pages = {103486},
year = {2021},
issn = {0166-3615},
doi = {https://doi.org/10.1016/j.compind.2021.103486},
url = {https://www.sciencedirect.com/science/article/pii/S0166361521000932},
author = {K.E. Bemmami and P. David},
keywords = {Model-based systems engineering (MBSE), Simulation, Decision support, Analytic hierarchy process (AHP)},
abstract = {Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the early stages of projects, it for example supports defining the expected system features, when in the later phases it can be used to estimate the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. Simulation opportunities are numerous, but the project managers must identify the more relevant for their project. This paper aims at documenting the current state of practice on the usage of simulation in MBSE processes. Then it aims at exploring decision support opportunities for simulation use in MBSE projects. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing (VVT), and simulation. The perceived benefits, barriers, and the parameters influencing VVT strategies, and the use of simulation are alternately analyzed. The results of the survey are used to propose a Prioritization of Simulation Efforts Methodology (PSEM) to assists managers in choosing the right functions, or systems’ elements to be simulated.}
}
@article{WANG202119,
title = {Integration of model based system engineering into the digital twin concept},
journal = {Procedia CIRP},
volume = {100},
pages = {19-24},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.003},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121004613},
author = {Yübo Wang and Tanja Steinbach and Jonathan Klein and Reiner Anderl},
keywords = {Digital Twin, Model Based System Engineering, Industrie 4.0},
abstract = {For some years now, digitalization has made its way into all phases of the product life cycle. With the help of the modeling language SysML, Model-Based Systems Engineering (MBSE) represents a modern approach in product development. At the same time, the technologies of Industrie 4.0 and digital twin are opening up a new level of efficiency to producing companies. But entertainment technology is also finding its way into business: Virtual Reality (VR) provides an immersive and cost-effective way to perceive products in the early stages of product development. In order to provide these with quickly available data for display and simulation, it is worthwhile to expand the MBSE approach. This work describes how a product model can be extended by a simulative function structure. On the one hand, this work describes how the Cameo System Modeler can be used to extend a product model with a simulative functional structure. On the other hand, it explains how to extend an existing product model by modeling the information required to efficiently and consistently translate an Engineering Bill of Materials (EBOM) into a Manufacturing Bill of Materials (MBOM).}
}
@article{BEMMAMI20211132,
title = {State-of- practice survey in industry on the deployment of simulation in systems engineering},
journal = {IFAC-PapersOnLine},
volume = {54},
number = {1},
pages = {1132-1137},
year = {2021},
note = {17th IFAC Symposium on Information Control Problems in Manufacturing INCOM 2021},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2021.08.133},
url = {https://www.sciencedirect.com/science/article/pii/S2405896321008946},
author = {K.E. Bemmami and P. David},
keywords = {Model-based Systems engineering (MBSE), Simulation, State of practice},
abstract = {Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the first stages of projects, it supports defining the expected system features, when in the later stages it estimates the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. The use of simulation is a specific part of an MBSE approach that is crucial in an efficient project management since it might be the source of high cost and skills needs but also a source of precious knowledge on the future system. Simulation opportunities are numerous, but the project manager must identify the more relevant for their project. This paper aims at documenting the current state of practice in industry on the usage of simulation in MBSE processes. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing VVT, and simulation. The perceived benefits and barriers, and the parameters influencing VVT strategies and the use of simulation are alternately analyzed.}
}
@article{CHEN2022100329,
title = {Model-based system engineering supporting production scheduling based on satisfiability modulo theory},
journal = {Journal of Industrial Information Integration},
volume = {27},
pages = {100329},
year = {2022},
issn = {2452-414X},
doi = {https://doi.org/10.1016/j.jii.2022.100329},
url = {https://www.sciencedirect.com/science/article/pii/S2452414X22000036},
author = {Jingqi Chen and Guoxin Wang and Jinzhi Lu and Xiaochen Zheng and Dimitris Kiritsis},
keywords = {Production scheduling, MBSE, SMT, Property verification, KARMA language},
abstract = {Production scheduling enables a production system to allocate resources for the efficient and low-cost production. However, pure mathematical methods are typically utilized for production scheduling, which are not understandable and practical for different domain engineers. Moreover, heterogeneous information during production scheduling may result in communication ambiguity or an information delay. Furthermore, the interaction and reuse of production data is limited, owing to the lack of a unified expression of the production information. To overcome these challenges, a model-based systems engineering (MBSE) approach based on the satisfiability modulo theory (SMT) is proposed to support production scheduling. A multiple architectural view modeling language, KARMA, is used as the basis to construct production scheduling elements and formalize the production scheduling processes using architecture models. Such graphical models are used to improve the understanding and communication among engineers in different domains. Then, property verification based on the MBSE and SMT is applied to solve the model constraints and select optimal schemes for the production scheduling. A case study of a package production line is proposed to evaluate our approach. Its scheduling goal is to maintain high production efficiency, decrease the working time and the cost of workers when increasing working distances during the COVID-19 pandemic. From the case study, we observed that KARMA language enables a description of modeling production scheduling and the optimization of scheduling schemes in a unified manner. Using the SMT solver, the constraints on scheduling corresponding to the sudden decrease in workers are evaluated to exclude inappropriate schemes and generate the optimal one.}
}
@article{MOUSAVI20191254,
title = {A Survey of Model-Based System Engineering Methods to Analyse Complex Supply Chains: A Case Study in Semiconductor Supply Chain},
journal = {IFAC-PapersOnLine},
volume = {52},
number = {13},
pages = {1254-1259},
year = {2019},
note = {9th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2019},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2019.11.370},
url = {https://www.sciencedirect.com/science/article/pii/S2405896319313497},
author = {Behrouz Alizadeh Mousavi and Radhia Azzouz and Cathal Heavey and Hans Ehm},
keywords = {Model-Based system Engineering, Conceptual modelling, Simulation, SysML, Ontology, BPMN, Supply chain planning},
abstract = {Model-Based System Engineering (MBSE) is an increasingly important methodology to support system engineering and has attained a high level of attentiveness in business simulation practices as a conceptual modelling approach. In this paper, we present our results related to the application of MBSE approaches in complex semiconductor manufacturing supply chain planning systems. We investigate System Modeling Language (SysML), Web Ontology Language (OWL) and Business Process Modeling Notation (BPMN) as different approaches and languages for MBSE. These approaches are surveyed and used to develop conceptual models for the simulation of the order management process inside the supply chain management. This study aims to survey and offer a number of implications for MBSE practice and seeks to stimulate and guide further research in this area.}
}
@article{HAVEMAN2013293,
title = {Requirements for High Level Models Supporting Design Space Exploration in Model-based Systems Engineering},
journal = {Procedia Computer Science},
volume = {16},
pages = {293-302},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.031},
url = {https://www.sciencedirect.com/science/article/pii/S187705091300032X},
author = {Steven P. Haveman and G. Maarten Bonnema},
keywords = {Model-based systems engineering, systems engineering challenges, high level models, communication, design space exploration, design trade-offs},
abstract = {Most formal models are used in detailed design and focus on a single domain. Few effective approaches exist that can effectively tie these lower level models to a high level system model during design space exploration. This complicates the validation of high level system requirements during detailed design. In this paper, we define requirements for a high level model that is firstly driven by key systems engineering challenges present in industry and secondly connects to several formal and domain specific models used in model-based design. We analysed part of the systems engineering process at a company developing complex systems, by observing the design process and by analysing design documentation and development databases. By generalizing these observations, we identified several high level systems engineering challenges. They are compared to literature, focusing on reported systems engineering challenges and on existing approaches that incorporate high level models in model-based systems engineering. Finally, we argue that high level system models supporting design space exploration should be able to communicate information regarding design trade-offs (e.g. safety versus ease of use) effectively in a multidisciplinary setting. In our outlook, we propose how to continue our research, by recommending further research and defining a research question.}
}
@article{SHARPLES20151896,
title = {Implementation of Human System Integration (HSI) and ‘Non-functional Characteristics’ into the Systems Engineering Lifecycle - A Practical Approach at Airbus Defence and Space},
journal = {Procedia Manufacturing},
volume = {3},
pages = {1896-1902},
year = {2015},
note = {6th International Conference on Applied Human Factors and Ergonomics (AHFE 2015) and the Affiliated Conferences, AHFE 2015},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2015.07.232},
url = {https://www.sciencedirect.com/science/article/pii/S2351978915002334},
author = {Robert A. Sharples},
keywords = {Human System Integration (HSI), Human Factors, Model Based System Engineering (MBSE), Architecture frameworks, Human views, Non functional charactertics, Systems Of Systems (SoS)},
abstract = {This paper provides an overview of the process, practices, developments and synergies that Airbus Defence and Space are implementing Human System Integration (HSI) into the Continuous Engineering /Model Based System Engineering (MBSE) throughout the company. The paper highlights these developments, which include internal research programmes, European Union funded research projects, Airbus internal Synergy project. This research includes an EU funded 3 year project HoliDes - Holistic Human Factors and System Design of Adaptive Cooperative Human Machine Systems. Continuous engineering within Airbus has included various corporate and divisional Synergy programs and lean and agile initiatives. As our business is defined by Multiple Portfolio products, supplied from multi countries, the MBSE process had to speed up delivery and reduce overall cost. The Airbus process models needed significant amendment due to products supplied via multiple business lines throughout the company. This problem is exacerbated by varying requirements of four national defence requirements, who impose restrictions on the use of Architectural Frameworks (NAF/MODAF/DODAF) and supporting tools. Our Human System Integration (HSI) is continuing from the initial Human View Architectural Framework research to include the nine HSI domains. These nine domains overlap with our current Human factors research and will now allow us to pull in our Non-functional work into our Systems Engineering lifecycle. This paper highlights the research projects Airbus Space and Defence are incorporating in to our overall strategy, these include internal R&D funding and European Union funded research programs. These research projects have highlighted several areas of interest these include, stochastic modelling with respect to Human System Integration and Human views, verification and analysis of emergent behaviour and non-functional properties, which conforms with our own work on non-functional requirements and finally the use of System of System Formal Methods for parts of the lifecycle.}
}
@incollection{FRIEDENTHAL201515,
title = {Chapter 2 - Model-Based Systems Engineering},
editor = {Sanford Friedenthal and Alan Moore and Rick Steiner},
booktitle = {A Practical Guide to SysML (Third Edition)},
publisher = {Morgan Kaufmann},
edition = {Third Edition},
address = {Boston},
pages = {15-29},
year = {2015},
series = {The MK/OMG Press},
isbn = {978-0-12-800202-5},
doi = {https://doi.org/10.1016/B978-0-12-800202-5.00002-3},
url = {https://www.sciencedirect.com/science/article/pii/B9780128002025000023},
author = {Sanford Friedenthal and Alan Moore and Rick Steiner},
keywords = {document-based systems engineering, model-based systems engineering, MBSE, model, system model, model repository, model-based metrics, model validation},
abstract = {Chapter 2 summarizes model-based systems engineering (MBSE) concepts to provide further context for SysML without emphasizing a specific modeling language, method, or tool. MBSE is contrasted with the more traditional document-based approach to motivate the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed including a discussion on model-based metrics.}
}
@article{MONTGOMERY2013313,
title = {Model-Based System Integration (MBSI) – Key Attributes of MBSE from the System Integrator's Perspective},
journal = {Procedia Computer Science},
volume = {16},
pages = {313-322},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.033},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000343},
author = {Paul R. Montgomery},
keywords = {Model Based Systems Engineering, integration, qualification, system acquisition, system design},
abstract = {Many system developments fail at the integration and qualification (I&Q) phases in the development and acquisition cycle. How can we, as Systems Engineers (SE), navigate the uncertainty and risk of system development to ensure I&Q success? One solution is applying significant influence of the system integrator (SI) member of the SE team at the very beginning of system design. If this is a solution, then what processes, methods, and practices can the SI apply in the overall SE process? Can the emerging Model-Based Systems Engineering (MBSE) methods and tools be leveraged by the SI? This paper discusses a Model Based System Integration (MBSI) approach that applies essential MBSE methods and tools to the unique goals of the SI. While MBSE is supportive of the entire SE process, it tends to be optimized for the design-side of the SE process and not necessarily for I&Q goals and objectives. MBSI highlights how MBSE tools and methods can be extended to benefit the SI. Lessons- learned from several SE graduate school projects applying these MBSI methods are provided to demonstrate the efficacy of the MBSI approach.}
}
@incollection{DOUGLASS20161,
title = {Chapter 1 - What Is Model-Based Systems Engineering?},
editor = {Bruce Powel Douglass},
booktitle = {Agile Systems Engineering},
publisher = {Morgan Kaufmann},
address = {Boston},
pages = {1-39},
year = {2016},
isbn = {978-0-12-802120-0},
doi = {https://doi.org/10.1016/B978-0-12-802120-0.00001-1},
url = {https://www.sciencedirect.com/science/article/pii/B9780128021200000011},
author = {Bruce Powel Douglass},
keywords = {model-based systems engineering, MBSE, systems engineering, high-precision modeling, adopting MBSE, capability assessment, modeling rules},
abstract = {This chapter provides a short overview of systems engineering approaches, activities, and goals and how model-based systems engineering (MBSE) can help achieve them. The chapter makes the distinction between systems and discipline-specific engineering disciplines and then identifies and describes the primary systems engineering activities and their resulting engineering data. Following this, the three primary workflow models (V-Model, Incremental Model, and Hybrid V-Model) are discussed as means for sequencing the system engineering activities. With that basic understanding in place, the chapter proceeds with the advantages of MBSE over traditional document-centric approaches—such as supporting deeper reasoning about system properties and providing a single source of engineering truth. A short discussion of how to move from traditional methods to MBSE is supplied in the section on “Adopting MBSE.” The chapter winds up with “The Rules of Modeling” to provide a set of guidelines for new practitioners.}
}
@article{RIEDEL2020170,
title = {Managing knowledge and parameter dependencies with MBSE in textile product development processes},
journal = {Procedia CIRP},
volume = {91},
pages = {170-175},
year = {2020},
note = {Enhancing design through the 4th Industrial Revolution Thinking},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2020.01.138},
url = {https://www.sciencedirect.com/science/article/pii/S2212827120308039},
author = {Ricarda Riedel and Georg Jacobs and Christian Konrad and Rahul Singh and Jonathan Sprehe},
keywords = {Product Development Process, Lightweight Design, Model-Based Systems Engineering, Knowledge Management},
abstract = {Today’s mechanical engineering companies are confronted with challenges like new material technologies, shorter product life cycles, increasing interdisciplinarity of the various departments as well as product development across distributed company locations. In the context of lightweight design, Tailored Textiles offer promising potentials to reduce product weight and manufacturing costs. Tailored Textiles are textiles with integrated local reinforcements whose textile properties can be adapted locally during the production due to the textile structures, so that process steps and therefore time and costs can be reduced. However, the production-oriented design of Tailored Textiles is currently very complex. One reason for this is the large number of stakeholders that are involved in the process. In order to make this complexity manageable, it is necessary to develop a common understanding of the textile process chain and to improve communication between different stakeholders. Another major challenge is the identification and management of technical parameter dependencies over the entire product development process (PDP). The aim pursued by this work is to link the technical parameter level of different expert models with the process level of Tailored Textiles PDP, so that expert knowledge is externalized to other stakeholders In this context, Model-Based Systems Engineering (MBSE) is a promising approach. Through the formalized application of modeling, MBSE allows the process accompanying development of a system model, which enables the visualization of the parameter dependencies within the product development process. In this paper, a methodological approach is presented which initially involves modeling the PDP for Tailored Textiles in a product data management system (PDMS). The process is then linked to a MBSE modeling tool. In the modeling tool, the analyzed parameters and their dependencies are set up and visualized. Following this procedure, the feasibility of the design will be evaluated based on a use case.}
}
@article{KONRAD2019451,
title = {Enabling complexity management through merging business process modeling with MBSE},
journal = {Procedia CIRP},
volume = {84},
pages = {451-456},
year = {2019},
note = {29th CIRP Design Conference 2019, 08-10 May 2019, Póvoa de Varzim, Portgal},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2019.04.267},
url = {https://www.sciencedirect.com/science/article/pii/S221282711930914X},
author = {Christian Konrad and Georg Jacobs and Rik Rasor and Ricarda Riedel and Tim Katzwinkel and Justus Siebrecht},
keywords = {Model Based Systems Engineering, Product Development Process, Complexity Management, Integral Product Architecture},
abstract = {Integral products are characterized by multiple functional use of components, resulting in more compact and lighter products. However, those benefits come along with a significant increase in development process complexity. This complexity represents a significant risk in the value-creation chain. For the efficient fulfilment of customer needs and market requirements, strategies are required to cope with the complexity of integral products. A promising approach in this context is Model Based Systems Engineering (MBSE). Through the formalized application of modeling, MBSE allows the development of a system model to support the development process. The model enables a visualization of the process complexity and thus an identification of the essential complexity drivers. This knowledge is mandatory for the coordinated initiation of countermeasures. However, MBSE is not yet fully integrated in today’s product development processes (PDP). One reason for this is an insufficient interconnection between system models and business processes. This paper presents an approach for merging MBSE with business processes. The procedure comprises the modeling of exemplary business processes in a product data management system (PDMS). These processes are linked to a MBSE modeling tool via a RESTful API. Synergetic potentials of this connection are pointed out, based on scenarios from requirements management, product configuration and risk management. Finally, a discussion takes place regarding the degree of maturity to master complexity in business processes with MBSE.}
}
@article{LUKEI2016455,
title = {Modular Inspection Equipment Design for Modular Structured Mechatronic Products – Model Based Systems Engineering Approach for an Integrative Product and Production System Development},
journal = {Procedia Technology},
volume = {26},
pages = {455-464},
year = {2016},
note = {3rd International Conference on System-Integrated Intelligence: New Challenges for Product and Production Engineering},
issn = {2212-0173},
doi = {https://doi.org/10.1016/j.protcy.2016.08.058},
url = {https://www.sciencedirect.com/science/article/pii/S2212017316304054},
author = {Meinolf Lukei and Bassem Hassan and Roman Dumitrescu and Thorsten Sigges and Viktor Derksen},
keywords = {Model Based Systems Engineering (MBSE), mechatronic, integrative product and inspection development equipment procedure, modularity, variants},
abstract = {Quality control is an essential part of the production of modular mechatronic systems. Especially the quality inspection of the overall system at the end of the production is of extraordinary importance. The associated inspection equipment can also be a mechatronic system, which is often explicitly designed and manufactured for one product with a large expenditure of time. In order to have the needed inspection equipment ready by the start of production (SoP) and to consider additional requirements to the product, which are produced by the inspection equipment concept, an integrative mechatronic product and inspection equipment development procedure is needed. Furthermore, the inspection system has to consider the modularity of the system and often has to be designed in a modular way. Nowadays, the development of complex mechatronic systems is often carried out with the help of model-based systems engineering (MBSE) methods. Consequently, the inspection equipment should also be designed with the help of MBSE. This paper describes an integrative product and inspection equipment procedure for modular mechatronic systems with the help of MBSE. Especially the peculiarity of the modularity is described and validated with the help of an application example.}
}
@article{FELDMANN2019105,
title = {Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering},
journal = {Journal of Systems and Software},
volume = {153},
pages = {105-134},
year = {2019},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2019.03.060},
url = {https://www.sciencedirect.com/science/article/pii/S0164121219300639},
author = {S. Feldmann and K. Kernschmidt and M. Wimmer and B. Vogel-Heuser},
keywords = {Automated production systems, Model-based systems engineering, Inconsistency management},
abstract = {To cope with the challenge of managing the complexity of automated production systems, model-based approaches are applied increasingly. However, due to the multitude of different disciplines involved in automated production systems engineering, e.g., mechanical, electrical, and software engineering, several modeling languages are used within a project to describe the system from different perspectives. To ensure that the resulting system models are not contradictory, the necessity to continuously diagnose and handle inconsistencies within and in between models arises. This article proposes a comprehensive approach that allows stakeholders to specify, diagnose, and handle inconsistencies in model-based systems engineering. In particular, to explicitly capture the dependencies and consistency rules that must hold between the disparate engineering models, a dedicated graphical modeling language is proposed. By means of this language, stakeholders can specify, diagnose, and handle inconsistencies in the accompanying inconsistency management framework. The approach is implemented based on the Eclipse Modeling Framework (EMF) and evaluated based on a demonstrator project as well as a small user experiment. First findings indicate that the approach is expressive enough to capture typical dependencies and consistency rules in the automated production system domain and that it requires less effort compared to manually developing inter-model inconsistency management solutions.}
}
@article{ZHANG2023,
title = {Investigations on MBSE modelling and dynamic performance assessment of an electrical trimmable horizontal stabilizer actuator},
journal = {Chinese Journal of Aeronautics},
year = {2023},
issn = {1000-9361},
doi = {https://doi.org/10.1016/j.cja.2023.03.049},
url = {https://www.sciencedirect.com/science/article/pii/S1000936123001103},
author = {Wensen ZHANG and Jian FU and Jean-Charles MARÉ and Haolin MA and Tianxiang XIA and Yongling FU and Jiangao ZHAO},
keywords = {Electro-mechanical actuator, Flight control, Mechanical load path, Modelling, No-back mechanism},
abstract = {With the development of power-by-wire technology for more electric aircraft, the electro-mechanical actuator (EMA) has the advantages to replace the conventional hydraulic servo actuator in some aerospace flight controls. Conventional hydraulically powered trimmable horizontal stabilizer actuation (THSA) system is nowadays developed to be electrically supplied. Given their safety-criticality, no-back mechanism and redundant load paths are utilized to meet the flight control requirements. However, rare literatures have introduced these functions and addressed the virtual prototyping activities from system-level point of view. This paper proposed such a model of a THSA system with dual electric power sources and fault-tolerant mechanical load paths. The nonlinear effects of components are considered with realism, and system-level simulation test is conducted to support the model-based system engineering (MBSE) approach. The models are developed with a power view instead of a pure signal view. Focusing on the friction effect and compliance effect with backlash or preload, some improved and novel approaches are adopted for these crucial components and validated via experimental results. Meanwhile, the implemented system-level model enables injection of crucial faults. Finally, the simulation of the proposed model shows that it is an efficient resource to investigate the actuator’s dynamic performance, to virtually prove that the actuator meets the fail/safe constraint, and to demonstrate the soundness of the fault monitoring functions.}
}
@article{NASTOV201710538,
title = {MBSE and V&V: a tool-equipped method for combining various V&V strategies},
journal = {IFAC-PapersOnLine},
volume = {50},
number = {1},
pages = {10538-10543},
year = {2017},
note = {20th IFAC World Congress},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2017.08.1309},
url = {https://www.sciencedirect.com/science/article/pii/S2405896317318311},
author = {B. Nastov and V. Chapurlat and F. Pfister and C. Dony},
keywords = {MBSE, V&V, Model Appraisal, Guided Modelling, Simulation, Formal Proof},
abstract = {Model-Based System engineering (MBSE) promotes Verification and Validation (V&V) as crucial activities to demonstrate, during the system design stage and based on models, that a system meets requirements defined by stakeholders and that it fulfills its intended purpose. Model V&V activities are defined through the following strategies: Model Appraisal, Guided Modelling, Simulation and Formal Proof. Regarding the objectives of each individual strategy, they are considered as complementary, therefore mutually beneficial when combined, for reaching the overall V&V objectives. Various techniques and tools permit nowadays the implementation of each strategy. However, the successful combination and implementation of all four strategies remains still difficult (difference of concepts), time consuming (transformation and dedicated modelling are often requested) and generally expensive. This paper introduces a tool-equipped method for the successful and eased combination and implementation of all four V&V strategies to provide stakeholders with a high level of confidence in decision-making based on models.}
}
@article{ABDOLI2016713,
title = {Designing Warehouse Logical Architecture by Applying Object Oriented Model Based System Engineering},
journal = {Procedia CIRP},
volume = {50},
pages = {713-718},
year = {2016},
note = {26th CIRP Design Conference},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2016.04.108},
url = {https://www.sciencedirect.com/science/article/pii/S2212827116302967},
author = {Shiva Abdoli and Sami Kara},
keywords = {Warehouse, complex system, system of system, model based system engineering, object oriented design},
abstract = {Warehouses perform series of interacting processes. Each process includes sub-processes and requires different resources. This structure makes warehouses complex-system or system-of-system (SOS) from design perspective. Model based system engineering (MBSE) facilitates SOS design. On the other hand, object-oriented modeling (OO) is a well-known approach for capturing complexity of software systems. This paper aims leveraging conceptual design of warehouse, by applying OO in MBSE. In this context, warehouse is analyzed with respect to abstract processes which transform item status/unit. Afterwards, warehouse logical architecture is designed using these processes. Introduced approach develops coherent meta-model for generating design alternatives in conceptual design stage.}
}
@article{CORNS2012187,
title = {Preface to Part III Model Based Systems Engineering},
journal = {Procedia Computer Science},
volume = {8},
pages = {187},
year = {2012},
note = {Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.01.040},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912000415},
author = {Steven Corns}
}
@article{COLE2019202,
title = {Model-based systems engineering: application and lessons from a technology maturation project},
journal = {Procedia Computer Science},
volume = {153},
pages = {202-209},
year = {2019},
note = {17th Annual Conference on Systems Engineering Research (CSER)},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2019.05.071},
url = {https://www.sciencedirect.com/science/article/pii/S1877050919307306},
author = {Bjorn Cole and Vikram Mittal and Stephen Gillespie and Nguyen La and Richard Wise and Alex MacCalman},
keywords = {Model-Based Systems Engineering, test framework, integration},
abstract = {The Tactical Assault Light Operator Suit (TALOS) project is a Special Operations Command (SOCOM) initiative to enhance operator performance, situational awareness, survivability, and lethality. The project adopted a Model-Based Systems Engineering (MBSE) approach to manage the structural system configuration and support the test and integration plan. This approach relies on a unified model in the Systems Modeling Language (SysML) to capture the logical and physical aspects of the system design. The MBSE approach was used to develop a test and evaluation framework that allows for traceability of test plans back to performance requirements. Additionally, the model supported the integration of hardware and software as well as the design of wire harnesses; the MBSE approach provided benefits over more traditional integration techniques. This paper provides lessons learned including the need to balance requirements analysis with functional characterization and the products that were generated from the model. Overall the adoption of the MBSE approach provided lessons on managing a system’s configuration among a distributed team.}
}
@article{WU2021851,
title = {Maturity assessment of Systems Engineering reusable assets to facilitate MBSE adoption},
journal = {IFAC-PapersOnLine},
volume = {54},
number = {1},
pages = {851-856},
year = {2021},
note = {17th IFAC Symposium on Information Control Problems in Manufacturing INCOM 2021},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2021.08.187},
url = {https://www.sciencedirect.com/science/article/pii/S2405896321009575},
author = {Quentin Wu and David Gouyon and Eric Levrat},
keywords = {Model-Based Systems Engineering, Engineering Assets, Maturity Evaluation, Reuse},
abstract = {To enable the transition towards Model-Based Systems Engineering, it is necessary to provide engineering assets models during system architecture design phases. As promoted in the software community, systematic reuse allows significant gains in development productivity and quality. Thus, to develop a reuse strategy, a maturity scale facilitates determining the maturity level at which a company operates. In this way, it is possible to assess the progress margins and therefore estimate necessary efforts to improve maturity through a corresponding action plan. For this reason, this article proposes a scale to evaluate the maturity of the Systems Engineering assets reuse process.}
}
@article{DABKOWSKI201389,
title = {Network Science Enabled Cost Estimation in Support of MBSE},
journal = {Procedia Computer Science},
volume = {16},
pages = {89-97},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.010},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000112},
author = {Matthew Dabkowski and Jose Estrada and Ben Reidy and Ricardo Valerdi},
keywords = {Model Based Systems Engineering, DoD Architecture Framework, COSYSMO, Network science},
abstract = {As Model-Based Systems Engineering (MBSE) continues to mature, additional analyses can be performed to understand the relationships between a system's cost, schedule, and performance. The DoD Architecture Framework (DoDAF) is one of many approaches for representing the relationship between system components. If DoDAF diagrams - such as those provided in the Systems View - are treated as networks, they can be mathematically analyzed, providing additional summary metrics that might yield valuable insight into the degree of effort (i.e., cost) required to bring a system to fruition. For instance, if we view the addition of a new subsystem to the system's architecture abstractly as the addition of a vertex to a network, we can apply contemporary methods from network science to grow the network and estimate its cost. Unlike rules of thumb, this approach provides us with an objective way to quantify and assess change. The objective of this work is to turn MBSE knowledge into computational knowledge in order to support tradeoffs, change impact analysis, and related approaches early in the life cycle.}
}
@article{AKUNDI2021101,
title = {A Review on Application of Model Based Systems Engineering to Manufacturing and Production Engineering Systems},
journal = {Procedia Computer Science},
volume = {185},
pages = {101-108},
year = {2021},
note = {Big Data, IoT, and AI for a Smarter Future},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2021.05.011},
url = {https://www.sciencedirect.com/science/article/pii/S1877050921010917},
author = {Aditya Akundi and Viviana Lopez},
keywords = {MBSE, Manufacturing Engineering, Production Engineering, Modeling Language, Modeling Tools, Modeling Methods, SysML, Industry 4.0},
abstract = {Increasing complexity in today’s manufacturing and production industry due to the need for higher flexibility and competitiveness is leading to inconsistencies in the iterative exchange loops of the system design process. To address these complexities and inconsistencies, an ongoing industry trend for organizations to make a transition from document-centric principles and applications to being model-centric is observed. In this paper, a literature review is presented highlighting the current need for an industry-wide transition from document-centric systems engineering to Model-Based Systems Engineering (MBSE). Further, investigating the tools and languages used by the researchers for facilitating the transition to and the integration of MBSE approach, we identify the most commonly used tools and languages to highlight the applicability of MBSE in the manufacturing and production industry.}
}
@article{XUEMEI20211046,
title = {A visualization framework for product manufacturing data},
journal = {Procedia CIRP},
volume = {104},
pages = {1046-1051},
year = {2021},
note = {54th CIRP CMS 2021 - Towards Digitalized Manufacturing 4.0},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.11.176},
url = {https://www.sciencedirect.com/science/article/pii/S221282712101074X},
author = {Liu Xuemei and Yang Xiaolang},
keywords = {Visualization, Domain specific meta-model, SysML, Resource allocation},
abstract = {Model-based systems engineering (MBSE) plays a vital role in complex product development. In order to make the system modeling processes consistent with the business processes of the industry, it is necessary to use the product lifecycle management (PLM) system to manage system models. In this paper a SysML-based domain specific meta-model is proposed to support a visualization framework that includes graphics and data synchronization, which enables PLM software to present the product manufacturing data and models under the practicing of MBSE. Product manufacturing process and data are described, and the allocation of resource is represented in the early design phase.}
}
@article{HALSTENBERG2019157,
title = {Study on the feasibility of modelling notations for integrated Product-Service Systems Engineering},
journal = {Procedia CIRP},
volume = {83},
pages = {157-162},
year = {2019},
note = {11th CIRP Conference on Industrial Product-Service Systems},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2019.02.133},
url = {https://www.sciencedirect.com/science/article/pii/S2212827119302549},
author = {Friedrich A. Halstenberg and Rainer Stark},
keywords = {Product Service Systems, PSS design, Systems Engineering, Model-based Systems Engineering, Modeling Notations},
abstract = {Developing products and services concurrently bears great potential as well as challenges. Systems Engineering (SE) is an interdisciplinary approach, which aims to enable the realization of successful systems. Model-based systems engineering (MBSE) is a SE approach focusing on the utilization of models for information exchange instead of documents. Methods and tools for MBSE are advanced and effective. Nevertheless, the field predominantly focuses on technical systems rather than on services and business models. In the context of the increasing importance of the Service Economy and rising innovative business models, an extension of the MBSE methods and tools to a service- and business model-centric view constitutes a research gap. Sufficient methods for requirements definition in PSS design have been developed. In concept design, the outline or rough concept of the product is defined. This step is currently not supported with useful methods. In order to address this research gap, the authors have proposed Integrated Product Service Architectures (IPSSAs) in previous research, which depict physical product architectures and service architectures in one integrated model. In previous studies, Systems Modelling Language (SysML) was identified as suitable modelling notations for IPSSAs, but several drawbacks of the notation were noted. Within this paper, a study is presented, which identifies suitable combinations of modelling notations and diagrams for IPSSA modelling. The combination of several diagrams from SysML, Business Process Modelling Notation (BPMN) and Data Flow Architecture is used on the practical example of ELSA (Engineering Living Systems of Autonomy), a service robot for guest and plant care. In order to address the lack of process-based service modelling in SysML, BPMN is added to common SysML modelling. In order address the data flow dimension, a third modelling notation, the Data Flow Architecture is proposed.}
}
@article{HALSTENBERG2021379,
title = {Knowledge transfer and engineering methods for smart-circular product service systems},
journal = {Procedia CIRP},
volume = {100},
pages = {379-384},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.088},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121005564},
author = {Friedrich Halstenberg and Jasmin Dönmez and Mark Mennenga and Christoph Herrmann and Rainer Stark},
keywords = {Smart PSS, Smart-circular PSS, Model-based systems Engineering (MBSE), Sustainability},
abstract = {Smart Product Service Systems (Smart PSS) have the potential to contribute to a Circular Economy (CE), but in the design of these systems engineering teams often lack information and knowledge on CE strategies and processes. Against this background, the authors propose a knowledge transfer system for the design of Smart-circular PSS. The system can be used in the concept phase of the Smart PSS development process and delivers information on CE strategies via a Smart-circular PSS Lifecycle Flowchart (SCPLF) and service archetypes. These strategies can be selected, supplemented and extended according to individual user requirements. The approach was validated using an intelligent street lighting system. This paper summarizes findings from the application and provides insights into potentials and limitations for the design of Smart-circular Smart PSS.}
}
@article{SINDIY201349,
title = {Introduction to Information Visualization (InfoVis) Techniques for Model-Based Systems Engineering},
journal = {Procedia Computer Science},
volume = {16},
pages = {49-58},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.006},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000070},
author = {Oleg Sindiy and Krystof Litomisky and Scott Davidoff and Frank Dekens},
keywords = {Model-based systems engineering, information visualization},
abstract = {One of the barriers to the success of Model-Based Systems Engineering (MBSE) efforts is realizing effective communication of the output diagrams—i.e., modeling views—that address the concerns of, and inform, a broad spectrum of customer stakeholders. Abstracting and implementing the visual presentation of views—as products of very complex system models—is nearly as important to the effectiveness of these efforts to inform decision-making as the technical competency and completeness of those models. However, the information visualization of data from complex system models is often treated second to the technical considerations. This paper introduces high-level guidelines for visual presentation of MBSE efforts. These insights are presented such that they conform to numerous system modeling languages/representation standards. The insights are drawn from best practices of Information Visualization as applied to aerospace-based applications. For example, the paper presents how modelers can take advantage of functionality in existing modeling notions and software tools that implement them, and also the importance of keeping in mind the final presentation media, presentation venues, and historically accepted viewpoint styles. The paper also presents a concept for how to move beyond traditionally static outputs; in turn, allowing users to dynamically manipulate the output views within the context of their real-time concerns to answer specific questions about the modeled system(s).}
}
@article{JAPS2021187,
title = {SAVE: Security & safety by model-based systems engineering on the example of automotive industry},
journal = {Procedia CIRP},
volume = {100},
pages = {187-192},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.053},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121005163},
author = {Sergej Japs and Harald Anacker and Roman Dumitrescu},
keywords = {Security, Safety, Cyber-physical systems, Systems architecture, Systems engineering, theory, Systems Modeling Language},
abstract = {Cyber-physical systems (CPS), like autonomous vehicles, are intelligent and networked. The development of such systems requires interdisciplinary cooperation between different stakeholders. A lack of system understanding between stakeholders can lead to unidentified security threats & safety hazards, resulting in high costs in product development. In particular, a lack of an integrative consideration of security threats & safety hazards can compromise safety compliance for CPS. Model-based systems engineering (MBSE) improves the understanding of systems between stakeholders by additionally creating supporting models. However, MBSE approaches only partially address security threats & safety hazards. In particular, their integrative consideration is not taken into account. Established security & safety approaches either are only applicable to specific disciplines or only partially consider security threats & safety hazards. In this paper we present a method that enables the early identification of safety relevant security threats. The method is designed to be applied in workshops with an interdisciplinary team of stakeholders and is used to determine initial results for the system architecture design phase. We illustrate our approach with the example of the automotive sector. To build a realistic system architecture we identified 18 architectural vehicle components including relevant architectural constraints. Finally, we present an evaluation of the method, based on a workshop with 30 master students.}
}
@article{SPUTZ202237,
title = {Classification of Simulation Models for the Model-based Design of Plastic-Metal Hybrid Joints},
journal = {Procedia CIRP},
volume = {109},
pages = {37-42},
year = {2022},
note = {32nd CIRP Design Conference (CIRP Design 2022) - Design in a changing world},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2022.05.211},
url = {https://www.sciencedirect.com/science/article/pii/S221282712200659X},
author = {Kathrin Spütz and Julius Berges and Georg Jacobs and Joerg Berroth and Christian Konrad},
keywords = {Model-based system engineering, Laser-based hybrid joints, Model chains, Model integration, Model execution},
abstract = {Laser-based hybrid joints (LBHJ) are promising due to low processing time and costs compared to conventional joining technologies. During the design of LBHJs, considering interactions between different domains (engineering, production, controlling) is required. This yields potential for a cross-domain design and optimization. However, considering the interactions is challenging and leads to iterations and inefficiency in product development. To map the interactions and exploit the potential of LBHJs, model-based systems engineering (MBSE) is a promising approach. With MBSE, domain models are integrated into a central system model and the model parameters are interconnected. To support a model-based design of LBHJs in the different phases of product development, usually several models are required. Therefore, multiple models in different fidelities for the same purpose exist (e.g. finite element and analytical models for joint strength estimation). Currently, this results in complex system models that are difficult to understand, reuse, extend, and maintain. The application of MBSE for the design of LBHJ is therefore inhibited. To overcome this deficit, the integration and linkage of domain models in the system model must be formally structured. Therefore, this paper presents a SysML metamodel, which classifies the domain models, defines their standardized structure and specifies their integration and linkage within the system model. The formal structuring is based on the classification criteria purpose. For each purpose, a superordinate model is built and connected to the domain models. To avoid complex system models that are vulnerable to changes, only superordinate domain models are linked with each other. Domain models can thus be easily replaced, without affecting the consistency of the system model. The results show that system models, built with this approach, can be easily created and used for the model-based design of LBHJs. Furthermore, interactions between the domains can be handled and efficiency in product development is increased.}
}
@article{WANG2021102074,
title = {Unified modeling for digital twin of a knowledge-based system design},
journal = {Robotics and Computer-Integrated Manufacturing},
volume = {68},
pages = {102074},
year = {2021},
issn = {0736-5845},
doi = {https://doi.org/10.1016/j.rcim.2020.102074},
url = {https://www.sciencedirect.com/science/article/pii/S0736584520302842},
author = {Haoqi Wang and Hao Li and Xiaoyu Wen and Guofu Luo},
keywords = {Model-based systems engineering, Digital twin, System design, Unified modeling, Systems modeling language},
abstract = {While Model-Based Systems Engineering (MBSE) improves the ambiguity problem of the conventional document-based way, it brings management complexity. Faced with the complexity, one of the core issues that companies care about is how to effectively evaluate, predict, and manage it in the early system design stage. The inaccuracy of contemporary complexity measurement approaches still exits due to the inconsistency between the actual design process in physical space and the theoretical simulation in virtual space. Digital Twin (DT) provides a promising way to alleviate the problem by bridging the physical space and virtual space. Aiming to integrate DT with MBSE for the system design complexity analysis and prediction, based on previous work, an integration framework named System Design Digital Twin in 5 Dimensions was introduced from a knowledge perspective. The framework provides services for design complexity measurement, effort estimation, and change propagation prediction. Then, to represent the system design digital twin in a unified way, a modeling profile is constructed through SysML stereotypes. The modeling profile includes System design digital model in virtual space profile, system services profile, relationships profile and digital twin data profile. Finally, the system design of a cube-satellite space mission demonstrates the proposed unfiled modeling approach.}
}
@article{SUNNETCIOGLU2018311,
title = {Using Transitive Relations for Automatic Creation of Consistent Traceability in Model-based Systems Engineering},
journal = {Procedia Manufacturing},
volume = {24},
pages = {311-318},
year = {2018},
note = {4th International Conference on System-Integrated Intelligence: Intelligent, Flexible and Connected Systems in Products and Production},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2018.06.022},
url = {https://www.sciencedirect.com/science/article/pii/S2351978918305390},
author = {Atakan Sünnetcioglu and Rainer Stark},
keywords = {Traceability, Transitivity Rule, Model-based Systems Engineering},
abstract = {Traceability allows product developers to know more about the logical relationships in model-based systems engineering. Despite the known advantages, traceability is still not established as a standard in product development. High amount of necessary work force for traceability creation counts as one of the major obstacles against traceability. In this work, we investigate the applicability of transitivity rule to automate the creation of traceability. The conducted experiment shows, that automated traceability creation with transitivity rule is possible, however, wrong tracelinks are still inevitable.}
}
@article{SILVA2023102125,
title = {Simultaneous and collaborative development of satellites and Information Systems to support their lifecycle processes},
journal = {Information Systems},
volume = {111},
pages = {102125},
year = {2023},
issn = {0306-4379},
doi = {https://doi.org/10.1016/j.is.2022.102125},
url = {https://www.sciencedirect.com/science/article/pii/S030643792200103X},
author = {Ana Claudia de Paula Silva and Geilson Loureiro},
keywords = {Information Systems, Space Systems Engineering, Satellite development, MBSE},
abstract = {Space Systems Engineering is the domain in which satellites are developed. A lot of information gathered by the systems engineer to develop a space product is also necessary and gathered by the software engineer in the Software Engineering domain to develop the Information Systems that will support the lifecycle processes of that product. Motivated by this reality, this paper aims to demonstrate that the work of the software engineer can be integrated with that of the systems engineer during the Systems Engineering process. We assumed the use of Model-Based Systems Engineering (MBSE) and Systems Concurrent Engineering (SCE) as the approaches to engineering a satellite and looked at the activities performed by the systems engineer to identify how the software engineer’s work can be inserted into the Systems Engineering process. We use the AMAZONIA 1 satellite to exemplify and focus on the process of assembly, integration and testing of this satellite. We concluded that simultaneous and collaborative work between the Systems Engineering and Software Engineering domains is feasible and can bring quality and productivity gains for both sides.}
}
@article{ISLAM2021708,
title = {Visualising food traceability systems: A novel system architecture for mapping material and information flow},
journal = {Trends in Food Science & Technology},
volume = {112},
pages = {708-719},
year = {2021},
issn = {0924-2244},
doi = {https://doi.org/10.1016/j.tifs.2021.04.020},
url = {https://www.sciencedirect.com/science/article/pii/S0924224421002806},
author = {Samantha Islam and Jonathan M. Cullen and Louise Manning},
keywords = {Food traceability, Food traceability system, Information loss, Model based system engineering, Visualisation},
abstract = {Background
Traceability of food products, ingredients and associated operations are important requirements for improving food safety and consumer confidence. Food traceability systems (FTSs) often suffer from inefficiency in either material or information flow within an enterprise or between supply chain partners. Modelling of system architecture is a visualisation approach that allows multiple parties to collaborate in a system design process, identify its inefficiencies and propose improvements. However, there is little academic research on the ability to use a standard visualisation tool that supports collaborative design and considers both material and information flow for a given food traceability system.
Scope & approach
The aim of this research is to propose a new visualisation approach that allows supply chain operators to collaborate effectively in the design process of FTSs capable of maintaining streamlined information flow, minimising information loss, and improving supply chain performance.
Key findings & conclusion
Food traceability systems are complex, encompassing processes, material flow, information flow, techniques, infrastructure, people and control strategies. Screening of literature demonstrates that model-based system engineering (MBSE) offers a sound way for visualisation of such complex systems. However, in the food traceability literature, an MBSE-based standardised traceability system modelling approach is absent. This study makes a strong contribution to existing literature by proposing a novel, material and information flow modelling technique (MIFMT), to visualise FTS architecture. MIFMT can support common understanding and iterative implementation of effective FTSs that contextualise food supply chains at multiple levels and provides opportunity to identify points at where inefficiencies can occur so that actions can be taken to mitigate them.}
}
@article{PFEIFER2020228,
title = {Towards a modular product architecture for electric ferries using Model-Based Systems Engineering},
journal = {Procedia Manufacturing},
volume = {52},
pages = {228-233},
year = {2020},
note = {System-Integrated Intelligence – Intelligent, Flexible and Connected Systems in Products and ProductionProceedings of the 5th International Conference on System-Integrated Intelligence (SysInt 2020), Bremen, Germany},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2020.11.039},
url = {https://www.sciencedirect.com/science/article/pii/S2351978920321818},
author = {Stefan Pfeifer and Tobias Seidenberg and Christoph Jürgenhake and Harald Anacker and Roman Dumitrescu},
keywords = {Model-Based Systems Engineering, Modularization, Ship Design},
abstract = {With the reduction of the allowed emission values, the need for fast and emission-free passenger transport is growing - even on coastal or inner city waterways. Many cities and regions are therefore striving to quickly replace their existing conventional diesel ferries with electrically powered passenger ferries. Shipbuilding, however, is characterized by individual applications and corresponding one-off productions. While the concept of modularization has proven itself in many industries to realize individual products in a short development time, such approaches are hardly found in the maritime industry. In particular, the high degree of dependency between the individual system elements of a ship represents a major challenge in the development of modular ships and ship architectures. This dependencies are further increased in the case of electrically driven high-speed ships, which in the present case are used for passenger transport in urban areas. This paper presents an approach for identifying reusable and standardized modules in shipbuilding for high-speed vessels using Model-Based Systems Engineering methods. The goal of the approach is to create a multi-domain system model that enables developers to identify use-case spanning standard modules and interfaces.}
}
@article{GREGORY2020110453,
title = {The long and winding road: MBSE adoption for functional avionics of spacecraft},
journal = {Journal of Systems and Software},
volume = {160},
pages = {110453},
year = {2020},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2019.110453},
url = {https://www.sciencedirect.com/science/article/pii/S0164121219302274},
author = {Joe Gregory and Lucy Berthoud and Theo Tryfonas and Alain Rossignol and Ludovic Faure},
keywords = {MBSE, Modelling, Functional avionics, Systems engineering, Thematic analysis},
abstract = {Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE). It is claimed that MBSE promotes consistency, communication, clarity and maintainability within systems engineering projects and addresses issues associated with cost, complexity and safety. While these potential benefits of MBSE are generally agreed upon by would-be practitioners, its implementation is challenging and many organisations struggle to overcome the cultural and technical hurdles along the long and winding road to MBSE adoption. In this paper, we aim to ease the process of implementation by investigating where the current issues with the existing systems engineering processes lie, and where a model-based approach may be able to help, from the perspective of engineers working on spacecraft functional avionics in Airbus. A repeatable process has been developed to elicit this information. Semi-structured interviews have been conducted with 25 Airbus engineers working in Operations, Software and Failure, Detection, Isolation and Recovery. The acquired data has been thematically analysed to extract common themes from the responses. The results presented in this paper have yielded four recommended application areas to consider when applying MBSE to Functional Avionics: organisation modelling; early functional validation; communication and consistency; template model framework development.}
}
@article{KIM201398,
title = {Application of Integrated Modeling and Analysis to Development of Complex Systems},
journal = {Procedia Computer Science},
volume = {16},
pages = {98-107},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.011},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000124},
author = {Hongman Kim and David Fried and Peter Menegay and Grant Soremekun and Christopher Oster},
keywords = {Model-based system development, Model-based systems engineering (MBSE), SysML, integrated analysis, requirements},
abstract = {Model-based systems engineering (MBSE) is an approach to improve traditional document-based systems engineering approach through the use of a system model. In the current practice of system developments, there exists a large gap between systems engineering activities and engineering analyses, because systems engineers and engineering analysts are using different models, tools and terminology. The gap results in inefficiencies and quality issues that can be very expensive to fix. An integrated modeling and analysis capability was developed that bridges the gap. The technical approach is based on integrating SysML modeling tools with a process integration and design optimization framework. A capability was developed to automatically generate analysis models from a system model and then execute the analytical models. The integrated toolset enables engineers to quickly evaluate system configurations using realistic analysis models and automatically check requirements compliance. The capability was applied to a number of system development projects in industry, including a ground-based radar system. The integrated approach allowed the design teams to perform continuous design, analysis, and trade studies throughout the design process, and respond quickly to changes in requirements and design configurations.}
}
@article{KHANDOKER2022111306,
title = {Towards a logical framework for ideal MBSE tool selection based on discipline specific requirements},
journal = {Journal of Systems and Software},
volume = {189},
pages = {111306},
year = {2022},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2022.111306},
url = {https://www.sciencedirect.com/science/article/pii/S0164121222000553},
author = {Azad Khandoker and Sabine Sint and Guido Gessl and Klaus Zeman and Franz Jungreitmayr and Helmut Wahl and Andreas Wenigwieser and Roland Kretschmer},
keywords = {MBSE, Filtration method, Tool selection, Software QFD},
abstract = {Model-Based Systems Engineering (MBSE) has emerged with great potential to fulfill the non-linearly rising demand in interdisciplinary engineering, e.g., product development. However, the variety and complexity of MBSE tools pose difficulties in particular industrial applications. This paper tries to serve as a guideline to find the ideal tool for a specific industrial application as well as to highlight the key criteria that an industry might consider. For this purpose, we propose a logical framework for MBSE tool selection, which is based on market research, the approaches of Quality Function Deployment (QFD), and decision matrix. As customers are at the center of any product, accordingly the needs of MBSE tool users are addressed within this research as the fundamental starting point. Market research and extensive discussions with MBSE tool vendors and academia show the current situation of MBSE tools. To compare the performance of the considered tools, a set of user needs is defined. QFD is performed to analyze the user needs with respect to evaluable technical properties. Subsequently each tool performance is assessed using a decision matrix. Through this process, a well-defined functional structure of MBSE tools is sketched, and in order to identify the properties of an ideal tool, all the attributes of different MBSE tools are mapped to a common platform. For the purpose of evaluation, we apply our proposed logical framework to select an exemplary MBSE tool for interdisciplinary application.}
}
@article{GRALER2021518,
title = {Integrating human factors in the model based development of cyber-physical production systems},
journal = {Procedia CIRP},
volume = {100},
pages = {518-523},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.113},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121005850},
author = {Iris Gräßler and Dominik Wiechel and Daniel Roesmann},
keywords = {Model based systems engineering, Human System Integration, Human factors, Cyber-Phyisical Production Systems},
abstract = {In order to optimize production processes and to avoid errors, it is not only necessary to automate processes, but also to integrate workers wit their individual personality and skill profiles. For this purpose, human factors should be considered in the entire design process. The integrate view of mental human models, the cognitive demand of the working environment and the automation design is essential. Human-Syste Integration (HSI) constitutes a promising approach. Current model-based approaches offer possibilities to analyze and optimize tasks within a overall system, but they still lack integration. This leads to the research question: How can human factors be integrated into a system model of socio-technical, Cyber-Physical Production System? The paper at hand contributes an approach of human factor integration into the procedu of Model-Based Systems Engineering for Cyber-Physical Production Systems (CPPS). The approach combines a system model of a CPPS wi HSI concepts. In accordance to the benefits of MBSE, SysML is selected to integrate human factors in the development process of a CPPS. Th approach is divided into five steps, which include the extension of the SysML meta model. This allows the optimization of skill-based huma machine interaction. Defined HSI-Profiles enable system developers to integrate employee requirements at early stages within the developme process. The approach is demonstrated by the maintenance of a 3D-Printer as a case example. This research enables system developers to depi individual workers with the help of the developed concepts and systematically integrate them into the development process of a CPPS.}
}
@article{GRAIGNIC201359,
title = {Complex System Simulation: Proposition of a MBSE Framework for Design-Analysis Integration},
journal = {Procedia Computer Science},
volume = {16},
pages = {59-68},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.007},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000082},
author = {Pascal Graignic and Thomas Vosgien and Marija Jankovic and Vincent Tuloup and Jennifer Berquet and Nadège Troussier},
keywords = {Complex system, Model-Based System Engineering, Modelling and Simulation, Design Integration},
abstract = {The multi-disciplinary nature of complex system, such as aero engines, requires a data structure that considers the behavioural interactions within the system. This paper focuses on the management of simulations models and data, with respect to complex system structure. It is proposed to use model based system engineering (MBSE) methodology to support modelling activities and improve the integration of simulation activities in the design process. Current studies on MBSE address the issue of representing and integrating design models with diverse analysis/simulation/behavioural models. However, some limitations can be identified, especially regarding the federation of system presentation for addressing the overall behavioural aspects of the product (multi-physic, local and global behaviours) and thus considering the several system levels. Our proposal is to provide a software framework based on a data model that manages complex system structure. This data model structures behavioural information considering three major interactions:•Interactions between components simulation models,•Interactions considering multi-level behaviours (e.g. use of components simulation for a module simulation) and•Interactions between domain behaviours (e.g. Thermal impact on mechanical). A demonstration of this software framework is proposed, based on the set-up of a mechanical simulation of an aero engine using CATIA/SIMULIA V6.}
}
@article{RIESENER2021439,
title = {Methodology for iterative system modeling in agile product development},
journal = {Procedia CIRP},
volume = {100},
pages = {439-444},
year = {2021},
note = {31st CIRP Design Conference 2021 (CIRP Design 2021)},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.05.101},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121005692},
author = {Michael Riesener and Christian Doelle and Stefan Perau and Philipp Lossie and Guenther Schuh},
keywords = {Agile Product Development, Model Based Systems Engineering, Digital Prototype},
abstract = {Nowadays, manufacturing companies are challenged by dynamic market environments caused by increasing globalization, digitization and climate change. Therefore, the ability to act with speed, flexibility and efficiency in product development becomes inevitable for success. Moreover, various stakeholder requirements have to be considered and time to market has to be reduced. The development of complex mechatronic systems also requires an interdisciplinary cooperation of various engineering domains, i.e. mechanics, electrical engineering and computer science. Agile product development addresses these challenges with its focus on the iterative development of functional system increments. As a result, it enables to reduce time to market and improves handling of changing customer requirements. The model-based systems engineering (MBSE) approach with its centralized system model serves as a single source of truth and data repository. Thereby, it enhances efficiency and transparency along the product development process. The integration of MBSE into agile product development offers numerous opportunities, such as virtual prototypes and the build-up of a product’s digital twin. As the design of a complete system model at the beginning of a development process requires high temporary resources, an iterative approach should be applied to incrementally build the system model along the product development process. In this paper a methodology for the iterative system modeling in agile product development is presented. In each agile sprint, design parameters based on a development question are elaborated. The information that supports answering the development questions is provided by the system model. Since the system model itself can only provide but not process information it is necessary to select the best toolset to process the necessary information. By transferring the information back to the system model, the elements of the system model itself are iteratively developed and updated.}
}
@article{WIBBEN2015147,
title = {Model-Based Systems Engineering approach for the development of the science processing and operations center of the NASA OSIRIS-REx asteroid sample return mission},
journal = {Acta Astronautica},
volume = {115},
pages = {147-159},
year = {2015},
issn = {0094-5765},
doi = {https://doi.org/10.1016/j.actaastro.2015.05.016},
url = {https://www.sciencedirect.com/science/article/pii/S0094576515001988},
author = {Daniel R. Wibben and Roberto Furfaro},
keywords = {OSIRIS-REx, Model-Based Systems Engineering},
abstract = {The Origins Spectral Interpretation Resource Identification Security Regolith Explorer (OSIRIS-REx) asteroid sample return mission, which is planned for launch in 2016, will study and return a sample from asteroid Bennu to Earth for further detailed analysis. This mission is unique in that little information about Bennu, including the gravity field, shape model, and thermal environment, is well known at this time. This information will instead be determined via a thorough close-proximity operations phase that will fully characterize and analyze the asteroid prior to retrieving the sample, requiring a complex ground system architecture in order to provide scientists the necessary information to make key decisions regarding sample collection. Importantly, the OSIRIS-REx Science Processing and Operations Center (SPOC) is at the heart of the process to characterize the asteroid and collect the sample, as its high level functions include the data processing necessary to fully analyze the information from the spacecraft and the generation of instrument observation sequences to collect the necessary data. These factors necessitate a strong systems engineering focus across the project. The SPOC team has chosen to tackle this problem by utilizing a Model-Based Systems Engineering (MBSE) approach to facilitate the development of the OSIRIS-REx ground system, and more specifically, the SPOC. MBSE is a relatively new approach that formally applies modeling to support system requirements, design, analysis, and verification and validation activities, and only recently been used in the development of the ground system of a space mission. As such, this approach has been lauded in key mission reviews as a significant strength of the project, especially for its ability to provide a consistent approach for the entire ground systems team. Importantly, the MBSE approach has provided many benefits to the SPOC Systems Engineering team. In particular, the MBSE approach has been utilized to generate a consistent architecture across all ground system elements, to manage all OSIRIS-REx ground system requirements easily in one location, to perform verification and validation of these requirements, and to validate the ground system operations time line. Further, through the use of common tools, project systems׳ engineers can quickly and efficiently generate documentation based on the developed model, including interface, requirements, and verification documentation. Finally, these same tools allow for the potential future re-usability of the development currently being performed for use in future mission architectures.}
}
@article{LAING2020103163,
title = {Questioning integration of verification in model-based systems engineering: an industrial perspective⋆},
journal = {Computers in Industry},
volume = {114},
pages = {103163},
year = {2020},
issn = {0166-3615},
doi = {https://doi.org/10.1016/j.compind.2019.103163},
url = {https://www.sciencedirect.com/science/article/pii/S0166361519302799},
author = {C. Laing and P David and E. Blanco and X. Dorel},
keywords = {Model Based Systems Engineering, Verification, Industrial practices, Survey},
abstract = {The increasing of complexity of industrial products makes Verification and Validation procedures challenging. Model-Based Systems Engineering (MBSE) has been proposed as an approach to manage such complexity through the formalized application of models throughout the systems development life cycle to support verification activities. The purpose of this paper is to make a first step towards developing a verification strategy by performing a qualitative survey on current industrial practices against the state of the art in MBSE. Data had been collected through workshops of 16 engineering organizations located in the Rhone-Alpes region of France. Key success criteria for integrating model-based verification with MBSE are identified by industry respondent. These criteria allow to analyse the top verification methods presented in MBSE publications and compare them to current practices. To further validate the use of these presented methods, interviews and observations were conducted to analyse the methods through different industrial perspectives and identify their feasibility for successful application. The findings of this study gives a picture of current practices in integrating verification and MBSE in industry. The paper discusses the impact of implementing such practices in companies beginning to adopt MBSE approaches. It is concluded by identifying opportunities and barriers for Model-Based Verification adoption.}
}
@article{WHITE2021750,
title = {Environment modeling for evaluating system variants in model-based systems engineering},
journal = {Procedia CIRP},
volume = {104},
pages = {750-755},
year = {2021},
note = {54th CIRP CMS 2021 - Towards Digitalized Manufacturing 4.0},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.11.126},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121010246},
author = {Dustin White and Nada Sahlab and Nasser Jazdi and Michael Weyrich},
keywords = {Model-based systems engineering, variant management, variant generation, environment model, system context awareness},
abstract = {Model-based systems engineering is a methodology for the interdisciplinary system development using different domain models. Considering the intended system’s environment and context of usage in early design phases is a way of bridging the gap from system’s design to its real-life applicability. Simulations represent a possible approach to consider different constellations but are effortful. Therefore, we present a generic environment modeling approach to evaluate different environmental models with their respective environmental, user and system’s impact based on generated system variants derived from system requirements. In this sequential process, we consistently link and evaluate system variants to possible system contexts.}
}
@incollection{FRIEDENTHAL201531,
title = {Chapter 3 - Getting Started with SysML},
editor = {Sanford Friedenthal and Alan Moore and Rick Steiner},
booktitle = {A Practical Guide to SysML (Third Edition)},
publisher = {Morgan Kaufmann},
edition = {Third Edition},
address = {Boston},
pages = {31-51},
year = {2015},
series = {The MK/OMG Press},
isbn = {978-0-12-800202-5},
doi = {https://doi.org/10.1016/B978-0-12-800202-5.00003-5},
url = {https://www.sciencedirect.com/science/article/pii/B9780128002025000035},
author = {Sanford Friedenthal and Alan Moore and Rick Steiner},
keywords = {MBSE, SysML},
abstract = {Chapter 3 provides an introduction to SysML and guidance on how to begin modeling with SysML. The chapter provides a brief overview of SysML, and then introduces a simplified version of the language that is referred to as SysML-Lite, along with a simplified example, and tool tips on how to capture the model in a typical modeling tool. This chapter also introduces a simplified model-based systems engineering (MBSE) method that is consistent with the systems engineering process described in Chapter 1, Section 1.2. The chapter finishes by describing some of the challenges involved in learning SysML and MBSE.}
}
@article{LOPES2011441,
title = {Model Based Systems Engineering for Smart Grids as Systems of Systems},
journal = {Procedia Computer Science},
volume = {6},
pages = {441-450},
year = {2011},
note = {Complex adaptive sysytems},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2011.08.083},
url = {https://www.sciencedirect.com/science/article/pii/S1877050911005485},
author = {A.J. Lopes and R. Lezama and R. Pineda},
keywords = {Smart Grid, Model Based Systems Engineering, System of Systems, Systems Engineering, Enterprise Architectures},
abstract = {This paper presents a System of Systems (SOS) approach to understand, analyze, and design modern energy Smart Grids using Model-Based Systems Engineering (MBSE) methodologies. The concept and definition of a Smart Grid as SOS is presented and Smart Grids are analyzed in the form of detailed architectural artifacts with System Modeling Language (SySML) using industry standards. As part of this research, the design space for Smart Grids was viewed from a logical, behavioral, physical, and techno-economical perspective for the optimal integration of various systems. In summary, this paper uses Methods, Processes, and existing Technologies (MPTs) in systems engineering (SE) and extends them to SOS perspective to help provide an end-to-end life cycle view of a fully functional energy Smart Grid system; in addition, we complement the NIST reference model with an Enterprise layer to address specific enterprise strategies. The paper intends to provide an insight into the methodologies that are involved to realize a functional Smart Grid as a self sustaining energy enterprise and presents the challenges and benefits of achieving the above goal.}
}
@article{HU2023108866,
title = {Event-based safety and reliability analysis integration in model-based space mission design},
journal = {Reliability Engineering & System Safety},
volume = {229},
pages = {108866},
year = {2023},
issn = {0951-8320},
doi = {https://doi.org/10.1016/j.ress.2022.108866},
url = {https://www.sciencedirect.com/science/article/pii/S0951832022004835},
author = {Yunpeng Hu and Qibo Peng and Qing Ni and Xinfeng Wu and Dongming Ye},
keywords = {Model-based safety and reliability analysis, Complex space missions, Multi-state phased mission system, Model-based systems engineering, SysML},
abstract = {Model-based safety and reliability (S&R) analysis, which improves analysis accuracy and reduces cost and development time is applied in various industries. With the developments in model-based systems engineering (MBSE) and the use of systems modelling language (SysML), S&R analysis based on SysML models is gaining more attention. However, the emerging methods are inadequate for complex space missions. Thus, the main objective of this study involves integrating S&R analysis in SysML-based space mission design. First, a framework for integrating S&R analysis in model-based space mission design is presented. Based on the characteristics of the development of complex space missions and the MBSE process, a multisystem collaborative failure analysis method is proposed to comprehensively identify the failure modes (FMs) of the entire system. Subsequently, an event-based analysis method integrating the process of functional architecture definition is proposed, which fills the identified gaps in model-based S&R analysis for mission-level systems. Based on the identified FMs and proposed criterion, the event tree can be mapped from the SysML activity diagram. Finally, the proposed methodology is applied to a case study of a complex space mission in the near future: the manned mission to the Moon.}
}
@article{HERZIG201452,
title = {A Conceptual Basis for Inconsistency Management in Model-based Systems Engineering},
journal = {Procedia CIRP},
volume = {21},
pages = {52-57},
year = {2014},
note = {24th CIRP Design Conference},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2014.03.192},
url = {https://www.sciencedirect.com/science/article/pii/S2212827114007586},
author = {Sebastian J.I. Herzig and Christiaan J.J. Paredis},
keywords = {inconsistency management, model-based systems engineering, viewpoint integration, model integration, graph pattern matching},
abstract = {A crucial issue in system architecting is the need to study systems from different viewpoints. These viewpoints are defined by a variety of factors, including the concerns of interest, level of abstraction, observers and context. Views conforming to these viewpoints are highly interrelated due to the concerns addressed overlapping. These interrelations and overlaps can lead to inconsistencies. The challenge is to identify and resolve - that is, manage - such inconsistencies. This paper introduces an approach to managing inconsistencies within the context of Model-Based Systems Engineering (MBSE). In current practice, the management of inconsistencies relies on ad-hoc methods and infrequently conducted activities such as reviews. The result of this practice is that decisions are often made based on inconsistent information, which can lead to costly rework or even mission failure. Therefore, assisting humans by means of a computational method that can continuously identify and aid in resolving inconsistencies adds significant value. In the paper, the hypothesis that pattern matching can serve as a generic means of identifying inconsistencies is investigated. It is shown that graph patterns can be used as a means to capture conditions for and formally reason about the existence of inconsistencies, and to specify resolution alternatives. The paper concludes that using patterns to manage inconsistencies can be very effective and accurate, but it may also incur additional costs that must be carefully balanced with the benefits gained.}
}
@incollection{FRIEDENTHAL201215,
title = {Chapter 2 - Model-Based Systems Engineering},
editor = {Sanford Friedenthal and Alan Moore and Rick Steiner},
booktitle = {A Practical Guide to SysML (Second Edition)},
publisher = {Morgan Kaufmann},
edition = {Second Edition},
address = {Boston},
pages = {15-27},
year = {2012},
series = {The MK/OMG Press},
isbn = {978-0-12-385206-9},
doi = {https://doi.org/10.1016/B978-0-12-385206-9.00002-8},
url = {https://www.sciencedirect.com/science/article/pii/B9780123852069000028},
author = {Sanford Friedenthal and Alan Moore and Rick Steiner},
abstract = {Publisher Summary
Model-based systems engineering (MBSE) applies systems modeling as part of the systems engineering process to support analysis, specification, design, and verification of the system being developed. A primary artifact of MBSE is a coherent model of the system being developed. This approach enhances specification and design quality, reuse of system specification and design artifacts, and communications among the development team. This chapter summarizes MBSE concepts to provide further context for SysML without emphasizing a specific modeling language, method, or tool. The emphasis for MBSE is to produce and control a coherent system model and use this model to specify and design the system. Modeling can support many purposes, such as to represent a system concept or specify system components. A good model meets its intended purpose, and the scope of the model should support its purpose within the resource constraints of the modeling effort. Quality attributes of a model, such as model consistency, understandability, and well-formedness, and the use of modeling conventions, can be used to assess the effectiveness of a model and to drive preferred modeling practices. MBSE metrics can be used to assess design quality, progress, and risk and support management in the development effort. MBSE is contrasted with the more traditional document-based approach to motivate the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed.}
}
@article{MOUSAVI2022100335,
title = {Use of Model-Based System Engineering methodology and tools for disruption analysis of supply chains: A case in semiconductor manufacturing},
journal = {Journal of Industrial Information Integration},
volume = {28},
pages = {100335},
year = {2022},
issn = {2452-414X},
doi = {https://doi.org/10.1016/j.jii.2022.100335},
url = {https://www.sciencedirect.com/science/article/pii/S2452414X22000073},
author = {Behrouz Alizadeh Mousavi and Cathal Heavey and Radhia Azzouz and Hans Ehm and Chirine Millauer and Randolph Knobloch},
keywords = {Model-Based System Engineering, Disruption management, Complex system, System modeling, Simulation analysis},
abstract = {In the age of complex and large-scale systems, Model-Based System Engineering (MBSE) is increasingly becoming a sine qua non in industry due in large part to a wider use of software applications and an increased move towards standardization. In this study, we research the application of the MBSE methodology (definition, design, analysis, and synthesis) to disruption management with a specific focus on a semiconductor supply chain case study. Within this methodology we use three MBSE tools, namely OWL, BPMN, and SysML, with the main focus being on definition of the problem to ensure that the “correct” problem is solved. The article does not report on any new research into the MBSE tools, but applies the available tools. Many of these tools have limitations, especially in the area of analysis and synthesis, that have been overcome if not widely adopted, in the area of product design (i.e., finite element analysis and simulation, etc.), which is a limitation in the type of systems studied here, i.e., a supply chain system which is a discrete event system. Through the application of the MBSE methodology and the application of the three MBSE tools, a comparison is provided that highlights further opportunities and obstacles, but which ultimately demonstrates a positive proof that the MBSE methodology is necessary for revealing sources of systematic disruptions within a complex integrated industrial information system.}
}
@article{BASSAM2015413,
title = {Using SysML for Model-based Vulnerability Assessment},
journal = {Procedia Computer Science},
volume = {44},
pages = {413-422},
year = {2015},
note = {2015 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2015.03.025},
url = {https://www.sciencedirect.com/science/article/pii/S1877050915002616},
author = {Soroush Bassam and Jeffrey W. Herrmann and Linda C. Schmidt},
keywords = {SysML, Model-Based Systems Engineering, Vulnerability Assessment, Physical Protection Systems},
abstract = {This paper discusses the use of model-based systems engineering (MBSE) models for physical protection systems (PPS) evaluation. We discuss why MBSE methodologies can be valuable in assessment of PPS. Next, we review the steps in vulnerability assessment (VA) and describe the use of SysML models in these steps. The paper presents examples of SysML models for a VA scenario. Such models can enable the development and integration of other VA tools and reduce the time and cost of conducting VA, which will lead to safer facilities.}
}
@article{KUBLER2018216,
title = {Model-Based Systems Engineering for Machine Tools and Production Systems (Model-Based Production Engineering)},
journal = {Procedia Manufacturing},
volume = {24},
pages = {216-221},
year = {2018},
note = {4th International Conference on System-Integrated Intelligence: Intelligent, Flexible and Connected Systems in Products and Production},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2018.06.036},
url = {https://www.sciencedirect.com/science/article/pii/S2351978918305535},
author = {Karl Kübler and Stefan Scheifele and Christian Scheifele and Oliver Riedel},
keywords = {MBPE, MBSE, CPS, CPPS, HILS},
abstract = {Model-Based Systems Engineering (MBSE) has been known in aerospace and automotive industries for more than a decade and is based on a model-driven approach to integrate all engineering disciplines. This paper shows a promising approach to meet the ongoing challenges in the development of production systems. First, the current sequential, mechatronic engineering process of production systems is summarized and deficits are pointed out. Then, the paper outlines a roadmap with necessary steps to adapt the MBSE approach to the engineering of production systems, called Model-Based Production Engineering (MBPE). This roadmap includes the definition of a design language for production systems.}
}
@article{ALBERS2015129,
title = {Model Based Systems Engineering in Construction Kit Development – Two Case Studies},
journal = {Procedia CIRP},
volume = {36},
pages = {129-134},
year = {2015},
note = {CIRP 25th Design Conference Innovative Product Creation},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2015.01.044},
url = {https://www.sciencedirect.com/science/article/pii/S2212827115004187},
author = {Albert Albers and Helmut Scherer and Nikola Bursac and Galina Rachenkova},
keywords = {Modular Design, MBSE, Systems Engineering, SysML},
abstract = {To offer a large variety of end products with a limited number of components, more and more companies take advantage of the modular design, platform and type series principles resulting in a construction kit development. These standardization methods make the product development processes more complex. This can be encountered with the help of Model Based Systems Engineering (MBSE). In order to support construction kit development with the help of MBSE in a long term, definitions of such terms as module, platform, type series and construction kit are analyzed and defined in the context of MBSE. As a result, some implications of these definitions are presented in this paper. In addition, first findings out of two research studies conducted at an automotive manufacturer are presented and put into the context of MBSE. The studies indicate the potential of MBSE supporting construction kit development.}
}
@article{RABAH20223256,
title = {Digital Twin for Services (DT4S): Conceptual Strategy},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {10},
pages = {3256-3261},
year = {2022},
note = {10th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.10.136},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322021498},
author = {S. Rabah and G. Zacharewicz and V. Chapurlat},
keywords = {Digital Twin, workflow, PSS, servitization, Model Based System Engineering (MBSE)},
abstract = {While the Digital Twin is now well discussed in manufacturing, the research considering the Digital Twin of services engineering is still in its early stage. The Digital Twin is very focused on the manufacturing operations with gathering data from physical means and information technology. Yet, services are now features and core concerns of complex systems development. However, it is not much focused on services and above all workflow orchestration to deliver these services to user whether it is an internal operator, or a customer. The engineering of Digital Twin services is a complicated phase because of the complexity of interactions and heterogeneous nature of services. The simultaneous use of models and data (e.g., Model Based System Engineering (MBSE)) should be considered for service-oriented engineering projects of complex system (large system, heterogeneous components, autonomous, etc.). Based on this postulate, the contribution of this paper is about Digital Twin and MBSE for Servitization industry. In detail, the paper proposes a recall of information systems for enterprises, workflow and servitization. Then it draws some perspectives about the interest of Digital Twin approach based on models for product service systems. It discusses the relation between service twin and ground data and the link to decision level.}
}
@article{LOPEZ2019225,
title = {Complexity assessment using SysML models},
journal = {Procedia Computer Science},
volume = {153},
pages = {225-232},
year = {2019},
note = {17th Annual Conference on Systems Engineering Research (CSER)},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2019.05.074},
url = {https://www.sciencedirect.com/science/article/pii/S1877050919307331},
author = {Victor Lopez and Dale Thomas},
keywords = {Complexity, SysML},
abstract = {System complexity is often associated with multiple issues such as schedule and cost overruns, poor performance or even program failure. With engineered systems becoming ever more complex it is of great interest to be able to assess the complexity of a system easily and during the design process. Since Model Based Systems Engineering (MBSE) is becoming a widely used tool in systems development, a method to assess complexity using a SysML model and the information that is typically depicted in a model is developed. The complexity estimation in SysML was done by adapting the complexity metric developed by Sinha and Suh for a Design Structure Matrix (DSM).}
}
@article{KAISER2016428,
title = {Exhaustiveness of Systems Structures in Model-based Systems Engineering for Mechatronic Systems},
journal = {Procedia Technology},
volume = {26},
pages = {428-435},
year = {2016},
note = {3rd International Conference on System-Integrated Intelligence: New Challenges for Product and Production Engineering},
issn = {2212-0173},
doi = {https://doi.org/10.1016/j.protcy.2016.08.055},
url = {https://www.sciencedirect.com/science/article/pii/S2212017316304029},
author = {Lydia Kaiser and Christian Bremer and Roman Dumitrescu},
keywords = {Model-Based Systems Engineering, Mechatronic Systems, Exhaustivness, Classification, Modeling Guidelines},
abstract = {The increasing complexity of mechatronic systems results in a challenging development process. In an interdisciplinary design environment, the communication and cooperation between the disciplines is necessary to establish a basis for efficient and effective product development. The approach of MBSE focuses on this aspect by means of an abstract description of the system structure. The system structure is created and read by different persons. It is crucial that these semi-formal models, considered by very different stakeholders, are build up comparably and exhaustively. Nowadays there is no way to check the model of exhaustiveness. We classified model elements and derived modeling guidelines enabling the model-user to create comparable and exhaustive system structures.}
}
@article{ARANBURU2022383,
title = {Geometric Variability in Parametric 3D Models: Implications for Engineering Design},
journal = {Procedia CIRP},
volume = {109},
pages = {383-388},
year = {2022},
note = {32nd CIRP Design Conference (CIRP Design 2022) - Design in a changing world},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2022.05.266},
url = {https://www.sciencedirect.com/science/article/pii/S2212827122007156},
author = {Aritz Aranburu and Daniel Justel and Manuel Contero and Jorge D. Camba},
keywords = {Parametric modeling, CAD quality, CAD reusability, modeling methodologies},
abstract = {Modern manufacturing companies operate in environments characterized by increasingly shorter development cycles and the need to develop highly customizable products at competitive prices. In this paper, we examine the role of parametric 3D modeling in the product development process, and highlight the importance of robustness, flexibility, and responsiveness to geometric variations, which are particularly relevant in the context of the Model-Based Enterprise (MBE). We discuss the often-inefficient parametric 3D modeling practices used in industry, their root causes and implications, and identify the detrimental effects of low-quality models on engineering design activities, specifically design changes during development, generative design algorithms, design optimization, simulation, product/part family configuration, AI-based parametric modeling, Model-Based System Engineering (MBSE), and parametric and adaptive encryption. Finally, we present future lines of research aimed at increasing the quality of parametric models.}
}
@article{BOUGAIN2017715,
title = {Integrating Environmental Impacts with SysML in MBSE Methods},
journal = {Procedia CIRP},
volume = {61},
pages = {715-720},
year = {2017},
note = {The 24th CIRP Conference on Life Cycle Engineering},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2016.11.196},
url = {https://www.sciencedirect.com/science/article/pii/S2212827116313567},
author = {Sébastien Bougain and Detlef Gerhard},
keywords = {MBSE, SysML, Environmental impacts, Eco-design},
abstract = {The continuously growing integration of mechanics, electronics, and informatics into modern products introduces a considerable complexity into product development activities. Model-Based Systems Engineering (MBSE) methods are one approach to handle this complexity. Eco-design methods, which are also increasingly important due to sustainability focus of many companies, is not fully implemented or even not taken into account at all in MBSE methods. Therefore, this paper aims at integrating the environmental impacts of a mechatronic product in a MBSE method using Systems Modelling Language (SysML).}
}
@article{OLBORT2022227,
title = {Integration of Communication using OPC UA in MBSE for the Development of Cyber-Physical Systems},
journal = {Procedia CIRP},
volume = {109},
pages = {227-232},
year = {2022},
note = {32nd CIRP Design Conference (CIRP Design 2022) - Design in a changing world},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2022.05.241},
url = {https://www.sciencedirect.com/science/article/pii/S2212827122006904},
author = {Johannes Olbort and Benjamin Röhm and Vladimir Kutscher and Reiner Anderl},
keywords = {Interoperability, OPC UA, MBSE, CPS},
abstract = {Interoperability of Cyber-Physical Systems in the context of Industry 4.0 is currently not explicitly considered during product development leading to compatibility problems during commissioning and usage. This paper addresses the research question of integrating interoperability based on OPC UA Companion Specifications and its building blocks into Model-Based Sytems Engineering (MBSE). For this purpose, a system modeled in SysML is extended by the requirements resulting from communication via OPC UA. The generated information model is integrated into the OPC UA server, enabling interoperability between Cyber-Physical Systems. A prototypical implementation validates the approach.}
}
@article{RUSSELL2012188,
title = {Using MBSE to Enhance System Design Decision Making},
journal = {Procedia Computer Science},
volume = {8},
pages = {188-193},
year = {2012},
note = {Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.01.041},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912000427},
author = {Mike Russell},
keywords = {Model Based Systems Engineering, Requirements Management, Engineering Decision Making},
abstract = {When developing new systems, developers are challenged with tracing requirements to system design elements and helping decision makers choose between designs options that implement these requirements; options which may have vastly different cost, supportability, and business implications. Model-Based Systems Engineering (MBSE) has emerged as viable method for graphically tracing requirements to design elements, however, additional research is needed on using the resulting views to support decision making. This paper describes a method for using MBSE views to positively map requirements, metrics, and test cases against the design of a notional system with a focus on using the views for effective decision making.}
}
@article{YU2021401,
title = {Industrial Design and Development Software System Architecture Based on Model-Based Systems Engineering and Cloud Computing},
journal = {Annual Reviews in Control},
volume = {51},
pages = {401-423},
year = {2021},
issn = {1367-5788},
doi = {https://doi.org/10.1016/j.arcontrol.2021.04.011},
url = {https://www.sciencedirect.com/science/article/pii/S1367578821000298},
author = {Chao YU and Qing LI and Kui LIU and Yuwen CHEN and Hailong WEI},
keywords = {Industrial Software System, Model-Based Systems Engineering, Cloud Computing, Industrial Internet-of-Things, System Architecture},
abstract = {Oriented to the new generation of cyber-physical manufacturing, this paper introduces two breakthroughs of industrial design and development software system: model-based systems engineering (MBSE) and cloud computing. Based on the classic V model for product development, an MBSE double-Vs model is refined which takes both model life-cycle and product life-cycle into consideration for design process re-engineering. Then cloud computing and its re-structuring on traditional industrial software system are discussed. Shift from classic single approach, this research proposes an industrial design and development software system architecture based on model-based systems engineering (MBSE) and cloud computing. The new architecture is shown in a stereoscopic way which amply utilizes the respective advantages of MBSE and cloud computing. At the end of the paper, as an example of actual cases, a flight management system (FMS) design and development platform is detailed to verify the effectiveness of this new architecture. The implement of new system architecture creates an efficient collaborative mechanism for FMS developing.}
}
@article{MASIOR2020325,
title = {Beyond Model-Based Systems Engineering towards Managing Complexity},
journal = {Procedia CIRP},
volume = {91},
pages = {325-329},
year = {2020},
note = {Enhancing design through the 4th Industrial Revolution Thinking},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2020.02.183},
url = {https://www.sciencedirect.com/science/article/pii/S2212827120308271},
author = {Jonathan Masior and Benjamin Schneider and Mehmet Kürümlüoglu and Oliver Riedel},
keywords = {MBSE, Model Based Systems Engineering, PLM, Product Lifecycle Management, IT Infrastructure, Cyber Physical Systems, Advanced Systems Engineering},
abstract = {Systems Engineering domain lacks in methodologies for integration of development artefacts (e.g. requirements, functions, geometrics, or behavior) and enterprise models (e.g. organizational structures, processes, or IT infrastructure). Especially the rising complexity driven by integrated product service systems, smart services, systems of systems and cyber physical systems (CPS) leads to a new paradigm further on called Advanced Systems Engineering (ASE). It empowers enterprises to cope with such complex developments. The employment of ASE technologies in design and manufacturing enterprises requires a reachability of technical information and continuity along vertical and horizontal dimensions. A widely used approach to implement this is Model-based System Engineering (MBSE). This paper introduces a solution to achieve the goals of manufacturing excellence as well as complexity management by identifying and analyzing relevant requirements and possible approaches for an innovative simulation enabling and executable modelling language, the so-called advanced MBSE+.}
}
@article{STEFFEN202225,
title = {Project-Based Learning for Control of Hybrid Powertrains using a Simulation Model},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {17},
pages = {25-30},
year = {2022},
note = {13th IFAC Symposium on Advances in Control Education ACE 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.09.220},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322014446},
author = {Thomas Steffen and Ashley Fly and Richard Stobart},
keywords = {hybrid electric vehicle (HEV), hybrid powertrain control, project-based learning, automated assessment, multi-objective optimisation, model-based systems engineering (MBSE)},
abstract = {This paper describes an activity and assessment in the module “Hybrid and Electric Vehicles” at Loughborough University, which aims to create engagement with the control of hybrid powertrains. A hybrid powertrain uses both an internal combustion engine and a battery powered electric motor, and the goal is to distribute the power demand across both in a way that achieves the “best of both worlds.” It is a slightly unusual but highly popular control problem. The activity uses project-based learning, centred around an open-source simulation model and simulation library specifically created for teaching purposes. It provides a fast, abstract yet representative energy behaviour of the whole vehicle, and visualises key aspects of the powertrain and its energy balance. The assessment task is an open challenge, asking students to improve upon an existing basic control strategy. The marking process involves a computer-based assessment for vehicle economy, drivability, and emissions. This gives learners the opportunity to pursue a practical hands-on exercise, and to demonstrate a realistic engineering approach of their choosing.}
}
@article{NOTTAGE2012207,
title = {Application of model-based systems engineering on a university satellite design team},
journal = {Procedia Computer Science},
volume = {8},
pages = {207-213},
year = {2012},
note = {Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.01.044},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912000452},
author = {Dustin Nottage and Steve Corns},
keywords = {Model-based Systems Engineering, Satellite, SysML, University Team},
abstract = {System Engineering is a foundation of the Missouri S&T's Satellite Design Team, although it is not explicitly stated at all times. However, implementation of the systems engineering process within a student design team presents unique challenges. Student design teams have a high personnel turnover, a limited time commitment due to classes, some new members have little to no experience, and a sometimes lack of motivation to participate since it is volunteered time. The largest problem on the team is getting the new members knowledgeable about the system so they can start contributing as fast as possible. The other big problem is keeping documentation about the system design consistent and up-to-date. With a model-based approach, system specifications are updated all at once, and kept consistent throughout the design. The model also allows the team leadership to “walkthrough” the design and design process with the newer members. Diagrams sometimes help better explain design than word documents, especially to visual learners. The model will not completely replace documentation, it is used to help augment the learning process for new members, and keep better control of traceability.}
}
@article{RASOR2021229,
title = {Towards collaborative life cycle specification of digital twins in manufacturing value chains},
journal = {Procedia CIRP},
volume = {98},
pages = {229-234},
year = {2021},
note = {The 28th CIRP Conference on Life Cycle Engineering, March 10 – 12, 2021, Jaipur, India},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2021.01.035},
url = {https://www.sciencedirect.com/science/article/pii/S2212827121000585},
author = {Rik Rasor and Denis Göllner and Ruslan Bernijazov and Lydia Kaiser and Roman Dumitrescu},
keywords = {Model-based systems engineering, MBSE, Product Lifecycle Management, Digital Twin, Front-end Engineering, Industry 4.0},
abstract = {A digital twin is a digital representation of an unique product or product service system that is sufficient to meet the requirements of a set of use cases. Following this definition, the implementation of a digital twin must be derived from concrete use cases along the life cycle of a product. However, the involvement of a variety of different stakeholders and frequent changes of ownership in the value chain complicate the identification of use cases as well as the specification of the digital twin and its governance. This leads to a need for a systematic approach that enables various partners to implement the digital twins needed for their specific use cases. This paper presents a specification technique that combines aspects from Model-Based Systems Engineering with Product Lifecycle Management to support a collaborative front-end planning and specification of digital twins. It integrates the different views of various digital twin stakeholders (product manager, systems engineer, developer, data scientist etc.) in a collaborative model across the value chain. As part of the systematic approach, a digital twin specification grid that structures guidelines for the aspects of a digital twin (e.g. the data sources) across the product life cycle is provided. The presented approach also supports the derivation of a digital twin by integrating different use cases. This specification technique is the first step towards a holistic, Model-Based Digital Twin Design Framework.}
}
@article{ALAOUI20223262,
title = {An original Data, Information and Knowledge management approach for model-based engineering projects},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {10},
pages = {3262-3267},
year = {2022},
note = {10th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.10.135},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322021486},
author = {M. El Alaoui and S. Rabah and V. Chapurlat and V. Richet and R. Plana},
keywords = {System Engineering, Model Based System Engineering (MBSE), Knowledge management, SE Ontology, Large engineering projects, data, information, knowledge, model},
abstract = {Data, Information and Knowledge (DIK) problematics are of undeniable growing actuality; many efforts were made to explore and make progress in this domain. Therefore, these DIK have been defined by several characteristics conventionally studied such as volume, variety, variability… and a few solutions have been uncovered and revealed. In parallel, the systems Engineering (SE) and specifically Model-Based Systems Engineering (MBSE) approaches, that encourage, among other things, the use of models instead of documents in critical infrastructure engineering namely in the energy infrastructure domain, participate in the growing volume and complexity of DIK. In this particular context, it is important to enrich MBSE by adapting the existing DIK advances to the MBSE needs, which is initiated in this paper, first by providing DIK definition, second, by checking what are the main issues that shall be solved in order to help stakeholders use and manage them in large MBSE-driven projects, involving various business actors during more or less long periods. At last, this article proposes a methodological contribution bridging the supposed gap between MBSE and so-called data management fields of research.}
}
@article{CHAPURLAT20121523,
title = {System interoperability: definition and proposition of interface model in MBSE Context},
journal = {IFAC Proceedings Volumes},
volume = {45},
number = {6},
pages = {1523-1528},
year = {2012},
note = {14th IFAC Symposium on Information Control Problems in Manufacturing},
issn = {1474-6670},
doi = {https://doi.org/10.3182/20120523-3-RO-2023.00174},
url = {https://www.sciencedirect.com/science/article/pii/S1474667016333675},
author = {V. Chapurlat and N. Daclin},
keywords = {Systems Engineering, Model Based Systems Engineering (MBSE), Interoperability, System interoperability, Interface, Verification},
abstract = {System interoperability is an essential feature of any system to be able to interact with other systems during its mission without any problem or anticipating these ones and their effects when necessary. However, Systems Engineering (SE) approach does not clearly takes into account this feature. First, there is no clear definition of system interoperability requirement in SE. Second, there is no relevant interface model in SE with which engineers can model and check system interoperability requirements. This article aims first to define the system interoperability concept. Second it defines and formalizes the notion of interoperability requirement allowing then to enrich the classical requirements repository used in SE domain. Third, it promotes an interface meta model allowing engineers to build and to check interfaces taking into account interoperability requirements in coherence with MBSE hypotheses.}
}
@article{ARISTA2023270,
title = {An Ontology-based Engineering system to support aircraft manufacturing system design},
journal = {Journal of Manufacturing Systems},
volume = {68},
pages = {270-288},
year = {2023},
issn = {0278-6125},
doi = {https://doi.org/10.1016/j.jmsy.2023.02.012},
url = {https://www.sciencedirect.com/science/article/pii/S0278612523000377},
author = {Rebeca Arista and Xiaochen Zheng and Jinzhi Lu and Fernando Mas},
keywords = {Ontology-based Engineering, Decision support, Ontology, Knowledge graph, Aircraft manufacturing system, Knowledge management, Cognitive Digital Twin},
abstract = {During the conceptual design phase of an aircraft manufacturing system, different industrial scenarios need to be evaluated against performance indicators in a collaborative engineering process. Domain experts’ knowledge and the motivations for decision-making is a crucial asset for enterprises which is challenging to be captured and capitalised. Ontology-based Engineering (OBE) systems emerge as a new generation of Knowledge-based Engineering techniques with advancements of ontology engineering methods and computer science technologies. Ontologies enable to capture both explicit and implicit domain knowledge from historical records and domain experts. These Ontology-based Engineering systems can stand highly complex collaborative design processes involving multidisciplinary stakeholders and various digital tools. This paper proposes a tradespace framework with Ontology-based Engineering features included on top of existing Model-Based System Engineering and interoperability capabilities. These additional Ontology-based Engineering features reuse formalised knowledge via knowledge graph technologies and generative algorithms, changing the cognitive process from the designer, to an automatic process which generates design alternatives for the designer. The tradespace framework is demonstrated in a case study to design the aircraft fuselage orbital joint process, helping the designer to take better strategic decisions at conceptual phase and proving to be an advantageous paradigm for the design process.}
}
@article{MACCALMAN2015315,
title = {Capturing Experimental Design Insights in Support of the Model-based System Engineering Approach},
journal = {Procedia Computer Science},
volume = {44},
pages = {315-324},
year = {2015},
note = {2015 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2015.03.030},
url = {https://www.sciencedirect.com/science/article/pii/S1877050915002665},
author = {Alex MacCalman and Hyangshim Kwak and Mary McDonald and Stephen Upton},
keywords = {Model Based Systems Engineering, Design of Experiments, Engineered Resilient System, SysML},
abstract = {Model-Based Systems Engineering (MBSE) continues to mature into a popular approach as systems become more complex. Integrating MBSE architectural diagrams with external simulations that model a variety of different domains allows designers to perform sophisticated engineering design and analysis. To better understand how these external models support design decisions, we can leverage the statistical methods of design of experiments to identify insights into a complex system design problem. These insights include identifying the most important design parameters, the nature of their behaviour, their synergies between them, their diminishing or increasing rates of change, and thresholds that achieve a desired level of effectiveness. The purpose of this paper is to propose a MBSE methodology that captures the insights identified during an experimental design study within the integrated system model while applying the MBSE approach.}
}
@article{ZHANG2022100347,
title = {An Integrated Intelligent Modeling and Simulation Language for Model-based Systems Engineering},
journal = {Journal of Industrial Information Integration},
volume = {28},
pages = {100347},
year = {2022},
issn = {2452-414X},
doi = {https://doi.org/10.1016/j.jii.2022.100347},
url = {https://www.sciencedirect.com/science/article/pii/S2452414X2200019X},
author = {Lin Zhang and Fei Ye and Kunyu Xie and Pengfei Gu and Xiaohan Wang and Yuanjun Laili and Chun Zhao and Xuesong Zhang and Minjie Chen and Tingyu Lin and Zhen Chen},
keywords = {Modeling and simulation language, Model-based systems engineering, Integration, Intelligent, Verification},
abstract = {Modeling and simulation are now leading the way in supporting analysis and development of system of systems. At present, to support the unified modeling formalism and dynamic simulation for different domain specific models across MBSE process, system modeling languages (such as SysML) are often required to cooperate with multi-physics modeling languages and simulation platforms (such as Modelica, Simulink), which makes it challenging to ensure the true unity of the whole system models, the consistency between the various system layers and the traceability of the modeling and simulation processes. In response to the above problems, this paper develops a new integrated intelligent modeling and simulation language, which can uniformly describe the system-level architecture and physical behavior models as a whole. On this basis, models can be simulated directly to support system verification for MBSE. Compiler and simulation engine are developed to enable X language to support the simulation of continuous, discrete event and agent models. Finally, an intelligent car system is taken as a case to verify the modeling and simulation capabilities of X language.}
}
@article{VANNOTEN2017157,
title = {Model-based Systems Engineering of Discrete Production Lines Using SysML: An Experience Report},
journal = {Procedia CIRP},
volume = {60},
pages = {157-162},
year = {2017},
note = {Complex Systems Engineering and Development Proceedings of the 27th CIRP Design Conference Cranfield University, UK 10th – 12th May 2017},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2017.01.018},
url = {https://www.sciencedirect.com/science/article/pii/S2212827117300197},
author = {Johan {Van Noten} and Klaas Gadeyne and Maarten Witters},
keywords = {SysML, model-based, discrete production machines ;},
abstract = {During the design of complex mechatronic systems, multiple engineering teams covering disciplines such as mechanics, electronics, control and safety must cooperate and exchange information. Today's state-of-the-practice systems engineering methodologies rely on document-based approaches to elicit and manage requirements, describe the system architecture, log design decisions and exchange this information between the project members. Unfortunately, the informal character of the documents causes misinterpretations, generates inconsistencies and prohibits the use of computer power for validation. Model-based Systems Engineering techniques promise to alleviate some of these issues. SysML is a formal graphical modeling language that aims to support this model-based design of complex multidisciplinary systems. Yet, as SysML is a general-purpose language intended to cover a broad range of systems, applying SysML to a specific domain such as production lines is not a trivial task. In this paper, we present some experiences and limitations encountered when applying and tailoring SysML 1.4 to support the systems engineering process of an industrial use case: the design of a production line by a multi-disciplinary team across several companies, consisting of process experts, control engineers, thermal designers, software engineers, mechanical designers, signal processing experts, roboticists and embedded hardware designers.}
}
@article{MADNI2014848,
title = {Toward an Experiential Design Language: Augmenting Model-based Systems Engineering with Technical Storytelling in Virtual Worlds},
journal = {Procedia Computer Science},
volume = {28},
pages = {848-856},
year = {2014},
note = {2014 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2014.03.101},
url = {https://www.sciencedirect.com/science/article/pii/S1877050914001641},
author = {Azad M. Madni and Marcus Nance and Michael Richey and William Hubbard and Leroy Hanneman},
keywords = {experiential design, systems modeling, virtual world, model based systems engineering, technical storytelling, model based gaming, stakeholders, business metrics},
abstract = {Systems engineering has made significant strides over the last decade with the advent of Model Based Systems Engineering (MBSE) and the Systems Engineering Markup Language (SysML). These advances have made it possible for collaborative engineering teams to communicate using a common language and share information in the form of digital models rather than hard-to-maintain paper documents. One major advance that needs to occur next is enhancing systems engineering languages to address the needs of all stakeholders especially non-engineers. In this paper, we advance the proposition that recent advances in systems modeling, virtual world building, and technical storytelling are the key enablers of next generation systems engineering and systems engineering languages. To this end, this paper presents an innovative approach for developing an experiential design language that augments existing systems engineering language (i.e., SysML) with new perspectives informed by exploration and storytelling in virtual worlds. This language is intended to allow all stakeholders to understand and collaborate on system designs without having to learn engineering notation, and bring to bear their unique perspectives during collaborative system design. Furthermore, immersive experiences made possible by storytelling in the virtual world can potentially illuminate key system interactions and behaviors, allowing all stakeholders to make meaningful contributions in upfront systems engineering. The benefits and payoffs of the experiential design language are: increased participation of all stakeholders in upfront systems engineering; superior collaboration among stakeholders by allowing them to focus on different system levels and perspectives; and elegant system design by getting the architecture right the first time with minimum structural complexity.}
}
@article{YVARS2022269,
title = {Towards a correct by construction design of complex systems: The MBSS approach},
journal = {Procedia CIRP},
volume = {109},
pages = {269-274},
year = {2022},
note = {32nd CIRP Design Conference (CIRP Design 2022) - Design in a changing world},
issn = {2212-8271},
doi = {https://doi.org/10.1016/j.procir.2022.05.248},
url = {https://www.sciencedirect.com/science/article/pii/S2212827122006977},
author = {Pierre-Alain Yvars and Laurent Zimmer},
keywords = {Model-based approach, System Synthesis, constraint programming, sub-definite system},
abstract = {We present in this paper the Model Based System Synthesis (MBSS) approach for the design of complex systems that are correct by construction. Where the usual Model Based System Engineering (MBSE) approach offers formalisms and tools to represent a candidate system, to analyze it, to simulate it and even to optimize it, MBSS proposes to represent the global design problem using a problem representation language and then to solve it by using adapted synthesis tools producing one or several solutions necessarily satisfying the expressed requirements. The two approaches are therefore complementary; the MBSS being more adapted to the preliminary design and system integration stages. After presenting the different categories of problems encountered in system design (sizing, configuration, allocation, architecture generation), MBSS and MBSE will be positioned in relation to each other. The main concepts of MBSS will be detailed in order to understand the specific representation needs of the approach. The structural and behavioral notions related to the sub-definite systems will be explained as well as the links to be established with the functional and non-functional requirements. The approach is illustrated using the DEPS design problem specification language and the DEPS Studio modeling and solving tool on a system design case study. The DEPS language combines structural modeling features specific to object-oriented principles and ontology definition capabilities for engineers with problem specification features from constraint programming. DEPS Studio is an integrated modeling and solving environment designed to model and resolve system synthesis problems. It allows the engineer to edit, compile, debug and solve problems expressed in DEPS. It integrates a mixed constraint programming solver. The approach can be applied on physical systems, software intensive or mixed systems (embedded or cyber-physical).}
}
@article{PETNGA2013403,
title = {Ontologies of Time and Time-based Reasoning for MBSE of Cyber-Physical Systems},
journal = {Procedia Computer Science},
volume = {16},
pages = {403-412},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.042},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000434},
author = {Leonard Petnga and Mark Austin},
keywords = {ontology, temporal semantics, Model Based Systems Engineering, time-based reasoning, Cyber-Physical Systems},
abstract = {Our work is concerned with the development of Model-Based Systems Engineering (MBSE) procedures for the behavior modeling and design of Cyber-Physical Systems. This class of problems is defined by a tight integration of software and physical processes, the need to satisfy stringent constraints on performance, safety and a reliance on automation for the management of system functionality. To assure correctness of functionality with respect to requirements, there is a strong need for methods of analysis that can describe system behavior in terms of time, intervals of time, and relationships among intervals of time. Accordingly, this paper discusses temporal semantics and their central role in the development of a new time-based reasoning framework in MBSE for CPS. Three independent but integrated modules compose the system: CPS, ontology and time-reasoning modules. This approach is shown to be mostly appropriate for CPS for which safety and performance are dependent on the correct time- based prediction of the future state of the system. A Python-based prototype implementation has been created to demonstrate the capabilities of the ontological framework and reasoning engine in simple CPS applications.}
}
@article{DARPEL202011,
title = {Method for tracking and communicating aggregate risk through the use of model-based systems engineering (MBSE) tools},
journal = {Journal of Space Safety Engineering},
volume = {7},
number = {1},
pages = {11-17},
year = {2020},
issn = {2468-8967},
doi = {https://doi.org/10.1016/j.jsse.2020.01.001},
url = {https://www.sciencedirect.com/science/article/pii/S2468896720300057},
author = {Scott Darpel and Sean Beckman and Tim Ferlin and Maria Havenhill and Edith Parrot and Kathy Harcula},
abstract = {Large, complex projects can identify a significant number and variety of risks, throughout the project life cycle. These risks are analyzed, mitigated, closed or accepted as independent uncertainties. Once closed or accepted, it is easy for projects to lose awareness of their impact. In reality, each of these risks contributes some amount to the overall risk posture of the project. The ability to track and effectively communicate this aggregate risk has represented a challenge to project management. There have been previous attempts to create a schema to communicate the aggregate effect of risks, without notable success. Most of these attempts have centered on some additive metric derived from the scoring of likelihood and consequence values. This, in and of itself, is a logical approach, but all too often the scores were then aggregated to a level where all context was lost. One weakness has been a lack of attempt to create linkages or logical groups of the risks upon which useful aggregation could then occur. The overall move to model-based (systems) engineering (MBSE) has opened up a vast frontier of opportunities to better integrate all project data. MBSE provides an underlying layer that links data items to each other. Objectives link to requirements, which then link to functions, functions to physical architecture items, and so on, as far down as projects want to model. While it started with a focus on modeling requirements based on things like use cases, efforts are now underway to integrate safety and mission assurance (S&MA) information and analyses, such as risks. This effort, called Model Based Mission Assurance (MBMA), is yielding models that are more useful and are a more accurate representations of the systems. MBSE models, with this ability to link related items, provide a new means of tracking and communicating aggregate risks. In the proposed method, risks are added into the models as distinct items, having attributes that communicate a scoring derived from the likelihood and consequence values as charted on the standard NASA 5 × 5 risk matrix. Like earlier efforts, each box in the 5 × 5 has an associated scoring, which may include both a current score and potential post-mitigation/control score. The risk items are then linked to elements of the model, such as system objectives/goals, requirements, functions, or physical architecture items, with “Risk to” relationships. These risks will then be communicated by use of reports generated from the model, detailing all risks and/or hazards linked to model elements. These reports can include aggregate impacts, including a current scoring and potential future state scoring based on the planned mitigations and/or controls. These reports will show all risks, open, accepted, and closed, linked to project objectives or requirements. When run as part of an upcoming risk acceptance discussion, these reports will serve to remind the team of all previous risks that relate to the effected portion of the system. When included as part of periodic program or project reviews, risk reviews, and safety reviews, this method can improve the overall understanding of the system's true risk posture. This proposed method takes full advantage of the advances that modern modeling techniques provide, with a minimal investment of additional time. Utilizing the model environment also enables a near constant access to current state of aggregate risks.}
}
@article{ACHESON201311,
title = {Model Based Systems Engineering for System of Systems Using Agent-based Modeling},
journal = {Procedia Computer Science},
volume = {16},
pages = {11-19},
year = {2013},
note = {2013 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2013.01.002},
url = {https://www.sciencedirect.com/science/article/pii/S1877050913000033},
author = {Paulette Acheson and Cihan Dagli and Nil Kilicay-Ergin},
keywords = {system of systems, model based systems engineering, agent-based model},
abstract = {Model Based Systems Engineering (MBSE) follows a model centric approach in contrast to the traditional document centric approach. The complexity of SoS development lends itself nicely to a model centric approach, especially a model that can represent the independence of the systems that comprise the SoS. An agent-based model provides a framework where the SoS and each system are independent entities with individual dynamics and interactions. The System of Systems (SoS) development depends on contributions from the individual systems each having their own agenda and priorities. System-to-system interactions are often necessary to accomplish the overall objectives and capabilities of the SoS. This research investigates the SoS development of an Acknowledged SoS with its associated individual systems and represents this development in an Agent-Based Model (ABM). The ABM includes decision models for the individual system agents that capture system dynamics and system-to- system negotiations as well as system to SoS negotiations. The ABM incorporates the key factors that influence SoS and individual systems’ dynamics and enables systems engineers to try different scenario inputs and analyze the overall dynamics.}
}
@article{CRESSENT2013171,
title = {Designing the database for a reliability aware Model-Based System Engineering process},
journal = {Reliability Engineering & System Safety},
volume = {111},
pages = {171-182},
year = {2013},
issn = {0951-8320},
doi = {https://doi.org/10.1016/j.ress.2012.10.014},
url = {https://www.sciencedirect.com/science/article/pii/S0951832012002177},
author = {Robin Cressent and Pierre David and Vincent Idasiak and Frederic Kratz},
keywords = {Reliability database, Model-Based System Engineering, SysML, Feedback management},
abstract = {This article outlines the need for a reliability database to implement model-based description of components failure modes and dysfunctional behaviors. We detail the requirements such a database should honor and describe our own solution: the Dysfunctional Behavior Database (DBD). Through the description of its meta-model, the benefits of integrating the DBD in the system design process is highlighted. The main advantages depicted are the possibility to manage feedback knowledge at various granularity and semantic levels and to ease drastically the interactions between system engineering activities and reliability studies. The compliance of the DBD with other reliability database such as FIDES is presented and illustrated.}
}
@article{DO2014692,
title = {An Investigation of MBSE Practices across the Contractual Boundary},
journal = {Procedia Computer Science},
volume = {28},
pages = {692-701},
year = {2014},
note = {2014 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2014.03.083},
url = {https://www.sciencedirect.com/science/article/pii/S187705091400146X},
author = {Quoc Do and Stephen Cook and Matthew Lay},
keywords = {Model-Based Systems Engineering (MBSE), metamodel, information model, systems engineering methodologies},
abstract = {One of the key impediments to the expansion of Model-Based Systems Engineering (MBSE) practice across the lifecycle, particularly in competitive tendering environments, is the continued reliance on documents to define the contractual interface between the acquirer and the supplier. This paper describes the collaborative research project between the University of South Australia (UniSA), the Defence Systems Innovation Centre (DSIC), and the Defence Science Technology Organisation (DSTO) that is investigating the capability of the DSTO Whole-of- System Analytical Framework (WSAF) to supplant contractual documents within the tender process and the degree to which the model passed from acquirer through the contractual interface can be used by the supplier as the basis of their tender response and subsequent systems development. The paper opens with background material and then describes the “learning-by-doing” approach that is being employed. This is followed by a description of methods and tools used to support the design of the tender response and the capture of the design rationale in the same MBSE environment used to capture the project definition. The paper concludes with a discussion section that surfaces the key issues and challenges inherent in utilising this MBSE approach across the contractual boundary and ways that the selected approach could address these.}
}
@incollection{FRIEDENTHAL201229,
title = {Chapter 3 - Getting Started with SysML},
editor = {Sanford Friedenthal and Alan Moore and Rick Steiner},
booktitle = {A Practical Guide to SysML (Second Edition)},
publisher = {Morgan Kaufmann},
edition = {Second Edition},
address = {Boston},
pages = {29-49},
year = {2012},
series = {The MK/OMG Press},
isbn = {978-0-12-385206-9},
doi = {https://doi.org/10.1016/B978-0-12-385206-9.00003-X},
url = {https://www.sciencedirect.com/science/article/pii/B978012385206900003X},
author = {Sanford Friedenthal and Alan Moore and Rick Steiner},
abstract = {Publisher Summary
SysML is a general-purpose graphical language for modeling systems that may include hardware, software, data, people, facilities, and other elements within the physical environment. The language supports modeling of requirements, structure, behavior, and parametrics to provide a robust description of a system, its components, and its environment. This chapter provides an introduction to SysML and guidance on how to begin modeling in SysML. It introduces a simplified version of the language, SysML-Lite. The semantics of the language enable a modeler to develop an integrated model of a system, where each kind of diagram can represent a different view of the system being modeled. A simplified model-based systems engineering (MBSE) method that is consistent with the systems engineering process is also introduced. The chapter finishes by describing some of the challenges involved in learning SysML and MBSE. The SysML language is a critical enabler of MBSE. Effective use of the language requires a well-defined MBSE method. SysML can be used with a variety of MBSE methods.}
}
@article{BOURDON20223250,
title = {Document to model transition for architecture evaluation approach: Application to a nuclear infrastructure project.},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {10},
pages = {3250-3255},
year = {2022},
note = {10th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.10.137},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322021504},
author = {J. Bourdon and P. Couturier and V. Chapurlat and R. Plana and V. Richet and B. Baudouin},
keywords = {System Engineering, Model Based System Engineering, Architectural Definition, Deployment},
abstract = {In large engineering projects, multiplicity and heterogeneity of business actors, domain and business constraints, and stakeholders’ needs become more and more difficult to manage and are even moving. To allow projects members to converge in confidence, reducing time, costs and avoiding risky situations due to errors, misinterpretations, or omission, Model Based System Engineering (MBSE) replaces today the classical documents centric engineering approach. It promotes modeling, models and data management principles that are largely used in several domains with success. This article focuses on Nuclear Infrastructure engineering projects. It intends to demonstrate the interest of deploying MBSE approach in this field, particularly concerning architectural solutions evaluation. Main principles and application results of an MBSE driven method called EVA-CIME are proposed, presenting some gains and perspectives.}
}
@article{MALEKI202279,
title = {Intelligent Digital Twin in Health Sector: Realization of a Software-Service for Requirements- and Model-based-Systems-Engineering},
journal = {IFAC-PapersOnLine},
volume = {55},
number = {19},
pages = {79-84},
year = {2022},
note = {5th IFAC Workshop on Advanced Maintenance Engineering, Services and Technologies AMEST 2022},
issn = {2405-8963},
doi = {https://doi.org/10.1016/j.ifacol.2022.09.187},
url = {https://www.sciencedirect.com/science/article/pii/S2405896322014021},
author = {Samira Maleki and Nasser Jazdi and Behrang Ashtari},
keywords = {Digital Twin, intelligent Digital Twin, Software service, Requirements-Engineering, Model-},
abstract = {The concept of the intelligent Digital Twin focuses on automatic model creation and model extension for a product throughout its lifecycle using artificial intelligence. To create an intelligent Digital Twin, the Digital Twin architecture must also include software services that support machine learning algorithms. These software services must have two characteristics. First, an interface to the real environment to dynamically receive feedback from an existing product or a product under development. Second, machine learning algorithms that analyze and manage the Digital Twin's models based on feedback from the real product. In this paper, we present the concept and implementation of a software service within the intelligent Digital Twin's architecture for automated requirements modeling as well as for modeling of the product system architecture. Since medical devices differ significantly in their applied technology, area of use, and application, the requirement engineering of medical devices needs to identify and specify the critical design requirements for each product individually. This makes automated requirement engineering and Model-based-Systems Engineering of medical devices very challenging. The implemented intelligent software service meets these challenges for product design in the healthcare sector.}
}
@article{DO2012285,
title = {Requirements for a Metamodel to Facilitate Knowledge Sharing between Project Stakeholders},
journal = {Procedia Computer Science},
volume = {8},
pages = {285-292},
year = {2012},
note = {Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.01.059},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912000609},
author = {Quoc Do and Stephen Cook and Peter Campbell and William Scott and Kevin Robinson and Wayne Power and Despina Tramoundanis},
keywords = {Model-Based Systems Engineering (MBSE), Metamodel, Information Model, and Australian Defence Capability Development Process},
abstract = {The successful realization of the goal of Model-Based Systems Engineering (MBSE) practice, to contain all project information in models, is predicated on the ability of the system model to represent the information needs of a broad range of stakeholders such as the owners, acquirers, suppliers, maintainers, and users. The paper opens by discussing the interface between the acquirer and supplier within the pre-contract competitive Australian defence context. From this and earlier work, the need for the model of the system of interest to be built upon a comprehensive knowledge representation that can support the creation and integration of multiple stakeholder specific models is derived. Elicitation of further requirements from both stakeholder workshops and from functional analysis follows.}
}
@article{BASNET2022116451,
title = {A decision-making framework for selecting an MBSE language–A case study to ship pilotage},
journal = {Expert Systems with Applications},
volume = {193},
pages = {116451},
year = {2022},
issn = {0957-4174},
doi = {https://doi.org/10.1016/j.eswa.2021.116451},
url = {https://www.sciencedirect.com/science/article/pii/S0957417421017358},
author = {Sunil Basnet and Ahmad Bahootoroody and Meriam Chaal and Osiris A. {Valdez Banda} and Janne Lahtinen and Pentti Kujala},
keywords = {Decision-making framework, Model-Based System Engineering Languages, Technology Acceptance Model, Multinomial Process Tree, Bayesian Inference},
abstract = {The increasing system complexity due to technological advances in recent decades requires the implementation of Model-Based System Engineering (MBSE) languages. While MBSE languages can support in creating detailed and precise system descriptions, requirements, functions, and component interactions, the development of several modelling languages has formed a challenge for system engineers to select a suitable modelling language for complex operations. Since the implementation of MBSE modelling languages is extensive and requires high resources, system engineers need to select the most suitable one for their project. Furthermore, the prepared system models are utilized by different end-users such as system engineers, operators, and marketing professionals. As a result, it is necessary to integrate the perception of end-users in the modelling language selection process. Hence, a decision-making support framework needs to be developed, which will incorporate the opinions of end-users in the selection process. Correspondingly, this study proposes a Multi-Criteria Decision-Making framework aimed to select the most appropriate and practical modelling language. The framework integrates the end-user’s perception in the selection process using the Technology Acceptance Model and reckons the MBSE language features as comparison criteria. To analyze the data collected from the end-users, integration of Multinomial Process Tree modelling and Bayesian inference is developed. The applicability of the proposed model was tested in a ship pilotage operation case study. The results show that the framework can support system engineers during the initial selection process of the MBSE modelling language.}
}
@article{HERZIG2014354,
title = {An Approach to Identifying Inconsistencies in Model-based Systems Engineering},
journal = {Procedia Computer Science},
volume = {28},
pages = {354-362},
year = {2014},
note = {2014 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2014.03.044},
url = {https://www.sciencedirect.com/science/article/pii/S1877050914001070},
author = {Sebastian J.I. Herzig and Ahsan Qamar and Christiaan J.J. Paredis},
keywords = {inconsistency management, model-based systems engineering, model composition, model integration},
abstract = {A typical way of managing the inherent complexity of contemporary technical systems is to study them from different viewpoints. Such viewpoints are defined by a variety of factors, including the concerns of interest, level of abstraction, observers and context. Views conforming to these viewpoints are typically highly interrelated since the concerns addressed in the different viewpoints overlap semantically. Such overlaps can lead to inconsistencies. The challenge is to identify and resolve – that is, manage – such inconsistencies. This paper introduces an approach to identifying inconsistencies within the context of Model- Based Systems Engineering (MBSE). In current practice, inconsistencies are typically only discovered after long time intervals, e.g., during reviews. This can result in costly rework or even mission failure. Therefore, actively checking for inconsistencies, and doing so in a continuous fashion, can be valuable. We investigate the hypothesis that all models can be represented by graphs and that inconsistencies can be identified by means of pattern matching. We show that this process is equivalent to inferring inconsistencies by means of deductive reasoning. Finally, we present the results of a proof-of-concept implementation.}
}
@article{LIU202193,
title = {Construction method of shop-floor digital twin based on MBSE},
journal = {Journal of Manufacturing Systems},
volume = {60},
pages = {93-118},
year = {2021},
issn = {0278-6125},
doi = {https://doi.org/10.1016/j.jmsy.2021.05.004},
url = {https://www.sciencedirect.com/science/article/pii/S0278612521001011},
author = {Juan Liu and Jianhua Liu and Cunbo Zhuang and Ziwen Liu and Tian Miao},
keywords = {Digital twin, Shop-floor digital twin, Cyber-physical production system, Model-based systems engineering, System modeling language, MagicGrid},
abstract = {Digital twin (DT) technology is essential for achieving the fusion of virtual-real cyber-physical systems. Academics and companies have made great strides in the theoretical research and case studies of constructing the shop-floor digital twin (SDT), which is the premise of applying DT technology on the shop floor. A shop floor is a large complex system that involves many elements including people, machines, materials, methods, and the environment and processes, such as the technical flow, business process, logistics, and control flow. However, most of the developed cases lack a hierarchical, structured and modularized implementation framework for the development of an SDT system, which leads to problems such as a low reuse rate of the system blocks, lack of scalability, and high upgrade and maintenance costs. In response to these issues, we propose a construction method of the DT for the shop floor based on model-based systems engineering from the perspective of the system. In this method, a comprehensive DT model for the shop floor is gradually constructed by using system modeling language, the modeling method “MagicGrid,” and the “V model” of systems engineering. The model includes four dimensions of the shop-floor requirements, structure, behavior, and parameters, as well as three stages (the problem domain, solution domain, and implementation domain), and connects nine steps of the “V model,” including the system requirements, system architecture, subsystem implementation, subsystem integration, and system verification. Then, based on an example of a real NC machining shop floor, subsystems including a visualization system, synchronization system, and simulation system, are discussed. Finally, the functions of the integrated systems are verified based on the requirements, including the real-time synchronization of “man, machine, material, and method” and the transient simulation in real time. The numerical indicators of the integrated system are verified, including the model completeness and synchronization timeliness.}
}
@article{ZHANG2023102455,
title = {An effective MBSE approach for constructing industrial robot digital twin system},
journal = {Robotics and Computer-Integrated Manufacturing},
volume = {80},
pages = {102455},
year = {2023},
issn = {0736-5845},
doi = {https://doi.org/10.1016/j.rcim.2022.102455},
url = {https://www.sciencedirect.com/science/article/pii/S0736584522001375},
author = {Xi Zhang and Bo Wu and Xin Zhang and Jian Duan and Chenhui Wan and Youmin Hu},
keywords = {Digital twin, Variants management, Industrial robot digital twin, Model-base systems engineering, Multi-domain model},
abstract = {Recently, the rapid development of digital twin (DT) technology has been regarded significant in Cyber-physical systems (CPS) promotion. Scholars are focusing on the theoretical architecture and implementing applications, in order to establish a high-fidelity, dynamic, and full-lifecycle DT model and achieve a deep fusion of real and virtual. As a typical complex system with multi-disciplines, multi-physics, and multi-domain characteristics, industrial robot (IR) involves various processes and elements from the two other levels of the system: components and production lines. Their complex relationships lead to a huge challenge to build a comprehensive DT model. Current researchers usually concentrates on single-layer services because of limited construction methodology, which results in enormous isolated models, and leads to low reusable system blocks, finite scalability, and high costs of design, adjustment, upgrade, and maintenance. To address these issues, a standardized methodology and a hierarchical, modular, and generic architecture are proposed to depict comprehensive and variable industrial robot digital twin (IRDT). Firstly, the ontology information model is presented by analyzing variable factors systematically. Then, model-based system engineering (MBSE) based methodology is introduced, including construction process and variants management. After modeling process of three levels (problem domain, solution main, and implementation domain) and four viewpoints (requirement, structure, behavior, and parameter), a generic architecture of IRDT is constructed and a feature-based variants management method is described. Besides, a six-axis IRDTS is implemented to illustrate the mapping of logical architecture and physical system as a multi-level elements and processes representation example. And the steps of numerical evaluations consist of system delay and derivation. Finally, results show the effectiveness and the potential of the proposed theoretical methodology for constructing IRDTS and other industrial applications.}
}
@article{ORELLANA201419,
title = {Human System Integration Ontology: Enhancing Model Based Systems Engineering to Evaluate Human-system Performance},
journal = {Procedia Computer Science},
volume = {28},
pages = {19-25},
year = {2014},
note = {2014 Conference on Systems Engineering Research},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2014.03.003},
url = {https://www.sciencedirect.com/science/article/pii/S1877050914000660},
author = {Douglas W. Orellana and Azad M. Madni},
keywords = {Human System Integration, Human Factors, Model Based System Engineering, SysML, UML, Modeling and Simulation, System Modeling, Ontology},
abstract = {As we move forward to integrate system descriptive models and system analytical models, there is a key opportunity to integrate other viewpoints into the system model. Specifically, we have the opportunity to extend current modeling semantics and add other disciplines. Current systems engineering practices address human-system integration concerns as an afterthought (i.e., after system architectures have already been created). One primary reason for this deficiency is that people not trained in human factors engineering are unable to communicate with those that are, due to differences in terminology. To better integrate humans into and with systems, new semantics are needed to extend current system modeling representations. The integration of new semantics will allow human elements to be analyzed in a more holistic perspective. This paper looks into identifying core building blocks for creating the ontology for human system interaction, interfaces, and integration. This ontology, once fully developed, will extend current system modeling capabilities that will enable the human element to be analyzed as part of the overall system development process.}
}
@article{WACH2019242,
title = {Can Wymore’s Mathematical Framework Underpin SysML? An Initial Investigation of State Machines},
journal = {Procedia Computer Science},
volume = {153},
pages = {242-249},
year = {2019},
note = {17th Annual Conference on Systems Engineering Research (CSER)},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2019.05.076},
url = {https://www.sciencedirect.com/science/article/pii/S1877050919307355},
author = {Paul Wach and Alejandro Salado},
keywords = {Model-Based Systems Engineering, Architecting Patterns, Theory of System Engineering, System Modeling, Emergent Behavior},
abstract = {Model-based system engineering (MBSE) has been suggested to have significant benefits to include early verification and validation cycles and predictive analytics. Multiple languages for modeling the engineering of systems exist; the most widely used being Systems Modeling Language (SysML). SysML is descriptive in nature, meaning it contextualizes the relationships in the system model. While this is useful, it lacks a rigorously established mathematical framework that would allow for understanding of emergent behavior, pattern recognition, vulnerability assessment, and a scientific approach to modeling of systems among other capabilities. An internally consistent mathematical framework for MBSE was proposed by Wayne Wymore in 1993, which may provide what is necessary to overcome the descriptive limitation of SysML. In this article, we perform an initial assessment of the feasibility of underpinning Wymore mathematical system construct to SysML by comparing Wymore’s Moore-based state machines to SysML state machine diagrams. Specifically, we focus on the mathematical capturing of orthogonality through system coupling.}
}