@article{https://doi.org/10.1002/inst.12205,
author = {Maheshwari, Apoorv and Raz, Ali K. and DeLaurentis, Daniel A. and Murphy, Andrew and Kolawole, Oluwatomi},
title = {Integrating SysML and Agent-Based Modeling for Rapid Architecture Evaluation},
journal = {INSIGHT},
volume = {21},
number = {2},
pages = {47-51},
doi = {https://doi.org/10.1002/inst.12205},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12205},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12205},
abstract = {ABSTRACT In the face of the changing operational requirements and demands for new capabilities, it often is necessary for systems architects to make substantial changes in a system's architecture. However, traditional systems engineering processes, where architects finalized architecture during the initial concept development stages and engineers develop system simulations during later lifecycle phases, do not support a rapid architecture evolution. In this article, we propose a model-based systems engineering (MBSE) process to facilitate the rapid evaluation of changes in systems architecture and/or design artifacts for complex systems. This process specifies the minimum set of information that engineers need to include in systems architecture using SysML diagrams with traceability between the diagrams and the agent-based simulation (ABS) models of a complex system. By integrating SysML and ABS models early in the development lifecycle, teams can readily trace any future evolution of systems architecture represented by the SysML diagrams to changes in an ABS model and hence can rapidly evaluate the impact of architectural evolution. We demonstrate the application of the proposed process using a NASA-sponsored case study for developing ab initio architectures of the National Airspace System (NAS) where we achieved significant time savings in developing an ABS model of evolving NAS architecture based on SysML-ABS integration.},
year = {2018}
}
@article{https://doi.org/10.1002/sys.20097,
author = {Micouin, Patrice},
title = {Toward a property based requirements theory: System requirements structured as a semilattice},
journal = {Systems Engineering},
volume = {11},
number = {3},
pages = {235-245},
keywords = {property-based requirement, expectation, well-formed requirement, specification, stringency relationship, conjunction operation, semilattice, SysML, “de dicto” and “de re” relationship, allocation, derivation, coupling, ontology},
doi = {https://doi.org/10.1002/sys.20097},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.20097},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.20097},
abstract = {Abstract In this paper, we outline a property-based requirement (PBR) theory. After introducing the mathematical notion of semilattice, we express the ontological and epistemological assumptions on which our theory is built. We provide a definition of a “well formed (wf-)requirement,” based on the property concept, distinguished from that of an “expectation.” Then, we introduce two relationships between wf-requirements called respectively “conjunction” operation and “stringency” relationship. So, we state that a set of wf-requirements, assigned to a system, is structured as a semilattice and that the maximum element of this semilattice matches the system specification. The network including all the expectations and wf-requirements related to a system are linked together through two very unlike categories of relationships. “De dicto” relationships are linguistic dependencies while “de re” relationships among requirements are extralinguistic dependencies among material properties refereed by wf-requirements. We highlight two types of “de re” relationship among wf-requirements. The first one is the well known “derivation” relationship that links together a “parent” requirement with its “child” requirements during the system design process. We introduce a second one, called “coupling” relationship. Wf-requirements are coupled when the change of one of them collides with others. We claim that our PBR theory belongs to the same paradigm as the model-based systems engineering (MBSE) approaches whereas TBR belongs to the same field as empirical design approaches. Then, we relate our requirements formulation to features of the OMG SysMLTM language. We conclude on our prospects for research, which connect our requirement theory with reflections carried out on the bodies of knowledge and their specification, i.e. ontologies. © 2008 Wiley Periodicals, Inc. Syst Eng},
year = {2008}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00729.x,
author = {Bankauskaite, Jovita and Morkevicius, Aurelijus},
title = {Towards an Automated UAF-based Trade Study Process for System of Systems Architecture},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {391-405},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00729.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00729.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00729.x},
abstract = {Abstract The major driver for the Model-based systems engineering adoption in industry is the ability for an engineer to develop systems with traceability to requirements, using one integrated architecture model that enables all types of automated analysis, e.g. impact analysis, gap analysis, trade studies, and simulations. Today, complex real-life problems require the application of MBSE practices, where evolving systems communicate independently, both operationally and managerially, to achieve a common goal. This is the level of system of systems. At this level the major concern is an architecture assessment and trade study analysis, which can lead to different criteria and techniques for identification and comparison of alternatives to keep architecture in line with budgets and timelines. Although there are multiple process that provide step-by-step descriptions of trade study analyses, there are none that detail how trade study analyses could be automated in the model-based environment in combination with existing architecture frameworks, languages, and tools. The goal of this research is to propose an automated trade study analysis process for the System of systems architecture developed in the Unified Architecture Framework models. It is a part of the larger research of trade study analysis automation, including modeling guidance, model quality checks, and automation scripts.},
year = {2020}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00544.x,
author = {Papke, Barry. and Wang, Gan},
title = {Integration of Parametric Cost Estimation with System Architecture – It's a dirty job but someone has to do it!},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {1221-1236},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00544.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00544.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00544.x},
abstract = {Abstract The rapid adoption and advancement of Model Based Systems Engineering (MBSE) methods and tools opens up new avenues of systems engineering practices. One of them is cost estimation. As a key enabler for affordability analysis and budgetary decision making, cost estimation is an essential component for all system development and sustainment efforts. However, cost estimation is typically a separate endeavor from the design and development effort, creating a professional “chasm” between the worlds of systems designers and of cost analysts, causing a disconnect between the system as designed and the cost and effort required to build it. This paper describes an approach to “tightly” integrate the existing practice of parametric cost estimation with the system architecture development process by leveraging MBSE and SysML to enable repeatable and efficient estimation of system development cost, and to allow system cost and affordability to be incorporated into the “digital thread” of the design while improving the efficiency and effectiveness of the cost estimation process. By expanding our previous work (Papke, Wang and Pavalkis 2017), this paper describes a new concept of operation (CONOP) for system development, enabled by the integrated SysML and COSYSMO modeling environment, that effectively connects the cost baselines to the technical baselines throughout the project life cycle. This new CONOP presents another step towards “pulling the digital thread” by making affordability and economic analysis an integral part of the system architecture.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00323.x,
author = {Yadav, Jitender and Raizada, Arvind},
title = {Systems Engineering Challenges in Simulation Based Aviation Training: A Few Insights},
journal = {INCOSE International Symposium},
volume = {26},
number = {s1},
pages = {177-192},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00323.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00323.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00323.x},
abstract = {Abstract Simulation based training means using simulated environment to create training lessons, more focused towards interactive learning by simulating real world scenarios. Simulation based training has been used extensively in the field of aviation for many years. Flight simulator as a product is quite complex and all the lifecycle phases such as requirements, analysis, design, development, integration, verification and validation are not very well interconnected or centralized, which adds to complexity in producing an artefact in a complex system of systems environment. Moreover, the lack of integrated method for ensuring the traceability of requirements and customization, acquisition of knowledge and data, integration and changes in hardware, and the design and testing of software creates massive challenges for simulation companies developing system of systems products. The current paper provides insights into such challenges that typically exist in the Flight Simulation industry. Methods and techniques inspired from the Knowledge Based Engineering (KBE) and Model Based Systems Engineering (MBSE) aspects of Systems Engineering are proposed to evolve existing Systems Engineering practices for more efficient Requirements Management, Interface \& Change propagation management and Hardware and Software integration solutions. Towards the end, results of an industry-wide survey have been summarized, which was initiated to gather feedback from industry experts on various systems engineering practices challenges.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01319.x,
author = {Rosenthal, Rich and Sheard, Sarah and Neuendorf, William F.},
title = {1.1.3 Need for Robust Systems Engineering in a Time of Budget Austerity},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {21-30},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01319.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01319.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01319.x},
abstract = {Abstract Today's larger, more complex systems are riskier than before, with dire consequences if they fail. This paper makes the case that systems engineering is needed now more than in the past, and it would be a mistake to reduce funding for systems engineering at the same time that national security programs in general are being reduced. Systems engineering helps improve decision making under conditions of uncertainty and complexity, using a combination of proven and new tools. Systems engineering orchestrates integration among disciplines and subsystems using collaborative tools such as integrative review. Systems engineering supports new acquisition models such as incremental commitment by implementing enterprise architecture roadmaps and recommending new technology to improve capability. Model-based systems engineering leads to lower cost, improved capability, lower risks, and improved defenses against attack. Systems engineers are learning techniques from complexity science such as hierarchical and modular design, prevention of failures from unintended consequences, and analysis of power law characteristics in complex systems. The paper discusses these concepts to show the importance of maintaining systems engineering in the face of budget austerity.},
year = {2012}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00269.x,
author = {VanZandt, Lonnie},
title = {Engineering Lifecycle Management. What A Bunch Of Rhetoric},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {1905-1921},
keywords = {MBSE, Trust, Rhetoric, Argumentation, Persuasion},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00269.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00269.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00269.x},
abstract = {Abstract Paraphrasing Charlton and Adras, management is a process by which managers reflectively model and share a representation of their own processes to enable themselves to perform their eponymous information-processing activities of monitoring, evaluating, predicting, and controlling their enterprise and its systems. (Charlton \& Andras, 2003) Furthermore, managers manage for particular purposes. Purpose-driven, they acquire systems to address the needs of the enterprise and they manage their stakeholders, engineering lifecycle tools, and artifacts during the acquisition processes to attain certain goals. Modern model-based systems engineering tools are effective for modeling a single time the adequately stable compositions of sufficiently static units of structure and behavior. However, today, systems engineers and managers struggle to use these tools to specify, analyse, present, and manage these models as stakeholders and architects incrementally evolve those models over time and across space. Therefore, the management of engineering lifecycle models involves more than reliably storing and retrieving in a timely manner the usual collections of related, versioned artifacts. Rather, because all selections and deployments of the enterprise depend on some responsible actor making a choice, management includes the more formidable service of providing to decision-making stakeholders arguments that demonstrate the adequacy of contextually-specific solutions to the enterprise's problems. These decision-making stakeholders need dialectical (i.e. logical) arguments for a proposed system's satisfaction of constraints such as those that are available from adequately formal modeling notations, solvers, and practices. In addition, they need rhetorical (i.e. persuasive) arguments that convince those stakeholders of the aptness of proposals through trust of the proponents and through warrants which appeal to generally accepted grounds.},
year = {2016}
}
@article{https://doi.org/10.1002/sys.21508,
author = {Kotronis, Christos and Nikolaidou, Mara and Kapos, George-Dimitrios and Tsadimas, Anargyros and Dalakas, Vassilis and Anagnostopoulos, Dimosthenis},
title = {Employing SysML to model and explore levels-of-service: The case of passenger comfort in railway transportation systems},
journal = {Systems Engineering},
volume = {23},
number = {1},
pages = {82-99},
keywords = {Levels-of-Service, SysML, Railway Transportation Systems},
doi = {https://doi.org/10.1002/sys.21508},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21508},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21508},
abstract = {Abstract The concept of Level of Service (LoS) is not inherently supported by Systems Modeling Language (SysML), the standard modeling notation for model-based systems engineering. This paper describes and demonstrates an approach that enhances SysML to enable LoS modeling and evaluation. A SysML profile enables the definition and visual verification of LoS during system operation, via LoS specific requirements, inside the system model, and the association of these requirements with specific system components. Hence, static and dynamic aspects of the system model are used for the LoS verification, while specific design alternatives are automatically proposed, in case the desired LoS is not achieved. As a proof of concept, the proposed approach was applied to explore passenger comfort, a key LoS metric, indicating space available to passenger in Railway Transportation Systems (RTSs). A specific case study on passenger comfort for the Athens Metro was conducted to derive insights regarding the practical aspects of the proposed approach.},
year = {2020}
}
@article{https://doi.org/10.1002/j.2334-5837.2014.tb03194.x,
author = {Alvarez-Rodríguez, Jose María and Llorens, Juan and Alejandres, Manuela and Fuentes, Jose},
title = {9.4.1 Why avoiding how when defining what? Towards an OSLC-based approach to support Model-Driven Requirements Engineering},
journal = {INCOSE International Symposium},
volume = {24},
number = {1},
pages = {990-1005},
doi = {https://doi.org/10.1002/j.2334-5837.2014.tb03194.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2014.tb03194.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2014.tb03194.x},
abstract = {Abstract The present paper debates the concept of requirement in the contexts of software and systems engineering. Requirements are usually extracted from documents, stakeholders and existing systems generating a natural language specification. On the other hand system models are designed to define system behavior and to validate and verify the system against a specification. That is why requirements, as a basic unit of specification, must be aligned and linked to a model with the aim of supporting the whole development lifecycle of any product or service. Although some Model-based systems engineering (MBSE) methodologies have tried to bridge the gap between natural language and models moving from document-centric to model or requirement-based approaches, there is still a lack of interoperability and integration between requirements and models that prevent a proper (re) use of requirements in the whole lifecycle. Furthermore this situation is becoming a major challenge in critical systems since a complete verification and validation must be ensured. In this light the Open Services for Lifecycle Collaboration (OSLC) initiative pursues the creation of specifications to unify under a common and shared data model (the Resource Description Framework-RDF) all pieces of information and data involved in the development of a system. This initiative applies the principles of Semantic Web and the Linked Data initiative to provide a web standards-based environment for systems development. More specifically, OSLC defines the Requirements Management specification to deliver a common environment for managing and exchanging requirements. In this sense the on-going work implementing this specification and an example of modeling a controlled vocabulary for requirements management under the principles of the Linked Data and OSLC specifications is provided to demonstrate the capabilities and intentions of both initiatives. Finally some discussion, conclusions and future directions are also presented.},
year = {2014}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01352.x,
author = {Gibson, Chad and Eubanks, Fritz and Hobson, Felicia},
title = {4.2.3 A Systems Approach to Medical Device Compliance with IEC 60601–1:2005},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {505-516},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01352.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01352.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01352.x},
abstract = {Abstract The development of electrical medical devices requires compliance with a host of regulations and standards to help ensure their safety and effectiveness. One of the most notable additions in recent years is the 3rd Edition of IEC 60601-1 (IEC 60601–1, 2005), “Medical electrical equipment – General requirements for basic safety and essential performance.” Medical devices sold to the European Community and Canada must comply with the standard in 2012, and devices in the U.S. and other countries must follow shortly thereafter. This standard represents a sea change in the way medical devices are typically developed, and includes a heavy reliance on safety risk management and usability engineering processes. This paper presents the systems engineer as the ideal candidate to lead these activities and facilitate device development; the standard impacts many areas (e.g., engineering, regulatory, human factors, and project management) and requires a methodical approach to implement in a cost-effective manner while ensuring safety and effectiveness of the device. This paper details techniques developed to efficiently comply with the standard, leveraging existing systems engineering practices and emerging methods such as Model Based Systems Engineering.},
year = {2012}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00151.x,
author = {Shames, Peter M. and Sarrel, Marc A. and Friedenthal, Sanford},
title = {A Representative Application of a Layered Interface Modeling Pattern},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {138-159},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00151.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00151.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00151.x},
abstract = {Abstract Model-based systems engineering (MBSE) is intended to improve how systems engineering is performed compared with a more traditional document-based approach by effectively using models to analyze, specify, design, and verify systems. The OMG Systems Modeling Language (OMG SysML™) enables the practice of MBSE by providing a robust and expressive language for representing systems. Several MBSE methods are available [3], and have continued to mature over the last several years which include model-based practices for requirements flow-down, architecture-design, trade-off analysis, verification planning, and others. One of the critical systems engineering practices is interface modeling. This paper describes a layered interface pattern for modeling data and communications interfaces using SysML. The pattern spans logical to physical interface definition, and includes software and electrical interfaces. Each layer in a stack describes a portion of the interface functionality. The concept of a layered interface is borrowed from computer networking [8] [10]. The layered interface pattern described in this paper enables the specification and design of connections and behavior between interfacing systems at a given layer, and between the adjacent layers of a single system. This pattern may also be applied recursively. That is, communication within a single layer may itself be realized by a multi-layer stack. The level of detail of the model to describe a layered interface should be adapted to the need, and can vary from highly abstract logical flows across a system to highly detailed protocol specifications and message structures. This paper builds on work that was documented in a previous paper entitled “A modeling pattern for layered system interfaces” [5]. Aspects of this pattern have been demonstrated in various project applications including Exploration Flight Test 1 (EFT-1), Space Communication and Navigation (SCaN) Trade Studies, and the SCaN Network Integration Project (SNIP).},
year = {2016}
}
@article{https://doi.org/10.1002/inst.12247,
author = {Hause, Matthew and Hallett, Jon},
title = {Model-Based Product Line Engineering to Plan and Track Submarine Configuration},
journal = {INSIGHT},
volume = {22},
number = {2},
pages = {57-66},
doi = {https://doi.org/10.1002/inst.12247},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12247},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12247},
abstract = {ABSTRACT One can measure the life of a class of submarines in decades. As such, the operational demands and expectations change both strategically and tactically over its lifetime. Coupling this adaptability with the length of time submarines take to design, build, and maintain, no two as-built submarines in a class will ever be the same, even when constructed/maintained to the same build-to design. Traditionally, we have accepted this as the standard, and in most cases the configuration management team managed the full information set at a class or batch level, but not at an individual submarine level. The team managed the configuration of an individual submarine in terms of agreed changes against the class or batch baseline. Advances in technology (hardware performance, software tools, and standards) now give us the opportunity to not only manage the full information set related to individual submarine system configuration baselines as they change over time, but also undertake rigorous model-based trade-off studies to plan the manner in which we can modify a class, a batch, an individual submarine (variant), or any combination thereof over time. This paper will explore the use of model-based systems engineering (MBSE) coupled with recent developments of product line engineering (PLE)/orthogonal variability modelling (OVM) to provide a means to plan, track, manage, and evaluate an individual submarine's configuration over time in the context of the class, whilst simultaneously highlighting the wider application in the submarine enterprise and beyond.},
year = {2019}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00289.x,
author = {Hause, Matthew and Hallett, Jon},
title = {MB-PLE to Plan and Track Submarine Configurations},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {2195-2210},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00289.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00289.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00289.x},
abstract = {Abstract The life of a class of submarines can be measured in decades. As such the operational demands and expectations change both strategically and tactically over its lifetime. Coupling this adaptability with the length of time submarines take to design, build, and maintain, no two “as built” submarines in a class will ever be the same even when constructed/maintained to the same “build to” design. Traditionally this has been accepted as the case and in most cases the full information set has been managed via the configuration management team at a class or batch level but not at an individual submarine level. The configuration of an individual submarine has been managed in terms of agreed changes against the class or batch baseline. Advances in technology (hardware performance, software tools and standards) now give us the opportunity to not only manage the full information set related to individual submarine system configuration baselines as they change over time but also undertake rigorous model based trade-off studies to plan the manner in which a class, a batch, an individual submarine (variant), or any combination thereof can be modified over time. This paper will explore the use of Model-Based Systems Engineering (MBSE) coupled with recent developments of Product Line Engineering (PLE) / Orthogonal Variability Modelling (OVM) to provide a means to plan, track, manage and evaluate an individual submarine's configuration over time in the context of the class, whilst simultaneously highlighting the wider application in the submarine enterprise and beyond.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01435.x,
author = {Luciana, Lo Verde and Guido, Pavan and Elena, Valfrè and Marco, Fioriti},
title = {An Alenia Aermacchi study and experience on MBSE application},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1761-1779},
keywords = {System Engineering, Model-Based System Engineering, SysML, Harmony Methodology, Intelligence Surveillance Reconnaissance Unmanned Aerial System},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01435.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01435.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01435.x},
abstract = {Abstract This paper describes how traditional systems engineering activities conducted in Concept and Configuration Development phases of Aeronautical Product Life Cycle have evolved for the design of Unmanned Aerial System (UAS) for Intelligence Surveillance Reconnaissance mission, by applying Model Based System Engineering (MBSE) approach. This methodology will make easier the support to other phases of the process, like the Product Development. It has been considered the system modelling language (SysML) as reference model based language. The design process and the findings about the modelling and simulation that has been considered by Alenia Aermacchi are described in the paper.},
year = {2012}
}
@article{https://doi.org/10.1002/inst.12150,
author = {Do, Quoc and Gahan, CMDR Malcolm and Davidson, CMDR Colin},
title = {AN MBSE APPROACH TO SUPPORT ORGANISATIONAL REFORM OF THE ROYAL AUSTRALIAN NAVY},
journal = {INSIGHT},
volume = {20},
number = {2},
pages = {44-50},
doi = {https://doi.org/10.1002/inst.12150},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12150},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12150},
abstract = {ABSTRACT This paper presents a unique MBSE approach to enterprise modelling using a combination of IDEF0 functional modelling method. We applied this approach to the modelling of the engineering and administrative processes of the Royal Australian Navy (RAN). We developed the model named Materiel Seaworthiness Functional Master Set (MS FMS). Importantly, the MS FMS initiative drive comes from the top-down by the Head of Navy Engineering, Rear Admiral Mick Uzzell AM. He wants assurance that all organisational entities in the large and complex environment of Navy, Defence Groups, and Industry are performing the right functions in a coordinated way to continuously deliver seaworthy materiel (ships, submarines and support items). We are piloting an analytical capability using the well-established Multi-attribute Value Analysis (MVA) method named the FMS Traffic Light System that aims to facilitate “what if ” analysis, ascertain functional health status, and inform high-level organisational resource allocation and strategic planning to further the quest to balance efficient delivery with efficient resource allocation.},
year = {2017}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01348.x,
author = {Gopinathan, H. and Tocci, A. and Ciambra, F. and Frisoni, D.},
title = {3.6.1 Rapid prototyping and validation of Human factors model in a Model Based Naval Systems Engineering Application},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {448-460},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01348.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01348.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01348.x},
abstract = {Abstract The Model Based System Engineering (MBSE) approach focuses on building an architecture model which is portable to different platforms, re-usable and interoperable among different domain models. This allows integrating the Human Machine Interface (HMI) model or the Human Factors domain model with the System architecture model seamlessly. MBSE ensures the separation of user specifications from the way the system utilises the capabilities/technologies of the target application platform. Thus a Platform Independent Model (PIM) of the HMI is developed, mapping the end-user/operator specifications. This model is then transformed to Platform Specific Model (PSM) meeting the requirements/technologies of the specific platform using rapid prototyping. This paper discusses the generation of HMI Prototype from a PIM for a Naval Combat Management System (CMS) using the application codenamed ModVis. It also addresses the advantages of an early Verification and Validation (V\&V) of the system model and visualisation of a preliminary prototype of the system early in the project life cycle.},
year = {2012}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01436.x,
author = {Orellana, Douglas and Madni, Azad},
title = {Analyzing Human Machine Interaction and Interfaces through Model Based System Engineering Practices},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1780-1790},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01436.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01436.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01436.x},
abstract = {Abstract As systems continue to grow in scale and complexity, human machine interactions and the human machine interface (HMI) become a crucial consideration in overall system design. In complex systems, humans are often part of the complex system as opposed to being just users of the system. The human mental model, work instructions, and procedures are key attributes that a system architect needs to analyze to ensure the success of the overall human-machine system. Model Based System Engineering (MBSE) techniques potentially offer new ways for system architects and engineers to conceptualize and analyze HMI requirements and use the findings to specify its design.},
year = {2012}
}

