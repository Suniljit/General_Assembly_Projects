title,abstract,year
Model-based Design Process for the Early Phases of Manufacturing System Planning using SysML,"This paper presents an approach for a model-based planning process for the early phases of manufacturing system planning (MSP). The goals are a better integration of MSP with product development (PD) in the early design phases and an improvement of the coordination of the MSP-related planning disciplines. The presented approach is based on model-based systems engineering (MBSE) and is supported by a modeling scheme which uses the systems modeling language (SysML). The approach consists of a process description of the MSP and of different so called SysML views which describe the information artifacts of each MSP step. It is divided into four different modeling levels that describe the manufacturing system's structure and behavior from different points of view. In order to validate the approach, an exemplary cylinder head production was modeled. Extractions from this example are shown as SysML-diagrams. To conclude the paper, the advantages and disadvantages of using a model-based planning approach with SysML for MSP are discussed.",2017
Model Based Systems Engineering using VHDL-AMS,"The purpose of this paper is to contribute to the definition of a model based systems engineering (MBSE) approach which would meet the objective laid out by INCOSE to promote an approach that is not a simple extrapolation of current practices. After briefly presenting the tools used and summarizing a state-of-the-art system design process, we will show how it is possible to define property-based requirements (PBR) as features of specification models and to apply the design process to this model in order to develop design models. We will also show how it is possible, to perform a simulation-based verification process of design models in order to detect and remove design errors, to substitute the initial requirements of the system with derived requirements gradually assigned to the sub-entities of the model, to perform a simulation-based validation process of specification models in order to detect and remove specification errors. Thus, we consider that our proposals improve MBSE current practices making them safer for the development of present and future systems.",2013
Code Generation Approach Supporting Complex System Modeling based on Graph Pattern Matching,"Code generation is an effective way to drive the complex system development in model-based systems engineering. Currently, different code generators are developed for different modeling languages to deal with the development of systems with multi-domain. There are a lack of unified code generation approaches for multi-domain heterogeneous models. In addition, existing methods lack the ability to flexibly query and transform complex model structures to the target code, resulting in poor transformation efficiency. To solve the above problems, this paper proposes a unified approach which supports the code generation of heterogeneous models with complex model structure. First, The KARMA language based on GOPPRR-E meta-modeling approach is used for the unified formalism of models built by different modeling languages. Second, the code generation approach based on graph pattern matching is proposed to realize the query and transformation of complex model structures. Then, the syntax for code generation is integrated into KARMA and a compiler for code generation is developed. Finally, a case of unmanned vehicle system is taken to validate the effectiveness of the proposed approach.",2022
Model based systems engineering as enabler for rapid engineering change management,"Product complexity is steadily increasing, customers are demanding more individualized products and market conditions are changing more frequently. To be able to increase customer satisfaction, while decreasing development lead-time under these conditions, the product development process (PDP) has to become more agile. One of the major challenges in implementing an agile PDP is the rapid adaptation to changed conditions and requirements. Due to the physical and multi-disciplinary relationships and dependencies the change management and execution in the development of cyber-physical products is highly complex and time consuming. In this paper an approach is presented, which enables a rapid engineering change management, by using model based systems engineering (MBSE) on parameter level. This MBSE approach incorporates a link between relevant system parameters and the domain-specific models and by that allows the quick estimation of change request impacts. In addition, it can be shown, that the execution of engineering changes can be supported even semi-automated to drastically reduce execution time. If the domain specific models are fully parameterized an automated execution of these models from within the system model is possible which enables a semi-automated or even fully automated execution of engineering changes as it is shown in an example for the requested material change of an A-pillar of an electrical vehicle.",2021
Electric Drive Vehicle Development and Evaluation Using System Simulation,"To reduce development time and introduce technologies faster to the market, many companies have been moving to Model-based System Engineering (MBSE). In MBSE, the development process centers around a multi-physics model of the complete system being developed, from requirements to design, implementation and test. Engineers can avoid a generation of system design processes based on hand coding, and use graphical models to design, analyze, and implement the software that determines system performance and behavior. This paper describes the process implemented in Autonomie, a Plug-and-Play Software Environment, to design and evaluate electric drive powertrain and component technologies in a multi-physics environment. We will discuss best practices and provide examples of the different steps of the V-diagram including model-in-the-loop, software-in-the-loop and component-in-the-loop simulation.",2014
Integrating External Simulations Within the Model-Based Systems Engineering Approach Using Statistical Metamodels,"The Model-Based Systems Engineering (MBSE) approach uses the Systems Modeling Language (SysML) to express the architectural information of a system throughout different stages of its lifecycle. Within the approach, the system's structure, behavior, requirements, and parametrics are defined as elements within an integrated model. System Engineers use nine SysML diagrams to display unique views of these system elements. A significant limitation of SysML is that it is only descriptive in nature and cannot produce analytical results to inform system effectiveness. In order to achieve the full benefit of the MBSE approach the systems engineering community must also rely on external models that capture more sophisticated analysis across a wide variety of domains. These domain models include simulations that measure operational effectiveness, life cycle costing models, physics-based computational simulations, manufacturing models, and many more. The purpose of this paper is to propose an approach that integrates these external simulation models with the MBSE integrated model using statistical metamodels that act as surrogates to the simulations. We demonstrate the approach using a simple system design problem and an agent-based simulation.",2016
A user-centric computer-aided verification process in a virtuality-reality continuum,"Although companies systematically strive for a full digitalisation of their products and their processes, the design phase shows that the quality of models is very unequal. Indeed, detailed design benefits from much more sophisticated methods and tools than the specification and architecture activities. Although, we should note the recent paradigm shift from document-based to model-based systems engineering, these models, which are mainly static 2D diagrams, remain poor to facilitate design verification early on. Thus, to detect most errors during the design phase, companies have no other alternative than to wait up to the testing phase which occurs after several years of development for complex systems. Thus, we propose a user-centric computer-aided verification process to ensure that the design meets the requirements under realistic operational conditions. The verification process provides a progressive immersion into the virtual system before seamlessly transitioning to the real system. Our work is built upon state-of-the-art MBSE methods such as the Property Model Methodology, which enables systems engineers to co-simulate specification models and design models. We improve such MBSE methods by increasing the level of realism that experiences the end-user during the verification of a design by the original combination of Model-In-the-Loop, Immersive Model-In-the-Loop, Human-In-the-Loop, and Hardware-In-the-Loop simulation strategies. A robot arm is used as a use case to illustrate the verification process.",2022
Using knowledge and expressions to validate inter-model constraints,"Abstract
Model Based System Engineering (MBSE) field recommends practices, framework, tools and standards to improve the modeling of systems. Nevertheless, even though one follows a modeling methodology, inconsistencies arise in models since they are shared and developed in a collaborative context. This paper focuses on an approach to manage models heterogeneity by taking into consideration the implicit knowledge of the engineers. We defend this knowledge as the key to check inter-model constraints in the framework of MBSE methodologies.",2011
An MBSE Approach to Pass from Requirements to Functional Architecture,"With systems being more and more complex, especially in the case of Nuclear Power Plant design, Systems Engineering (SE) has seen an increasing interest in the industrial world. Although SE concepts and processes have become well-known, passing from Requirements to Functional Architectures has not been a fully addressed issue. This paper proposes a tooled method that offers three different design perspectives: a Requirement View, a Context View and a Behavioural View. Those views mainly help the designers to express requirements, structure their architecture design, work together, verify and partially validate their design by means of five interconnected Design Specific Modelling Languages (DSML).",2017
Toward the tools selection in model based system engineering for embedded systems—A systematic literature review,"Model based system engineering (MBSE) is a systematic approach of modeling which is frequently used to support requirement specification, design, verification and validation activities of system development. However, it is difficult to customize MBSE approach for the development of embedded systems due to their diverse behavioral aspects. Furthermore, appropriate tools selection to perform particular MBSE activities is always challenging. This paper focuses on the identification and classification of recent research practices pertaining to embedded systems development through MBSE approach. Consequently, a comprehensive analysis of various MBSE tools has been presented. Systematic literature review (SLR) has been used to identify 61 research practices published during 2008–2014. The identified researches have been classified into six different categories to analyze various aspects of MBSE approach for embedded systems. Consequently, 39 preliminary tools are identified that have been used in recent researches. Furthermore, classification and evaluation of tools have been presented. This research highlights important trends and approaches of MBSE to support development of embedded systems. A comprehensive investigation of tools in this article facilitates researchers, practitioners and developers to select appropriate tools according to their requirements.",2015
Digital twins of product families in aviation based on an MBSE-assisted approach,"In this paper an approach to combine the basic concept of Digital Twins with research in product family development applied to civil aviation is presented. Concomitant benefits but also challenges regarding the management of information are introduced as well as the possibility to solve them by using the tools and methods of Model-Based Systems Engineering. As this conjoins three different topics, the basics of each of them in reference to the approach is introduced before they are subsequently combined. In the process, respective past and future research is presented as well.",2021
Extension of the Modeling Tool Suite for Development of Embedded Systems for the Space Domain,"As code complexity continues to increase, software development methods must support the handling of this complexity and reduce development failures. Model-based systems engineering (MBSE) is a modeling-centered development method that provides support to maintain consistency of different phases of the life cycle. Automatic code generation tools were created to reuse software solutions and design patterns and reduce development errors in the software development process, based on automatic model transformations and code generators. However, the use of these tools requires their adaptation to specific platforms and domains since tools only support certain functionalities. What determines how to approach the design of the system are the functionalities provided by the tools available rather than the user needs. In this paper, we propose a way to extend the elements supported by modelling tool suites for real-time embedded systems for the space domain. This enables developers to have greater flexibility by allowing them to modify their tool suite to fit their needs.",2022
Chapter 2 - Model-Based Systems Engineering,"Publisher Summary
This chapter summarizes model-based systems engineering (MBSE) concepts to provide further context for SysML without emphasizing the specific modeling language, method, or tools. MBSE is contrasted with the more traditional document-based approach to promote the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed in the chapter. The practice of systems engineering is transitioning from a document-based approach to a model-based approach like many of the other engineering disciplines, such as mechanical and electrical engineering. MBSE offers significant potential benefits to enhance communications, specification and design precision, design integration, and reuse that can improve design quality and productivity and reduce development risk. The emphasis in MBSE is on producing and controlling a coherent system model and using this model to specify and design the system.",2008
Model Based Systems Engineering in Modular Design – A Potential Analysis using Portal Type Scraper Reclaimers as an Example,"Many industries have to react progressively to the increasing customer requirements regarding the individualization of products. As a consequence, companies are using more and more standardization methods, such as modular, platform or type series design. This leads to an increased complexity of product development processes and thus to the necessity of concepts which allow a consistent representation of constructions kits. Model Based Systems Engineering (MBSE) can support the development of such systems. A case study carried out in cooperation with thyssenkrupp Industrial Solutions shows the potential of the approach using the industrial sector, the machinery and plant engineering industry as an example.",2016
Managing the use of simulation in systems engineering: An industrial state of practice and a prioritization method,"Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the early stages of projects, it for example supports defining the expected system features, when in the later phases it can be used to estimate the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. Simulation opportunities are numerous, but the project managers must identify the more relevant for their project. This paper aims at documenting the current state of practice on the usage of simulation in MBSE processes. Then it aims at exploring decision support opportunities for simulation use in MBSE projects. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing (VVT), and simulation. The perceived benefits, barriers, and the parameters influencing VVT strategies, and the use of simulation are alternately analyzed. The results of the survey are used to propose a Prioritization of Simulation Efforts Methodology (PSEM) to assists managers in choosing the right functions, or systems’ elements to be simulated.",2021
Integration of model based system engineering into the digital twin concept,"For some years now, digitalization has made its way into all phases of the product life cycle. With the help of the modeling language SysML, Model-Based Systems Engineering (MBSE) represents a modern approach in product development. At the same time, the technologies of Industrie 4.0 and digital twin are opening up a new level of efficiency to producing companies. But entertainment technology is also finding its way into business: Virtual Reality (VR) provides an immersive and cost-effective way to perceive products in the early stages of product development. In order to provide these with quickly available data for display and simulation, it is worthwhile to expand the MBSE approach. This work describes how a product model can be extended by a simulative function structure. On the one hand, this work describes how the Cameo System Modeler can be used to extend a product model with a simulative functional structure. On the other hand, it explains how to extend an existing product model by modeling the information required to efficiently and consistently translate an Engineering Bill of Materials (EBOM) into a Manufacturing Bill of Materials (MBOM).",2021
State-of- practice survey in industry on the deployment of simulation in systems engineering,"Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the first stages of projects, it supports defining the expected system features, when in the later stages it estimates the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. The use of simulation is a specific part of an MBSE approach that is crucial in an efficient project management since it might be the source of high cost and skills needs but also a source of precious knowledge on the future system. Simulation opportunities are numerous, but the project manager must identify the more relevant for their project. This paper aims at documenting the current state of practice in industry on the usage of simulation in MBSE processes. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing VVT, and simulation. The perceived benefits and barriers, and the parameters influencing VVT strategies and the use of simulation are alternately analyzed.",2021
Model-based system engineering supporting production scheduling based on satisfiability modulo theory,"Production scheduling enables a production system to allocate resources for the efficient and low-cost production. However, pure mathematical methods are typically utilized for production scheduling, which are not understandable and practical for different domain engineers. Moreover, heterogeneous information during production scheduling may result in communication ambiguity or an information delay. Furthermore, the interaction and reuse of production data is limited, owing to the lack of a unified expression of the production information. To overcome these challenges, a model-based systems engineering (MBSE) approach based on the satisfiability modulo theory (SMT) is proposed to support production scheduling. A multiple architectural view modeling language, KARMA, is used as the basis to construct production scheduling elements and formalize the production scheduling processes using architecture models. Such graphical models are used to improve the understanding and communication among engineers in different domains. Then, property verification based on the MBSE and SMT is applied to solve the model constraints and select optimal schemes for the production scheduling. A case study of a package production line is proposed to evaluate our approach. Its scheduling goal is to maintain high production efficiency, decrease the working time and the cost of workers when increasing working distances during the COVID-19 pandemic. From the case study, we observed that KARMA language enables a description of modeling production scheduling and the optimization of scheduling schemes in a unified manner. Using the SMT solver, the constraints on scheduling corresponding to the sudden decrease in workers are evaluated to exclude inappropriate schemes and generate the optimal one.",2022
A Survey of Model-Based System Engineering Methods to Analyse Complex Supply Chains: A Case Study in Semiconductor Supply Chain,"Model-Based System Engineering (MBSE) is an increasingly important methodology to support system engineering and has attained a high level of attentiveness in business simulation practices as a conceptual modelling approach. In this paper, we present our results related to the application of MBSE approaches in complex semiconductor manufacturing supply chain planning systems. We investigate System Modeling Language (SysML), Web Ontology Language (OWL) and Business Process Modeling Notation (BPMN) as different approaches and languages for MBSE. These approaches are surveyed and used to develop conceptual models for the simulation of the order management process inside the supply chain management. This study aims to survey and offer a number of implications for MBSE practice and seeks to stimulate and guide further research in this area.",2019
Requirements for High Level Models Supporting Design Space Exploration in Model-based Systems Engineering,"Most formal models are used in detailed design and focus on a single domain. Few effective approaches exist that can effectively tie these lower level models to a high level system model during design space exploration. This complicates the validation of high level system requirements during detailed design. In this paper, we define requirements for a high level model that is firstly driven by key systems engineering challenges present in industry and secondly connects to several formal and domain specific models used in model-based design. We analysed part of the systems engineering process at a company developing complex systems, by observing the design process and by analysing design documentation and development databases. By generalizing these observations, we identified several high level systems engineering challenges. They are compared to literature, focusing on reported systems engineering challenges and on existing approaches that incorporate high level models in model-based systems engineering. Finally, we argue that high level system models supporting design space exploration should be able to communicate information regarding design trade-offs (e.g. safety versus ease of use) effectively in a multidisciplinary setting. In our outlook, we propose how to continue our research, by recommending further research and defining a research question.",2013
Implementation of Human System Integration (HSI) and ‘Non-functional Characteristics’ into the Systems Engineering Lifecycle - A Practical Approach at Airbus Defence and Space,"This paper provides an overview of the process, practices, developments and synergies that Airbus Defence and Space are implementing Human System Integration (HSI) into the Continuous Engineering /Model Based System Engineering (MBSE) throughout the company. The paper highlights these developments, which include internal research programmes, European Union funded research projects, Airbus internal Synergy project. This research includes an EU funded 3 year project HoliDes - Holistic Human Factors and System Design of Adaptive Cooperative Human Machine Systems. Continuous engineering within Airbus has included various corporate and divisional Synergy programs and lean and agile initiatives. As our business is defined by Multiple Portfolio products, supplied from multi countries, the MBSE process had to speed up delivery and reduce overall cost. The Airbus process models needed significant amendment due to products supplied via multiple business lines throughout the company. This problem is exacerbated by varying requirements of four national defence requirements, who impose restrictions on the use of Architectural Frameworks (NAF/MODAF/DODAF) and supporting tools. Our Human System Integration (HSI) is continuing from the initial Human View Architectural Framework research to include the nine HSI domains. These nine domains overlap with our current Human factors research and will now allow us to pull in our Non-functional work into our Systems Engineering lifecycle. This paper highlights the research projects Airbus Space and Defence are incorporating in to our overall strategy, these include internal R&D funding and European Union funded research programs. These research projects have highlighted several areas of interest these include, stochastic modelling with respect to Human System Integration and Human views, verification and analysis of emergent behaviour and non-functional properties, which conforms with our own work on non-functional requirements and finally the use of System of System Formal Methods for parts of the lifecycle.",2015
Chapter 2 - Model-Based Systems Engineering,"Chapter 2 summarizes model-based systems engineering (MBSE) concepts to provide further context for SysML without emphasizing a specific modeling language, method, or tool. MBSE is contrasted with the more traditional document-based approach to motivate the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed including a discussion on model-based metrics.",2015
Model-Based System Integration (MBSI) – Key Attributes of MBSE from the System Integrator's Perspective,"Many system developments fail at the integration and qualification (I&Q) phases in the development and acquisition cycle. How can we, as Systems Engineers (SE), navigate the uncertainty and risk of system development to ensure I&Q success? One solution is applying significant influence of the system integrator (SI) member of the SE team at the very beginning of system design. If this is a solution, then what processes, methods, and practices can the SI apply in the overall SE process? Can the emerging Model-Based Systems Engineering (MBSE) methods and tools be leveraged by the SI? This paper discusses a Model Based System Integration (MBSI) approach that applies essential MBSE methods and tools to the unique goals of the SI. While MBSE is supportive of the entire SE process, it tends to be optimized for the design-side of the SE process and not necessarily for I&Q goals and objectives. MBSI highlights how MBSE tools and methods can be extended to benefit the SI. Lessons- learned from several SE graduate school projects applying these MBSI methods are provided to demonstrate the efficacy of the MBSI approach.",2013
Chapter 1 - What Is Model-Based Systems Engineering?,"This chapter provides a short overview of systems engineering approaches, activities, and goals and how model-based systems engineering (MBSE) can help achieve them. The chapter makes the distinction between systems and discipline-specific engineering disciplines and then identifies and describes the primary systems engineering activities and their resulting engineering data. Following this, the three primary workflow models (V-Model, Incremental Model, and Hybrid V-Model) are discussed as means for sequencing the system engineering activities. With that basic understanding in place, the chapter proceeds with the advantages of MBSE over traditional document-centric approaches—such as supporting deeper reasoning about system properties and providing a single source of engineering truth. A short discussion of how to move from traditional methods to MBSE is supplied in the section on “Adopting MBSE.” The chapter winds up with “The Rules of Modeling” to provide a set of guidelines for new practitioners.",2016
Managing knowledge and parameter dependencies with MBSE in textile product development processes,"Today’s mechanical engineering companies are confronted with challenges like new material technologies, shorter product life cycles, increasing interdisciplinarity of the various departments as well as product development across distributed company locations. In the context of lightweight design, Tailored Textiles offer promising potentials to reduce product weight and manufacturing costs. Tailored Textiles are textiles with integrated local reinforcements whose textile properties can be adapted locally during the production due to the textile structures, so that process steps and therefore time and costs can be reduced. However, the production-oriented design of Tailored Textiles is currently very complex. One reason for this is the large number of stakeholders that are involved in the process. In order to make this complexity manageable, it is necessary to develop a common understanding of the textile process chain and to improve communication between different stakeholders. Another major challenge is the identification and management of technical parameter dependencies over the entire product development process (PDP). The aim pursued by this work is to link the technical parameter level of different expert models with the process level of Tailored Textiles PDP, so that expert knowledge is externalized to other stakeholders In this context, Model-Based Systems Engineering (MBSE) is a promising approach. Through the formalized application of modeling, MBSE allows the process accompanying development of a system model, which enables the visualization of the parameter dependencies within the product development process. In this paper, a methodological approach is presented which initially involves modeling the PDP for Tailored Textiles in a product data management system (PDMS). The process is then linked to a MBSE modeling tool. In the modeling tool, the analyzed parameters and their dependencies are set up and visualized. Following this procedure, the feasibility of the design will be evaluated based on a use case.",2020
Enabling complexity management through merging business process modeling with MBSE,"Integral products are characterized by multiple functional use of components, resulting in more compact and lighter products. However, those benefits come along with a significant increase in development process complexity. This complexity represents a significant risk in the value-creation chain. For the efficient fulfilment of customer needs and market requirements, strategies are required to cope with the complexity of integral products. A promising approach in this context is Model Based Systems Engineering (MBSE). Through the formalized application of modeling, MBSE allows the development of a system model to support the development process. The model enables a visualization of the process complexity and thus an identification of the essential complexity drivers. This knowledge is mandatory for the coordinated initiation of countermeasures. However, MBSE is not yet fully integrated in today’s product development processes (PDP). One reason for this is an insufficient interconnection between system models and business processes. This paper presents an approach for merging MBSE with business processes. The procedure comprises the modeling of exemplary business processes in a product data management system (PDMS). These processes are linked to a MBSE modeling tool via a RESTful API. Synergetic potentials of this connection are pointed out, based on scenarios from requirements management, product configuration and risk management. Finally, a discussion takes place regarding the degree of maturity to master complexity in business processes with MBSE.",2019
Modular Inspection Equipment Design for Modular Structured Mechatronic Products – Model Based Systems Engineering Approach for an Integrative Product and Production System Development,"Quality control is an essential part of the production of modular mechatronic systems. Especially the quality inspection of the overall system at the end of the production is of extraordinary importance. The associated inspection equipment can also be a mechatronic system, which is often explicitly designed and manufactured for one product with a large expenditure of time. In order to have the needed inspection equipment ready by the start of production (SoP) and to consider additional requirements to the product, which are produced by the inspection equipment concept, an integrative mechatronic product and inspection equipment development procedure is needed. Furthermore, the inspection system has to consider the modularity of the system and often has to be designed in a modular way. Nowadays, the development of complex mechatronic systems is often carried out with the help of model-based systems engineering (MBSE) methods. Consequently, the inspection equipment should also be designed with the help of MBSE. This paper describes an integrative product and inspection equipment procedure for modular mechatronic systems with the help of MBSE. Especially the peculiarity of the modularity is described and validated with the help of an application example.",2016
Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering,"To cope with the challenge of managing the complexity of automated production systems, model-based approaches are applied increasingly. However, due to the multitude of different disciplines involved in automated production systems engineering, e.g., mechanical, electrical, and software engineering, several modeling languages are used within a project to describe the system from different perspectives. To ensure that the resulting system models are not contradictory, the necessity to continuously diagnose and handle inconsistencies within and in between models arises. This article proposes a comprehensive approach that allows stakeholders to specify, diagnose, and handle inconsistencies in model-based systems engineering. In particular, to explicitly capture the dependencies and consistency rules that must hold between the disparate engineering models, a dedicated graphical modeling language is proposed. By means of this language, stakeholders can specify, diagnose, and handle inconsistencies in the accompanying inconsistency management framework. The approach is implemented based on the Eclipse Modeling Framework (EMF) and evaluated based on a demonstrator project as well as a small user experiment. First findings indicate that the approach is expressive enough to capture typical dependencies and consistency rules in the automated production system domain and that it requires less effort compared to manually developing inter-model inconsistency management solutions.",2019
Investigations on MBSE modelling and dynamic performance assessment of an electrical trimmable horizontal stabilizer actuator,"With the development of power-by-wire technology for more electric aircraft, the electro-mechanical actuator (EMA) has the advantages to replace the conventional hydraulic servo actuator in some aerospace flight controls. Conventional hydraulically powered trimmable horizontal stabilizer actuation (THSA) system is nowadays developed to be electrically supplied. Given their safety-criticality, no-back mechanism and redundant load paths are utilized to meet the flight control requirements. However, rare literatures have introduced these functions and addressed the virtual prototyping activities from system-level point of view. This paper proposed such a model of a THSA system with dual electric power sources and fault-tolerant mechanical load paths. The nonlinear effects of components are considered with realism, and system-level simulation test is conducted to support the model-based system engineering (MBSE) approach. The models are developed with a power view instead of a pure signal view. Focusing on the friction effect and compliance effect with backlash or preload, some improved and novel approaches are adopted for these crucial components and validated via experimental results. Meanwhile, the implemented system-level model enables injection of crucial faults. Finally, the simulation of the proposed model shows that it is an efficient resource to investigate the actuator’s dynamic performance, to virtually prove that the actuator meets the fail/safe constraint, and to demonstrate the soundness of the fault monitoring functions.",2023
MBSE and V&V: a tool-equipped method for combining various V&V strategies,"Model-Based System engineering (MBSE) promotes Verification and Validation (V&V) as crucial activities to demonstrate, during the system design stage and based on models, that a system meets requirements defined by stakeholders and that it fulfills its intended purpose. Model V&V activities are defined through the following strategies: Model Appraisal, Guided Modelling, Simulation and Formal Proof. Regarding the objectives of each individual strategy, they are considered as complementary, therefore mutually beneficial when combined, for reaching the overall V&V objectives. Various techniques and tools permit nowadays the implementation of each strategy. However, the successful combination and implementation of all four strategies remains still difficult (difference of concepts), time consuming (transformation and dedicated modelling are often requested) and generally expensive. This paper introduces a tool-equipped method for the successful and eased combination and implementation of all four V&V strategies to provide stakeholders with a high level of confidence in decision-making based on models.",2017
Designing Warehouse Logical Architecture by Applying Object Oriented Model Based System Engineering,"Warehouses perform series of interacting processes. Each process includes sub-processes and requires different resources. This structure makes warehouses complex-system or system-of-system (SOS) from design perspective. Model based system engineering (MBSE) facilitates SOS design. On the other hand, object-oriented modeling (OO) is a well-known approach for capturing complexity of software systems. This paper aims leveraging conceptual design of warehouse, by applying OO in MBSE. In this context, warehouse is analyzed with respect to abstract processes which transform item status/unit. Afterwards, warehouse logical architecture is designed using these processes. Introduced approach develops coherent meta-model for generating design alternatives in conceptual design stage.",2016
Model-based systems engineering: application and lessons from a technology maturation project,"The Tactical Assault Light Operator Suit (TALOS) project is a Special Operations Command (SOCOM) initiative to enhance operator performance, situational awareness, survivability, and lethality. The project adopted a Model-Based Systems Engineering (MBSE) approach to manage the structural system configuration and support the test and integration plan. This approach relies on a unified model in the Systems Modeling Language (SysML) to capture the logical and physical aspects of the system design. The MBSE approach was used to develop a test and evaluation framework that allows for traceability of test plans back to performance requirements. Additionally, the model supported the integration of hardware and software as well as the design of wire harnesses; the MBSE approach provided benefits over more traditional integration techniques. This paper provides lessons learned including the need to balance requirements analysis with functional characterization and the products that were generated from the model. Overall the adoption of the MBSE approach provided lessons on managing a system’s configuration among a distributed team.",2019
Maturity assessment of Systems Engineering reusable assets to facilitate MBSE adoption,"To enable the transition towards Model-Based Systems Engineering, it is necessary to provide engineering assets models during system architecture design phases. As promoted in the software community, systematic reuse allows significant gains in development productivity and quality. Thus, to develop a reuse strategy, a maturity scale facilitates determining the maturity level at which a company operates. In this way, it is possible to assess the progress margins and therefore estimate necessary efforts to improve maturity through a corresponding action plan. For this reason, this article proposes a scale to evaluate the maturity of the Systems Engineering assets reuse process.",2021
Network Science Enabled Cost Estimation in Support of MBSE,"As Model-Based Systems Engineering (MBSE) continues to mature, additional analyses can be performed to understand the relationships between a system's cost, schedule, and performance. The DoD Architecture Framework (DoDAF) is one of many approaches for representing the relationship between system components. If DoDAF diagrams - such as those provided in the Systems View - are treated as networks, they can be mathematically analyzed, providing additional summary metrics that might yield valuable insight into the degree of effort (i.e., cost) required to bring a system to fruition. For instance, if we view the addition of a new subsystem to the system's architecture abstractly as the addition of a vertex to a network, we can apply contemporary methods from network science to grow the network and estimate its cost. Unlike rules of thumb, this approach provides us with an objective way to quantify and assess change. The objective of this work is to turn MBSE knowledge into computational knowledge in order to support tradeoffs, change impact analysis, and related approaches early in the life cycle.",2013
A Review on Application of Model Based Systems Engineering to Manufacturing and Production Engineering Systems,"Increasing complexity in today’s manufacturing and production industry due to the need for higher flexibility and competitiveness is leading to inconsistencies in the iterative exchange loops of the system design process. To address these complexities and inconsistencies, an ongoing industry trend for organizations to make a transition from document-centric principles and applications to being model-centric is observed. In this paper, a literature review is presented highlighting the current need for an industry-wide transition from document-centric systems engineering to Model-Based Systems Engineering (MBSE). Further, investigating the tools and languages used by the researchers for facilitating the transition to and the integration of MBSE approach, we identify the most commonly used tools and languages to highlight the applicability of MBSE in the manufacturing and production industry.",2021
A visualization framework for product manufacturing data,"Model-based systems engineering (MBSE) plays a vital role in complex product development. In order to make the system modeling processes consistent with the business processes of the industry, it is necessary to use the product lifecycle management (PLM) system to manage system models. In this paper a SysML-based domain specific meta-model is proposed to support a visualization framework that includes graphics and data synchronization, which enables PLM software to present the product manufacturing data and models under the practicing of MBSE. Product manufacturing process and data are described, and the allocation of resource is represented in the early design phase.",2021
Study on the feasibility of modelling notations for integrated Product-Service Systems Engineering,"Developing products and services concurrently bears great potential as well as challenges. Systems Engineering (SE) is an interdisciplinary approach, which aims to enable the realization of successful systems. Model-based systems engineering (MBSE) is a SE approach focusing on the utilization of models for information exchange instead of documents. Methods and tools for MBSE are advanced and effective. Nevertheless, the field predominantly focuses on technical systems rather than on services and business models. In the context of the increasing importance of the Service Economy and rising innovative business models, an extension of the MBSE methods and tools to a service- and business model-centric view constitutes a research gap. Sufficient methods for requirements definition in PSS design have been developed. In concept design, the outline or rough concept of the product is defined. This step is currently not supported with useful methods. In order to address this research gap, the authors have proposed Integrated Product Service Architectures (IPSSAs) in previous research, which depict physical product architectures and service architectures in one integrated model. In previous studies, Systems Modelling Language (SysML) was identified as suitable modelling notations for IPSSAs, but several drawbacks of the notation were noted. Within this paper, a study is presented, which identifies suitable combinations of modelling notations and diagrams for IPSSA modelling. The combination of several diagrams from SysML, Business Process Modelling Notation (BPMN) and Data Flow Architecture is used on the practical example of ELSA (Engineering Living Systems of Autonomy), a service robot for guest and plant care. In order to address the lack of process-based service modelling in SysML, BPMN is added to common SysML modelling. In order address the data flow dimension, a third modelling notation, the Data Flow Architecture is proposed.",2019
Knowledge transfer and engineering methods for smart-circular product service systems,"Smart Product Service Systems (Smart PSS) have the potential to contribute to a Circular Economy (CE), but in the design of these systems engineering teams often lack information and knowledge on CE strategies and processes. Against this background, the authors propose a knowledge transfer system for the design of Smart-circular PSS. The system can be used in the concept phase of the Smart PSS development process and delivers information on CE strategies via a Smart-circular PSS Lifecycle Flowchart (SCPLF) and service archetypes. These strategies can be selected, supplemented and extended according to individual user requirements. The approach was validated using an intelligent street lighting system. This paper summarizes findings from the application and provides insights into potentials and limitations for the design of Smart-circular Smart PSS.",2021
Introduction to Information Visualization (InfoVis) Techniques for Model-Based Systems Engineering,"One of the barriers to the success of Model-Based Systems Engineering (MBSE) efforts is realizing effective communication of the output diagrams—i.e., modeling views—that address the concerns of, and inform, a broad spectrum of customer stakeholders. Abstracting and implementing the visual presentation of views—as products of very complex system models—is nearly as important to the effectiveness of these efforts to inform decision-making as the technical competency and completeness of those models. However, the information visualization of data from complex system models is often treated second to the technical considerations. This paper introduces high-level guidelines for visual presentation of MBSE efforts. These insights are presented such that they conform to numerous system modeling languages/representation standards. The insights are drawn from best practices of Information Visualization as applied to aerospace-based applications. For example, the paper presents how modelers can take advantage of functionality in existing modeling notions and software tools that implement them, and also the importance of keeping in mind the final presentation media, presentation venues, and historically accepted viewpoint styles. The paper also presents a concept for how to move beyond traditionally static outputs; in turn, allowing users to dynamically manipulate the output views within the context of their real-time concerns to answer specific questions about the modeled system(s).",2013
SAVE: Security & safety by model-based systems engineering on the example of automotive industry,"Cyber-physical systems (CPS), like autonomous vehicles, are intelligent and networked. The development of such systems requires interdisciplinary cooperation between different stakeholders. A lack of system understanding between stakeholders can lead to unidentified security threats & safety hazards, resulting in high costs in product development. In particular, a lack of an integrative consideration of security threats & safety hazards can compromise safety compliance for CPS. Model-based systems engineering (MBSE) improves the understanding of systems between stakeholders by additionally creating supporting models. However, MBSE approaches only partially address security threats & safety hazards. In particular, their integrative consideration is not taken into account. Established security & safety approaches either are only applicable to specific disciplines or only partially consider security threats & safety hazards. In this paper we present a method that enables the early identification of safety relevant security threats. The method is designed to be applied in workshops with an interdisciplinary team of stakeholders and is used to determine initial results for the system architecture design phase. We illustrate our approach with the example of the automotive sector. To build a realistic system architecture we identified 18 architectural vehicle components including relevant architectural constraints. Finally, we present an evaluation of the method, based on a workshop with 30 master students.",2021
Classification of Simulation Models for the Model-based Design of Plastic-Metal Hybrid Joints,"Laser-based hybrid joints (LBHJ) are promising due to low processing time and costs compared to conventional joining technologies. During the design of LBHJs, considering interactions between different domains (engineering, production, controlling) is required. This yields potential for a cross-domain design and optimization. However, considering the interactions is challenging and leads to iterations and inefficiency in product development. To map the interactions and exploit the potential of LBHJs, model-based systems engineering (MBSE) is a promising approach. With MBSE, domain models are integrated into a central system model and the model parameters are interconnected. To support a model-based design of LBHJs in the different phases of product development, usually several models are required. Therefore, multiple models in different fidelities for the same purpose exist (e.g. finite element and analytical models for joint strength estimation). Currently, this results in complex system models that are difficult to understand, reuse, extend, and maintain. The application of MBSE for the design of LBHJ is therefore inhibited. To overcome this deficit, the integration and linkage of domain models in the system model must be formally structured. Therefore, this paper presents a SysML metamodel, which classifies the domain models, defines their standardized structure and specifies their integration and linkage within the system model. The formal structuring is based on the classification criteria purpose. For each purpose, a superordinate model is built and connected to the domain models. To avoid complex system models that are vulnerable to changes, only superordinate domain models are linked with each other. Domain models can thus be easily replaced, without affecting the consistency of the system model. The results show that system models, built with this approach, can be easily created and used for the model-based design of LBHJs. Furthermore, interactions between the domains can be handled and efficiency in product development is increased.",2022
Unified modeling for digital twin of a knowledge-based system design,"While Model-Based Systems Engineering (MBSE) improves the ambiguity problem of the conventional document-based way, it brings management complexity. Faced with the complexity, one of the core issues that companies care about is how to effectively evaluate, predict, and manage it in the early system design stage. The inaccuracy of contemporary complexity measurement approaches still exits due to the inconsistency between the actual design process in physical space and the theoretical simulation in virtual space. Digital Twin (DT) provides a promising way to alleviate the problem by bridging the physical space and virtual space. Aiming to integrate DT with MBSE for the system design complexity analysis and prediction, based on previous work, an integration framework named System Design Digital Twin in 5 Dimensions was introduced from a knowledge perspective. The framework provides services for design complexity measurement, effort estimation, and change propagation prediction. Then, to represent the system design digital twin in a unified way, a modeling profile is constructed through SysML stereotypes. The modeling profile includes System design digital model in virtual space profile, system services profile, relationships profile and digital twin data profile. Finally, the system design of a cube-satellite space mission demonstrates the proposed unfiled modeling approach.",2021
Using Transitive Relations for Automatic Creation of Consistent Traceability in Model-based Systems Engineering,"Traceability allows product developers to know more about the logical relationships in model-based systems engineering. Despite the known advantages, traceability is still not established as a standard in product development. High amount of necessary work force for traceability creation counts as one of the major obstacles against traceability. In this work, we investigate the applicability of transitivity rule to automate the creation of traceability. The conducted experiment shows, that automated traceability creation with transitivity rule is possible, however, wrong tracelinks are still inevitable.",2018
Simultaneous and collaborative development of satellites and Information Systems to support their lifecycle processes,"Space Systems Engineering is the domain in which satellites are developed. A lot of information gathered by the systems engineer to develop a space product is also necessary and gathered by the software engineer in the Software Engineering domain to develop the Information Systems that will support the lifecycle processes of that product. Motivated by this reality, this paper aims to demonstrate that the work of the software engineer can be integrated with that of the systems engineer during the Systems Engineering process. We assumed the use of Model-Based Systems Engineering (MBSE) and Systems Concurrent Engineering (SCE) as the approaches to engineering a satellite and looked at the activities performed by the systems engineer to identify how the software engineer’s work can be inserted into the Systems Engineering process. We use the AMAZONIA 1 satellite to exemplify and focus on the process of assembly, integration and testing of this satellite. We concluded that simultaneous and collaborative work between the Systems Engineering and Software Engineering domains is feasible and can bring quality and productivity gains for both sides.",2023
Visualising food traceability systems: A novel system architecture for mapping material and information flow,"Background
Traceability of food products, ingredients and associated operations are important requirements for improving food safety and consumer confidence. Food traceability systems (FTSs) often suffer from inefficiency in either material or information flow within an enterprise or between supply chain partners. Modelling of system architecture is a visualisation approach that allows multiple parties to collaborate in a system design process, identify its inefficiencies and propose improvements. However, there is little academic research on the ability to use a standard visualisation tool that supports collaborative design and considers both material and information flow for a given food traceability system.
Scope & approach
The aim of this research is to propose a new visualisation approach that allows supply chain operators to collaborate effectively in the design process of FTSs capable of maintaining streamlined information flow, minimising information loss, and improving supply chain performance.
Key findings & conclusion
Food traceability systems are complex, encompassing processes, material flow, information flow, techniques, infrastructure, people and control strategies. Screening of literature demonstrates that model-based system engineering (MBSE) offers a sound way for visualisation of such complex systems. However, in the food traceability literature, an MBSE-based standardised traceability system modelling approach is absent. This study makes a strong contribution to existing literature by proposing a novel, material and information flow modelling technique (MIFMT), to visualise FTS architecture. MIFMT can support common understanding and iterative implementation of effective FTSs that contextualise food supply chains at multiple levels and provides opportunity to identify points at where inefficiencies can occur so that actions can be taken to mitigate them.",2021
Towards a modular product architecture for electric ferries using Model-Based Systems Engineering,"With the reduction of the allowed emission values, the need for fast and emission-free passenger transport is growing - even on coastal or inner city waterways. Many cities and regions are therefore striving to quickly replace their existing conventional diesel ferries with electrically powered passenger ferries. Shipbuilding, however, is characterized by individual applications and corresponding one-off productions. While the concept of modularization has proven itself in many industries to realize individual products in a short development time, such approaches are hardly found in the maritime industry. In particular, the high degree of dependency between the individual system elements of a ship represents a major challenge in the development of modular ships and ship architectures. This dependencies are further increased in the case of electrically driven high-speed ships, which in the present case are used for passenger transport in urban areas. This paper presents an approach for identifying reusable and standardized modules in shipbuilding for high-speed vessels using Model-Based Systems Engineering methods. The goal of the approach is to create a multi-domain system model that enables developers to identify use-case spanning standard modules and interfaces.",2020
The long and winding road: MBSE adoption for functional avionics of spacecraft,"Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE). It is claimed that MBSE promotes consistency, communication, clarity and maintainability within systems engineering projects and addresses issues associated with cost, complexity and safety. While these potential benefits of MBSE are generally agreed upon by would-be practitioners, its implementation is challenging and many organisations struggle to overcome the cultural and technical hurdles along the long and winding road to MBSE adoption. In this paper, we aim to ease the process of implementation by investigating where the current issues with the existing systems engineering processes lie, and where a model-based approach may be able to help, from the perspective of engineers working on spacecraft functional avionics in Airbus. A repeatable process has been developed to elicit this information. Semi-structured interviews have been conducted with 25 Airbus engineers working in Operations, Software and Failure, Detection, Isolation and Recovery. The acquired data has been thematically analysed to extract common themes from the responses. The results presented in this paper have yielded four recommended application areas to consider when applying MBSE to Functional Avionics: organisation modelling; early functional validation; communication and consistency; template model framework development.",2020
Application of Integrated Modeling and Analysis to Development of Complex Systems,"Model-based systems engineering (MBSE) is an approach to improve traditional document-based systems engineering approach through the use of a system model. In the current practice of system developments, there exists a large gap between systems engineering activities and engineering analyses, because systems engineers and engineering analysts are using different models, tools and terminology. The gap results in inefficiencies and quality issues that can be very expensive to fix. An integrated modeling and analysis capability was developed that bridges the gap. The technical approach is based on integrating SysML modeling tools with a process integration and design optimization framework. A capability was developed to automatically generate analysis models from a system model and then execute the analytical models. The integrated toolset enables engineers to quickly evaluate system configurations using realistic analysis models and automatically check requirements compliance. The capability was applied to a number of system development projects in industry, including a ground-based radar system. The integrated approach allowed the design teams to perform continuous design, analysis, and trade studies throughout the design process, and respond quickly to changes in requirements and design configurations.",2013
Towards a logical framework for ideal MBSE tool selection based on discipline specific requirements,"Model-Based Systems Engineering (MBSE) has emerged with great potential to fulfill the non-linearly rising demand in interdisciplinary engineering, e.g., product development. However, the variety and complexity of MBSE tools pose difficulties in particular industrial applications. This paper tries to serve as a guideline to find the ideal tool for a specific industrial application as well as to highlight the key criteria that an industry might consider. For this purpose, we propose a logical framework for MBSE tool selection, which is based on market research, the approaches of Quality Function Deployment (QFD), and decision matrix. As customers are at the center of any product, accordingly the needs of MBSE tool users are addressed within this research as the fundamental starting point. Market research and extensive discussions with MBSE tool vendors and academia show the current situation of MBSE tools. To compare the performance of the considered tools, a set of user needs is defined. QFD is performed to analyze the user needs with respect to evaluable technical properties. Subsequently each tool performance is assessed using a decision matrix. Through this process, a well-defined functional structure of MBSE tools is sketched, and in order to identify the properties of an ideal tool, all the attributes of different MBSE tools are mapped to a common platform. For the purpose of evaluation, we apply our proposed logical framework to select an exemplary MBSE tool for interdisciplinary application.",2022
Integrating human factors in the model based development of cyber-physical production systems,"In order to optimize production processes and to avoid errors, it is not only necessary to automate processes, but also to integrate workers wit their individual personality and skill profiles. For this purpose, human factors should be considered in the entire design process. The integrate view of mental human models, the cognitive demand of the working environment and the automation design is essential. Human-Syste Integration (HSI) constitutes a promising approach. Current model-based approaches offer possibilities to analyze and optimize tasks within a overall system, but they still lack integration. This leads to the research question: How can human factors be integrated into a system model of socio-technical, Cyber-Physical Production System? The paper at hand contributes an approach of human factor integration into the procedu of Model-Based Systems Engineering for Cyber-Physical Production Systems (CPPS). The approach combines a system model of a CPPS wi HSI concepts. In accordance to the benefits of MBSE, SysML is selected to integrate human factors in the development process of a CPPS. Th approach is divided into five steps, which include the extension of the SysML meta model. This allows the optimization of skill-based huma machine interaction. Defined HSI-Profiles enable system developers to integrate employee requirements at early stages within the developme process. The approach is demonstrated by the maintenance of a 3D-Printer as a case example. This research enables system developers to depi individual workers with the help of the developed concepts and systematically integrate them into the development process of a CPPS.",2021
Complex System Simulation: Proposition of a MBSE Framework for Design-Analysis Integration,"The multi-disciplinary nature of complex system, such as aero engines, requires a data structure that considers the behavioural interactions within the system. This paper focuses on the management of simulations models and data, with respect to complex system structure. It is proposed to use model based system engineering (MBSE) methodology to support modelling activities and improve the integration of simulation activities in the design process. Current studies on MBSE address the issue of representing and integrating design models with diverse analysis/simulation/behavioural models. However, some limitations can be identified, especially regarding the federation of system presentation for addressing the overall behavioural aspects of the product (multi-physic, local and global behaviours) and thus considering the several system levels. Our proposal is to provide a software framework based on a data model that manages complex system structure. This data model structures behavioural information considering three major interactions:•Interactions between components simulation models,•Interactions considering multi-level behaviours (e.g. use of components simulation for a module simulation) and•Interactions between domain behaviours (e.g. Thermal impact on mechanical). A demonstration of this software framework is proposed, based on the set-up of a mechanical simulation of an aero engine using CATIA/SIMULIA V6.",2013
Methodology for iterative system modeling in agile product development,"Nowadays, manufacturing companies are challenged by dynamic market environments caused by increasing globalization, digitization and climate change. Therefore, the ability to act with speed, flexibility and efficiency in product development becomes inevitable for success. Moreover, various stakeholder requirements have to be considered and time to market has to be reduced. The development of complex mechatronic systems also requires an interdisciplinary cooperation of various engineering domains, i.e. mechanics, electrical engineering and computer science. Agile product development addresses these challenges with its focus on the iterative development of functional system increments. As a result, it enables to reduce time to market and improves handling of changing customer requirements. The model-based systems engineering (MBSE) approach with its centralized system model serves as a single source of truth and data repository. Thereby, it enhances efficiency and transparency along the product development process. The integration of MBSE into agile product development offers numerous opportunities, such as virtual prototypes and the build-up of a product’s digital twin. As the design of a complete system model at the beginning of a development process requires high temporary resources, an iterative approach should be applied to incrementally build the system model along the product development process. In this paper a methodology for the iterative system modeling in agile product development is presented. In each agile sprint, design parameters based on a development question are elaborated. The information that supports answering the development questions is provided by the system model. Since the system model itself can only provide but not process information it is necessary to select the best toolset to process the necessary information. By transferring the information back to the system model, the elements of the system model itself are iteratively developed and updated.",2021
Model-Based Systems Engineering approach for the development of the science processing and operations center of the NASA OSIRIS-REx asteroid sample return mission,"The Origins Spectral Interpretation Resource Identification Security Regolith Explorer (OSIRIS-REx) asteroid sample return mission, which is planned for launch in 2016, will study and return a sample from asteroid Bennu to Earth for further detailed analysis. This mission is unique in that little information about Bennu, including the gravity field, shape model, and thermal environment, is well known at this time. This information will instead be determined via a thorough close-proximity operations phase that will fully characterize and analyze the asteroid prior to retrieving the sample, requiring a complex ground system architecture in order to provide scientists the necessary information to make key decisions regarding sample collection. Importantly, the OSIRIS-REx Science Processing and Operations Center (SPOC) is at the heart of the process to characterize the asteroid and collect the sample, as its high level functions include the data processing necessary to fully analyze the information from the spacecraft and the generation of instrument observation sequences to collect the necessary data. These factors necessitate a strong systems engineering focus across the project. The SPOC team has chosen to tackle this problem by utilizing a Model-Based Systems Engineering (MBSE) approach to facilitate the development of the OSIRIS-REx ground system, and more specifically, the SPOC. MBSE is a relatively new approach that formally applies modeling to support system requirements, design, analysis, and verification and validation activities, and only recently been used in the development of the ground system of a space mission. As such, this approach has been lauded in key mission reviews as a significant strength of the project, especially for its ability to provide a consistent approach for the entire ground systems team. Importantly, the MBSE approach has provided many benefits to the SPOC Systems Engineering team. In particular, the MBSE approach has been utilized to generate a consistent architecture across all ground system elements, to manage all OSIRIS-REx ground system requirements easily in one location, to perform verification and validation of these requirements, and to validate the ground system operations time line. Further, through the use of common tools, project systems׳ engineers can quickly and efficiently generate documentation based on the developed model, including interface, requirements, and verification documentation. Finally, these same tools allow for the potential future re-usability of the development currently being performed for use in future mission architectures.",2015
Questioning integration of verification in model-based systems engineering: an industrial perspective⋆,"The increasing of complexity of industrial products makes Verification and Validation procedures challenging. Model-Based Systems Engineering (MBSE) has been proposed as an approach to manage such complexity through the formalized application of models throughout the systems development life cycle to support verification activities. The purpose of this paper is to make a first step towards developing a verification strategy by performing a qualitative survey on current industrial practices against the state of the art in MBSE. Data had been collected through workshops of 16 engineering organizations located in the Rhone-Alpes region of France. Key success criteria for integrating model-based verification with MBSE are identified by industry respondent. These criteria allow to analyse the top verification methods presented in MBSE publications and compare them to current practices. To further validate the use of these presented methods, interviews and observations were conducted to analyse the methods through different industrial perspectives and identify their feasibility for successful application. The findings of this study gives a picture of current practices in integrating verification and MBSE in industry. The paper discusses the impact of implementing such practices in companies beginning to adopt MBSE approaches. It is concluded by identifying opportunities and barriers for Model-Based Verification adoption.",2020
Environment modeling for evaluating system variants in model-based systems engineering,"Model-based systems engineering is a methodology for the interdisciplinary system development using different domain models. Considering the intended system’s environment and context of usage in early design phases is a way of bridging the gap from system’s design to its real-life applicability. Simulations represent a possible approach to consider different constellations but are effortful. Therefore, we present a generic environment modeling approach to evaluate different environmental models with their respective environmental, user and system’s impact based on generated system variants derived from system requirements. In this sequential process, we consistently link and evaluate system variants to possible system contexts.",2021
Chapter 3 - Getting Started with SysML,"Chapter 3 provides an introduction to SysML and guidance on how to begin modeling with SysML. The chapter provides a brief overview of SysML, and then introduces a simplified version of the language that is referred to as SysML-Lite, along with a simplified example, and tool tips on how to capture the model in a typical modeling tool. This chapter also introduces a simplified model-based systems engineering (MBSE) method that is consistent with the systems engineering process described in Chapter 1, Section 1.2. The chapter finishes by describing some of the challenges involved in learning SysML and MBSE.",2015
Model Based Systems Engineering for Smart Grids as Systems of Systems,"This paper presents a System of Systems (SOS) approach to understand, analyze, and design modern energy Smart Grids using Model-Based Systems Engineering (MBSE) methodologies. The concept and definition of a Smart Grid as SOS is presented and Smart Grids are analyzed in the form of detailed architectural artifacts with System Modeling Language (SySML) using industry standards. As part of this research, the design space for Smart Grids was viewed from a logical, behavioral, physical, and techno-economical perspective for the optimal integration of various systems. In summary, this paper uses Methods, Processes, and existing Technologies (MPTs) in systems engineering (SE) and extends them to SOS perspective to help provide an end-to-end life cycle view of a fully functional energy Smart Grid system; in addition, we complement the NIST reference model with an Enterprise layer to address specific enterprise strategies. The paper intends to provide an insight into the methodologies that are involved to realize a functional Smart Grid as a self sustaining energy enterprise and presents the challenges and benefits of achieving the above goal.",2011
Event-based safety and reliability analysis integration in model-based space mission design,"Model-based safety and reliability (S&R) analysis, which improves analysis accuracy and reduces cost and development time is applied in various industries. With the developments in model-based systems engineering (MBSE) and the use of systems modelling language (SysML), S&R analysis based on SysML models is gaining more attention. However, the emerging methods are inadequate for complex space missions. Thus, the main objective of this study involves integrating S&R analysis in SysML-based space mission design. First, a framework for integrating S&R analysis in model-based space mission design is presented. Based on the characteristics of the development of complex space missions and the MBSE process, a multisystem collaborative failure analysis method is proposed to comprehensively identify the failure modes (FMs) of the entire system. Subsequently, an event-based analysis method integrating the process of functional architecture definition is proposed, which fills the identified gaps in model-based S&R analysis for mission-level systems. Based on the identified FMs and proposed criterion, the event tree can be mapped from the SysML activity diagram. Finally, the proposed methodology is applied to a case study of a complex space mission in the near future: the manned mission to the Moon.",2023
A Conceptual Basis for Inconsistency Management in Model-based Systems Engineering,"A crucial issue in system architecting is the need to study systems from different viewpoints. These viewpoints are defined by a variety of factors, including the concerns of interest, level of abstraction, observers and context. Views conforming to these viewpoints are highly interrelated due to the concerns addressed overlapping. These interrelations and overlaps can lead to inconsistencies. The challenge is to identify and resolve - that is, manage - such inconsistencies. This paper introduces an approach to managing inconsistencies within the context of Model-Based Systems Engineering (MBSE). In current practice, the management of inconsistencies relies on ad-hoc methods and infrequently conducted activities such as reviews. The result of this practice is that decisions are often made based on inconsistent information, which can lead to costly rework or even mission failure. Therefore, assisting humans by means of a computational method that can continuously identify and aid in resolving inconsistencies adds significant value. In the paper, the hypothesis that pattern matching can serve as a generic means of identifying inconsistencies is investigated. It is shown that graph patterns can be used as a means to capture conditions for and formally reason about the existence of inconsistencies, and to specify resolution alternatives. The paper concludes that using patterns to manage inconsistencies can be very effective and accurate, but it may also incur additional costs that must be carefully balanced with the benefits gained.",2014
Chapter 2 - Model-Based Systems Engineering,"Publisher Summary
Model-based systems engineering (MBSE) applies systems modeling as part of the systems engineering process to support analysis, specification, design, and verification of the system being developed. A primary artifact of MBSE is a coherent model of the system being developed. This approach enhances specification and design quality, reuse of system specification and design artifacts, and communications among the development team. This chapter summarizes MBSE concepts to provide further context for SysML without emphasizing a specific modeling language, method, or tool. The emphasis for MBSE is to produce and control a coherent system model and use this model to specify and design the system. Modeling can support many purposes, such as to represent a system concept or specify system components. A good model meets its intended purpose, and the scope of the model should support its purpose within the resource constraints of the modeling effort. Quality attributes of a model, such as model consistency, understandability, and well-formedness, and the use of modeling conventions, can be used to assess the effectiveness of a model and to drive preferred modeling practices. MBSE metrics can be used to assess design quality, progress, and risk and support management in the development effort. MBSE is contrasted with the more traditional document-based approach to motivate the use of MBSE and highlight its benefits. Principles for effective modeling are also discussed.",2012
Use of Model-Based System Engineering methodology and tools for disruption analysis of supply chains: A case in semiconductor manufacturing,"In the age of complex and large-scale systems, Model-Based System Engineering (MBSE) is increasingly becoming a sine qua non in industry due in large part to a wider use of software applications and an increased move towards standardization. In this study, we research the application of the MBSE methodology (definition, design, analysis, and synthesis) to disruption management with a specific focus on a semiconductor supply chain case study. Within this methodology we use three MBSE tools, namely OWL, BPMN, and SysML, with the main focus being on definition of the problem to ensure that the “correct” problem is solved. The article does not report on any new research into the MBSE tools, but applies the available tools. Many of these tools have limitations, especially in the area of analysis and synthesis, that have been overcome if not widely adopted, in the area of product design (i.e., finite element analysis and simulation, etc.), which is a limitation in the type of systems studied here, i.e., a supply chain system which is a discrete event system. Through the application of the MBSE methodology and the application of the three MBSE tools, a comparison is provided that highlights further opportunities and obstacles, but which ultimately demonstrates a positive proof that the MBSE methodology is necessary for revealing sources of systematic disruptions within a complex integrated industrial information system.",2022
Using SysML for Model-based Vulnerability Assessment,"This paper discusses the use of model-based systems engineering (MBSE) models for physical protection systems (PPS) evaluation. We discuss why MBSE methodologies can be valuable in assessment of PPS. Next, we review the steps in vulnerability assessment (VA) and describe the use of SysML models in these steps. The paper presents examples of SysML models for a VA scenario. Such models can enable the development and integration of other VA tools and reduce the time and cost of conducting VA, which will lead to safer facilities.",2015
Model-Based Systems Engineering for Machine Tools and Production Systems (Model-Based Production Engineering),"Model-Based Systems Engineering (MBSE) has been known in aerospace and automotive industries for more than a decade and is based on a model-driven approach to integrate all engineering disciplines. This paper shows a promising approach to meet the ongoing challenges in the development of production systems. First, the current sequential, mechatronic engineering process of production systems is summarized and deficits are pointed out. Then, the paper outlines a roadmap with necessary steps to adapt the MBSE approach to the engineering of production systems, called Model-Based Production Engineering (MBPE). This roadmap includes the definition of a design language for production systems.",2018
Model Based Systems Engineering in Construction Kit Development – Two Case Studies,"To offer a large variety of end products with a limited number of components, more and more companies take advantage of the modular design, platform and type series principles resulting in a construction kit development. These standardization methods make the product development processes more complex. This can be encountered with the help of Model Based Systems Engineering (MBSE). In order to support construction kit development with the help of MBSE in a long term, definitions of such terms as module, platform, type series and construction kit are analyzed and defined in the context of MBSE. As a result, some implications of these definitions are presented in this paper. In addition, first findings out of two research studies conducted at an automotive manufacturer are presented and put into the context of MBSE. The studies indicate the potential of MBSE supporting construction kit development.",2015
Digital Twin for Services (DT4S): Conceptual Strategy,"While the Digital Twin is now well discussed in manufacturing, the research considering the Digital Twin of services engineering is still in its early stage. The Digital Twin is very focused on the manufacturing operations with gathering data from physical means and information technology. Yet, services are now features and core concerns of complex systems development. However, it is not much focused on services and above all workflow orchestration to deliver these services to user whether it is an internal operator, or a customer. The engineering of Digital Twin services is a complicated phase because of the complexity of interactions and heterogeneous nature of services. The simultaneous use of models and data (e.g., Model Based System Engineering (MBSE)) should be considered for service-oriented engineering projects of complex system (large system, heterogeneous components, autonomous, etc.). Based on this postulate, the contribution of this paper is about Digital Twin and MBSE for Servitization industry. In detail, the paper proposes a recall of information systems for enterprises, workflow and servitization. Then it draws some perspectives about the interest of Digital Twin approach based on models for product service systems. It discusses the relation between service twin and ground data and the link to decision level.",2022
Complexity assessment using SysML models,"System complexity is often associated with multiple issues such as schedule and cost overruns, poor performance or even program failure. With engineered systems becoming ever more complex it is of great interest to be able to assess the complexity of a system easily and during the design process. Since Model Based Systems Engineering (MBSE) is becoming a widely used tool in systems development, a method to assess complexity using a SysML model and the information that is typically depicted in a model is developed. The complexity estimation in SysML was done by adapting the complexity metric developed by Sinha and Suh for a Design Structure Matrix (DSM).",2019
Exhaustiveness of Systems Structures in Model-based Systems Engineering for Mechatronic Systems,"The increasing complexity of mechatronic systems results in a challenging development process. In an interdisciplinary design environment, the communication and cooperation between the disciplines is necessary to establish a basis for efficient and effective product development. The approach of MBSE focuses on this aspect by means of an abstract description of the system structure. The system structure is created and read by different persons. It is crucial that these semi-formal models, considered by very different stakeholders, are build up comparably and exhaustively. Nowadays there is no way to check the model of exhaustiveness. We classified model elements and derived modeling guidelines enabling the model-user to create comparable and exhaustive system structures.",2016
Geometric Variability in Parametric 3D Models: Implications for Engineering Design,"Modern manufacturing companies operate in environments characterized by increasingly shorter development cycles and the need to develop highly customizable products at competitive prices. In this paper, we examine the role of parametric 3D modeling in the product development process, and highlight the importance of robustness, flexibility, and responsiveness to geometric variations, which are particularly relevant in the context of the Model-Based Enterprise (MBE). We discuss the often-inefficient parametric 3D modeling practices used in industry, their root causes and implications, and identify the detrimental effects of low-quality models on engineering design activities, specifically design changes during development, generative design algorithms, design optimization, simulation, product/part family configuration, AI-based parametric modeling, Model-Based System Engineering (MBSE), and parametric and adaptive encryption. Finally, we present future lines of research aimed at increasing the quality of parametric models.",2022
Integrating Environmental Impacts with SysML in MBSE Methods,"The continuously growing integration of mechanics, electronics, and informatics into modern products introduces a considerable complexity into product development activities. Model-Based Systems Engineering (MBSE) methods are one approach to handle this complexity. Eco-design methods, which are also increasingly important due to sustainability focus of many companies, is not fully implemented or even not taken into account at all in MBSE methods. Therefore, this paper aims at integrating the environmental impacts of a mechatronic product in a MBSE method using Systems Modelling Language (SysML).",2017
Integration of Communication using OPC UA in MBSE for the Development of Cyber-Physical Systems,"Interoperability of Cyber-Physical Systems in the context of Industry 4.0 is currently not explicitly considered during product development leading to compatibility problems during commissioning and usage. This paper addresses the research question of integrating interoperability based on OPC UA Companion Specifications and its building blocks into Model-Based Sytems Engineering (MBSE). For this purpose, a system modeled in SysML is extended by the requirements resulting from communication via OPC UA. The generated information model is integrated into the OPC UA server, enabling interoperability between Cyber-Physical Systems. A prototypical implementation validates the approach.",2022
Using MBSE to Enhance System Design Decision Making,"When developing new systems, developers are challenged with tracing requirements to system design elements and helping decision makers choose between designs options that implement these requirements; options which may have vastly different cost, supportability, and business implications. Model-Based Systems Engineering (MBSE) has emerged as viable method for graphically tracing requirements to design elements, however, additional research is needed on using the resulting views to support decision making. This paper describes a method for using MBSE views to positively map requirements, metrics, and test cases against the design of a notional system with a focus on using the views for effective decision making.",2012
Industrial Design and Development Software System Architecture Based on Model-Based Systems Engineering and Cloud Computing,"Oriented to the new generation of cyber-physical manufacturing, this paper introduces two breakthroughs of industrial design and development software system: model-based systems engineering (MBSE) and cloud computing. Based on the classic V model for product development, an MBSE double-Vs model is refined which takes both model life-cycle and product life-cycle into consideration for design process re-engineering. Then cloud computing and its re-structuring on traditional industrial software system are discussed. Shift from classic single approach, this research proposes an industrial design and development software system architecture based on model-based systems engineering (MBSE) and cloud computing. The new architecture is shown in a stereoscopic way which amply utilizes the respective advantages of MBSE and cloud computing. At the end of the paper, as an example of actual cases, a flight management system (FMS) design and development platform is detailed to verify the effectiveness of this new architecture. The implement of new system architecture creates an efficient collaborative mechanism for FMS developing.",2021
Beyond Model-Based Systems Engineering towards Managing Complexity,"Systems Engineering domain lacks in methodologies for integration of development artefacts (e.g. requirements, functions, geometrics, or behavior) and enterprise models (e.g. organizational structures, processes, or IT infrastructure). Especially the rising complexity driven by integrated product service systems, smart services, systems of systems and cyber physical systems (CPS) leads to a new paradigm further on called Advanced Systems Engineering (ASE). It empowers enterprises to cope with such complex developments. The employment of ASE technologies in design and manufacturing enterprises requires a reachability of technical information and continuity along vertical and horizontal dimensions. A widely used approach to implement this is Model-based System Engineering (MBSE). This paper introduces a solution to achieve the goals of manufacturing excellence as well as complexity management by identifying and analyzing relevant requirements and possible approaches for an innovative simulation enabling and executable modelling language, the so-called advanced MBSE+.",2020
Project-Based Learning for Control of Hybrid Powertrains using a Simulation Model,"This paper describes an activity and assessment in the module “Hybrid and Electric Vehicles” at Loughborough University, which aims to create engagement with the control of hybrid powertrains. A hybrid powertrain uses both an internal combustion engine and a battery powered electric motor, and the goal is to distribute the power demand across both in a way that achieves the “best of both worlds.” It is a slightly unusual but highly popular control problem. The activity uses project-based learning, centred around an open-source simulation model and simulation library specifically created for teaching purposes. It provides a fast, abstract yet representative energy behaviour of the whole vehicle, and visualises key aspects of the powertrain and its energy balance. The assessment task is an open challenge, asking students to improve upon an existing basic control strategy. The marking process involves a computer-based assessment for vehicle economy, drivability, and emissions. This gives learners the opportunity to pursue a practical hands-on exercise, and to demonstrate a realistic engineering approach of their choosing.",2022
Application of model-based systems engineering on a university satellite design team,"System Engineering is a foundation of the Missouri S&T's Satellite Design Team, although it is not explicitly stated at all times. However, implementation of the systems engineering process within a student design team presents unique challenges. Student design teams have a high personnel turnover, a limited time commitment due to classes, some new members have little to no experience, and a sometimes lack of motivation to participate since it is volunteered time. The largest problem on the team is getting the new members knowledgeable about the system so they can start contributing as fast as possible. The other big problem is keeping documentation about the system design consistent and up-to-date. With a model-based approach, system specifications are updated all at once, and kept consistent throughout the design. The model also allows the team leadership to “walkthrough” the design and design process with the newer members. Diagrams sometimes help better explain design than word documents, especially to visual learners. The model will not completely replace documentation, it is used to help augment the learning process for new members, and keep better control of traceability.",2012
Towards collaborative life cycle specification of digital twins in manufacturing value chains,"A digital twin is a digital representation of an unique product or product service system that is sufficient to meet the requirements of a set of use cases. Following this definition, the implementation of a digital twin must be derived from concrete use cases along the life cycle of a product. However, the involvement of a variety of different stakeholders and frequent changes of ownership in the value chain complicate the identification of use cases as well as the specification of the digital twin and its governance. This leads to a need for a systematic approach that enables various partners to implement the digital twins needed for their specific use cases. This paper presents a specification technique that combines aspects from Model-Based Systems Engineering with Product Lifecycle Management to support a collaborative front-end planning and specification of digital twins. It integrates the different views of various digital twin stakeholders (product manager, systems engineer, developer, data scientist etc.) in a collaborative model across the value chain. As part of the systematic approach, a digital twin specification grid that structures guidelines for the aspects of a digital twin (e.g. the data sources) across the product life cycle is provided. The presented approach also supports the derivation of a digital twin by integrating different use cases. This specification technique is the first step towards a holistic, Model-Based Digital Twin Design Framework.",2021
"An original Data, Information and Knowledge management approach for model-based engineering projects","Data, Information and Knowledge (DIK) problematics are of undeniable growing actuality; many efforts were made to explore and make progress in this domain. Therefore, these DIK have been defined by several characteristics conventionally studied such as volume, variety, variability… and a few solutions have been uncovered and revealed. In parallel, the systems Engineering (SE) and specifically Model-Based Systems Engineering (MBSE) approaches, that encourage, among other things, the use of models instead of documents in critical infrastructure engineering namely in the energy infrastructure domain, participate in the growing volume and complexity of DIK. In this particular context, it is important to enrich MBSE by adapting the existing DIK advances to the MBSE needs, which is initiated in this paper, first by providing DIK definition, second, by checking what are the main issues that shall be solved in order to help stakeholders use and manage them in large MBSE-driven projects, involving various business actors during more or less long periods. At last, this article proposes a methodological contribution bridging the supposed gap between MBSE and so-called data management fields of research.",2022
System interoperability: definition and proposition of interface model in MBSE Context,"System interoperability is an essential feature of any system to be able to interact with other systems during its mission without any problem or anticipating these ones and their effects when necessary. However, Systems Engineering (SE) approach does not clearly takes into account this feature. First, there is no clear definition of system interoperability requirement in SE. Second, there is no relevant interface model in SE with which engineers can model and check system interoperability requirements. This article aims first to define the system interoperability concept. Second it defines and formalizes the notion of interoperability requirement allowing then to enrich the classical requirements repository used in SE domain. Third, it promotes an interface meta model allowing engineers to build and to check interfaces taking into account interoperability requirements in coherence with MBSE hypotheses.",2012
An Ontology-based Engineering system to support aircraft manufacturing system design,"During the conceptual design phase of an aircraft manufacturing system, different industrial scenarios need to be evaluated against performance indicators in a collaborative engineering process. Domain experts’ knowledge and the motivations for decision-making is a crucial asset for enterprises which is challenging to be captured and capitalised. Ontology-based Engineering (OBE) systems emerge as a new generation of Knowledge-based Engineering techniques with advancements of ontology engineering methods and computer science technologies. Ontologies enable to capture both explicit and implicit domain knowledge from historical records and domain experts. These Ontology-based Engineering systems can stand highly complex collaborative design processes involving multidisciplinary stakeholders and various digital tools. This paper proposes a tradespace framework with Ontology-based Engineering features included on top of existing Model-Based System Engineering and interoperability capabilities. These additional Ontology-based Engineering features reuse formalised knowledge via knowledge graph technologies and generative algorithms, changing the cognitive process from the designer, to an automatic process which generates design alternatives for the designer. The tradespace framework is demonstrated in a case study to design the aircraft fuselage orbital joint process, helping the designer to take better strategic decisions at conceptual phase and proving to be an advantageous paradigm for the design process.",2023
Capturing Experimental Design Insights in Support of the Model-based System Engineering Approach,"Model-Based Systems Engineering (MBSE) continues to mature into a popular approach as systems become more complex. Integrating MBSE architectural diagrams with external simulations that model a variety of different domains allows designers to perform sophisticated engineering design and analysis. To better understand how these external models support design decisions, we can leverage the statistical methods of design of experiments to identify insights into a complex system design problem. These insights include identifying the most important design parameters, the nature of their behaviour, their synergies between them, their diminishing or increasing rates of change, and thresholds that achieve a desired level of effectiveness. The purpose of this paper is to propose a MBSE methodology that captures the insights identified during an experimental design study within the integrated system model while applying the MBSE approach.",2015
An Integrated Intelligent Modeling and Simulation Language for Model-based Systems Engineering,"Modeling and simulation are now leading the way in supporting analysis and development of system of systems. At present, to support the unified modeling formalism and dynamic simulation for different domain specific models across MBSE process, system modeling languages (such as SysML) are often required to cooperate with multi-physics modeling languages and simulation platforms (such as Modelica, Simulink), which makes it challenging to ensure the true unity of the whole system models, the consistency between the various system layers and the traceability of the modeling and simulation processes. In response to the above problems, this paper develops a new integrated intelligent modeling and simulation language, which can uniformly describe the system-level architecture and physical behavior models as a whole. On this basis, models can be simulated directly to support system verification for MBSE. Compiler and simulation engine are developed to enable X language to support the simulation of continuous, discrete event and agent models. Finally, an intelligent car system is taken as a case to verify the modeling and simulation capabilities of X language.",2022
Model-based Systems Engineering of Discrete Production Lines Using SysML: An Experience Report,"During the design of complex mechatronic systems, multiple engineering teams covering disciplines such as mechanics, electronics, control and safety must cooperate and exchange information. Today's state-of-the-practice systems engineering methodologies rely on document-based approaches to elicit and manage requirements, describe the system architecture, log design decisions and exchange this information between the project members. Unfortunately, the informal character of the documents causes misinterpretations, generates inconsistencies and prohibits the use of computer power for validation. Model-based Systems Engineering techniques promise to alleviate some of these issues. SysML is a formal graphical modeling language that aims to support this model-based design of complex multidisciplinary systems. Yet, as SysML is a general-purpose language intended to cover a broad range of systems, applying SysML to a specific domain such as production lines is not a trivial task. In this paper, we present some experiences and limitations encountered when applying and tailoring SysML 1.4 to support the systems engineering process of an industrial use case: the design of a production line by a multi-disciplinary team across several companies, consisting of process experts, control engineers, thermal designers, software engineers, mechanical designers, signal processing experts, roboticists and embedded hardware designers.",2017
Toward an Experiential Design Language: Augmenting Model-based Systems Engineering with Technical Storytelling in Virtual Worlds,"Systems engineering has made significant strides over the last decade with the advent of Model Based Systems Engineering (MBSE) and the Systems Engineering Markup Language (SysML). These advances have made it possible for collaborative engineering teams to communicate using a common language and share information in the form of digital models rather than hard-to-maintain paper documents. One major advance that needs to occur next is enhancing systems engineering languages to address the needs of all stakeholders especially non-engineers. In this paper, we advance the proposition that recent advances in systems modeling, virtual world building, and technical storytelling are the key enablers of next generation systems engineering and systems engineering languages. To this end, this paper presents an innovative approach for developing an experiential design language that augments existing systems engineering language (i.e., SysML) with new perspectives informed by exploration and storytelling in virtual worlds. This language is intended to allow all stakeholders to understand and collaborate on system designs without having to learn engineering notation, and bring to bear their unique perspectives during collaborative system design. Furthermore, immersive experiences made possible by storytelling in the virtual world can potentially illuminate key system interactions and behaviors, allowing all stakeholders to make meaningful contributions in upfront systems engineering. The benefits and payoffs of the experiential design language are: increased participation of all stakeholders in upfront systems engineering; superior collaboration among stakeholders by allowing them to focus on different system levels and perspectives; and elegant system design by getting the architecture right the first time with minimum structural complexity.",2014
Towards a correct by construction design of complex systems: The MBSS approach,"We present in this paper the Model Based System Synthesis (MBSS) approach for the design of complex systems that are correct by construction. Where the usual Model Based System Engineering (MBSE) approach offers formalisms and tools to represent a candidate system, to analyze it, to simulate it and even to optimize it, MBSS proposes to represent the global design problem using a problem representation language and then to solve it by using adapted synthesis tools producing one or several solutions necessarily satisfying the expressed requirements. The two approaches are therefore complementary; the MBSS being more adapted to the preliminary design and system integration stages. After presenting the different categories of problems encountered in system design (sizing, configuration, allocation, architecture generation), MBSS and MBSE will be positioned in relation to each other. The main concepts of MBSS will be detailed in order to understand the specific representation needs of the approach. The structural and behavioral notions related to the sub-definite systems will be explained as well as the links to be established with the functional and non-functional requirements. The approach is illustrated using the DEPS design problem specification language and the DEPS Studio modeling and solving tool on a system design case study. The DEPS language combines structural modeling features specific to object-oriented principles and ontology definition capabilities for engineers with problem specification features from constraint programming. DEPS Studio is an integrated modeling and solving environment designed to model and resolve system synthesis problems. It allows the engineer to edit, compile, debug and solve problems expressed in DEPS. It integrates a mixed constraint programming solver. The approach can be applied on physical systems, software intensive or mixed systems (embedded or cyber-physical).",2022
Ontologies of Time and Time-based Reasoning for MBSE of Cyber-Physical Systems,"Our work is concerned with the development of Model-Based Systems Engineering (MBSE) procedures for the behavior modeling and design of Cyber-Physical Systems. This class of problems is defined by a tight integration of software and physical processes, the need to satisfy stringent constraints on performance, safety and a reliance on automation for the management of system functionality. To assure correctness of functionality with respect to requirements, there is a strong need for methods of analysis that can describe system behavior in terms of time, intervals of time, and relationships among intervals of time. Accordingly, this paper discusses temporal semantics and their central role in the development of a new time-based reasoning framework in MBSE for CPS. Three independent but integrated modules compose the system: CPS, ontology and time-reasoning modules. This approach is shown to be mostly appropriate for CPS for which safety and performance are dependent on the correct time- based prediction of the future state of the system. A Python-based prototype implementation has been created to demonstrate the capabilities of the ontological framework and reasoning engine in simple CPS applications.",2013
Method for tracking and communicating aggregate risk through the use of model-based systems engineering (MBSE) tools,"Large, complex projects can identify a significant number and variety of risks, throughout the project life cycle. These risks are analyzed, mitigated, closed or accepted as independent uncertainties. Once closed or accepted, it is easy for projects to lose awareness of their impact. In reality, each of these risks contributes some amount to the overall risk posture of the project. The ability to track and effectively communicate this aggregate risk has represented a challenge to project management. There have been previous attempts to create a schema to communicate the aggregate effect of risks, without notable success. Most of these attempts have centered on some additive metric derived from the scoring of likelihood and consequence values. This, in and of itself, is a logical approach, but all too often the scores were then aggregated to a level where all context was lost. One weakness has been a lack of attempt to create linkages or logical groups of the risks upon which useful aggregation could then occur. The overall move to model-based (systems) engineering (MBSE) has opened up a vast frontier of opportunities to better integrate all project data. MBSE provides an underlying layer that links data items to each other. Objectives link to requirements, which then link to functions, functions to physical architecture items, and so on, as far down as projects want to model. While it started with a focus on modeling requirements based on things like use cases, efforts are now underway to integrate safety and mission assurance (S&MA) information and analyses, such as risks. This effort, called Model Based Mission Assurance (MBMA), is yielding models that are more useful and are a more accurate representations of the systems. MBSE models, with this ability to link related items, provide a new means of tracking and communicating aggregate risks. In the proposed method, risks are added into the models as distinct items, having attributes that communicate a scoring derived from the likelihood and consequence values as charted on the standard NASA 5 × 5 risk matrix. Like earlier efforts, each box in the 5 × 5 has an associated scoring, which may include both a current score and potential post-mitigation/control score. The risk items are then linked to elements of the model, such as system objectives/goals, requirements, functions, or physical architecture items, with “Risk to” relationships. These risks will then be communicated by use of reports generated from the model, detailing all risks and/or hazards linked to model elements. These reports can include aggregate impacts, including a current scoring and potential future state scoring based on the planned mitigations and/or controls. These reports will show all risks, open, accepted, and closed, linked to project objectives or requirements. When run as part of an upcoming risk acceptance discussion, these reports will serve to remind the team of all previous risks that relate to the effected portion of the system. When included as part of periodic program or project reviews, risk reviews, and safety reviews, this method can improve the overall understanding of the system's true risk posture. This proposed method takes full advantage of the advances that modern modeling techniques provide, with a minimal investment of additional time. Utilizing the model environment also enables a near constant access to current state of aggregate risks.",2020
Model Based Systems Engineering for System of Systems Using Agent-based Modeling,"Model Based Systems Engineering (MBSE) follows a model centric approach in contrast to the traditional document centric approach. The complexity of SoS development lends itself nicely to a model centric approach, especially a model that can represent the independence of the systems that comprise the SoS. An agent-based model provides a framework where the SoS and each system are independent entities with individual dynamics and interactions. The System of Systems (SoS) development depends on contributions from the individual systems each having their own agenda and priorities. System-to-system interactions are often necessary to accomplish the overall objectives and capabilities of the SoS. This research investigates the SoS development of an Acknowledged SoS with its associated individual systems and represents this development in an Agent-Based Model (ABM). The ABM includes decision models for the individual system agents that capture system dynamics and system-to- system negotiations as well as system to SoS negotiations. The ABM incorporates the key factors that influence SoS and individual systems’ dynamics and enables systems engineers to try different scenario inputs and analyze the overall dynamics.",2013
Designing the database for a reliability aware Model-Based System Engineering process,"This article outlines the need for a reliability database to implement model-based description of components failure modes and dysfunctional behaviors. We detail the requirements such a database should honor and describe our own solution: the Dysfunctional Behavior Database (DBD). Through the description of its meta-model, the benefits of integrating the DBD in the system design process is highlighted. The main advantages depicted are the possibility to manage feedback knowledge at various granularity and semantic levels and to ease drastically the interactions between system engineering activities and reliability studies. The compliance of the DBD with other reliability database such as FIDES is presented and illustrated.",2013
An Investigation of MBSE Practices across the Contractual Boundary,"One of the key impediments to the expansion of Model-Based Systems Engineering (MBSE) practice across the lifecycle, particularly in competitive tendering environments, is the continued reliance on documents to define the contractual interface between the acquirer and the supplier. This paper describes the collaborative research project between the University of South Australia (UniSA), the Defence Systems Innovation Centre (DSIC), and the Defence Science Technology Organisation (DSTO) that is investigating the capability of the DSTO Whole-of- System Analytical Framework (WSAF) to supplant contractual documents within the tender process and the degree to which the model passed from acquirer through the contractual interface can be used by the supplier as the basis of their tender response and subsequent systems development. The paper opens with background material and then describes the “learning-by-doing” approach that is being employed. This is followed by a description of methods and tools used to support the design of the tender response and the capture of the design rationale in the same MBSE environment used to capture the project definition. The paper concludes with a discussion section that surfaces the key issues and challenges inherent in utilising this MBSE approach across the contractual boundary and ways that the selected approach could address these.",2014
Chapter 3 - Getting Started with SysML,"Publisher Summary
SysML is a general-purpose graphical language for modeling systems that may include hardware, software, data, people, facilities, and other elements within the physical environment. The language supports modeling of requirements, structure, behavior, and parametrics to provide a robust description of a system, its components, and its environment. This chapter provides an introduction to SysML and guidance on how to begin modeling in SysML. It introduces a simplified version of the language, SysML-Lite. The semantics of the language enable a modeler to develop an integrated model of a system, where each kind of diagram can represent a different view of the system being modeled. A simplified model-based systems engineering (MBSE) method that is consistent with the systems engineering process is also introduced. The chapter finishes by describing some of the challenges involved in learning SysML and MBSE. The SysML language is a critical enabler of MBSE. Effective use of the language requires a well-defined MBSE method. SysML can be used with a variety of MBSE methods.",2012
Document to model transition for architecture evaluation approach: Application to a nuclear infrastructure project.,"In large engineering projects, multiplicity and heterogeneity of business actors, domain and business constraints, and stakeholders’ needs become more and more difficult to manage and are even moving. To allow projects members to converge in confidence, reducing time, costs and avoiding risky situations due to errors, misinterpretations, or omission, Model Based System Engineering (MBSE) replaces today the classical documents centric engineering approach. It promotes modeling, models and data management principles that are largely used in several domains with success. This article focuses on Nuclear Infrastructure engineering projects. It intends to demonstrate the interest of deploying MBSE approach in this field, particularly concerning architectural solutions evaluation. Main principles and application results of an MBSE driven method called EVA-CIME are proposed, presenting some gains and perspectives.",2022
Intelligent Digital Twin in Health Sector: Realization of a Software-Service for Requirements- and Model-based-Systems-Engineering,"The concept of the intelligent Digital Twin focuses on automatic model creation and model extension for a product throughout its lifecycle using artificial intelligence. To create an intelligent Digital Twin, the Digital Twin architecture must also include software services that support machine learning algorithms. These software services must have two characteristics. First, an interface to the real environment to dynamically receive feedback from an existing product or a product under development. Second, machine learning algorithms that analyze and manage the Digital Twin's models based on feedback from the real product. In this paper, we present the concept and implementation of a software service within the intelligent Digital Twin's architecture for automated requirements modeling as well as for modeling of the product system architecture. Since medical devices differ significantly in their applied technology, area of use, and application, the requirement engineering of medical devices needs to identify and specify the critical design requirements for each product individually. This makes automated requirement engineering and Model-based-Systems Engineering of medical devices very challenging. The implemented intelligent software service meets these challenges for product design in the healthcare sector.",2022
Requirements for a Metamodel to Facilitate Knowledge Sharing between Project Stakeholders,"The successful realization of the goal of Model-Based Systems Engineering (MBSE) practice, to contain all project information in models, is predicated on the ability of the system model to represent the information needs of a broad range of stakeholders such as the owners, acquirers, suppliers, maintainers, and users. The paper opens by discussing the interface between the acquirer and supplier within the pre-contract competitive Australian defence context. From this and earlier work, the need for the model of the system of interest to be built upon a comprehensive knowledge representation that can support the creation and integration of multiple stakeholder specific models is derived. Elicitation of further requirements from both stakeholder workshops and from functional analysis follows.",2012
A decision-making framework for selecting an MBSE language–A case study to ship pilotage,"The increasing system complexity due to technological advances in recent decades requires the implementation of Model-Based System Engineering (MBSE) languages. While MBSE languages can support in creating detailed and precise system descriptions, requirements, functions, and component interactions, the development of several modelling languages has formed a challenge for system engineers to select a suitable modelling language for complex operations. Since the implementation of MBSE modelling languages is extensive and requires high resources, system engineers need to select the most suitable one for their project. Furthermore, the prepared system models are utilized by different end-users such as system engineers, operators, and marketing professionals. As a result, it is necessary to integrate the perception of end-users in the modelling language selection process. Hence, a decision-making support framework needs to be developed, which will incorporate the opinions of end-users in the selection process. Correspondingly, this study proposes a Multi-Criteria Decision-Making framework aimed to select the most appropriate and practical modelling language. The framework integrates the end-user’s perception in the selection process using the Technology Acceptance Model and reckons the MBSE language features as comparison criteria. To analyze the data collected from the end-users, integration of Multinomial Process Tree modelling and Bayesian inference is developed. The applicability of the proposed model was tested in a ship pilotage operation case study. The results show that the framework can support system engineers during the initial selection process of the MBSE modelling language.",2022
An Approach to Identifying Inconsistencies in Model-based Systems Engineering,"A typical way of managing the inherent complexity of contemporary technical systems is to study them from different viewpoints. Such viewpoints are defined by a variety of factors, including the concerns of interest, level of abstraction, observers and context. Views conforming to these viewpoints are typically highly interrelated since the concerns addressed in the different viewpoints overlap semantically. Such overlaps can lead to inconsistencies. The challenge is to identify and resolve – that is, manage – such inconsistencies. This paper introduces an approach to identifying inconsistencies within the context of Model- Based Systems Engineering (MBSE). In current practice, inconsistencies are typically only discovered after long time intervals, e.g., during reviews. This can result in costly rework or even mission failure. Therefore, actively checking for inconsistencies, and doing so in a continuous fashion, can be valuable. We investigate the hypothesis that all models can be represented by graphs and that inconsistencies can be identified by means of pattern matching. We show that this process is equivalent to inferring inconsistencies by means of deductive reasoning. Finally, we present the results of a proof-of-concept implementation.",2014
Construction method of shop-floor digital twin based on MBSE,"Digital twin (DT) technology is essential for achieving the fusion of virtual-real cyber-physical systems. Academics and companies have made great strides in the theoretical research and case studies of constructing the shop-floor digital twin (SDT), which is the premise of applying DT technology on the shop floor. A shop floor is a large complex system that involves many elements including people, machines, materials, methods, and the environment and processes, such as the technical flow, business process, logistics, and control flow. However, most of the developed cases lack a hierarchical, structured and modularized implementation framework for the development of an SDT system, which leads to problems such as a low reuse rate of the system blocks, lack of scalability, and high upgrade and maintenance costs. In response to these issues, we propose a construction method of the DT for the shop floor based on model-based systems engineering from the perspective of the system. In this method, a comprehensive DT model for the shop floor is gradually constructed by using system modeling language, the modeling method “MagicGrid,” and the “V model” of systems engineering. The model includes four dimensions of the shop-floor requirements, structure, behavior, and parameters, as well as three stages (the problem domain, solution domain, and implementation domain), and connects nine steps of the “V model,” including the system requirements, system architecture, subsystem implementation, subsystem integration, and system verification. Then, based on an example of a real NC machining shop floor, subsystems including a visualization system, synchronization system, and simulation system, are discussed. Finally, the functions of the integrated systems are verified based on the requirements, including the real-time synchronization of “man, machine, material, and method” and the transient simulation in real time. The numerical indicators of the integrated system are verified, including the model completeness and synchronization timeliness.",2021
An effective MBSE approach for constructing industrial robot digital twin system,"Recently, the rapid development of digital twin (DT) technology has been regarded significant in Cyber-physical systems (CPS) promotion. Scholars are focusing on the theoretical architecture and implementing applications, in order to establish a high-fidelity, dynamic, and full-lifecycle DT model and achieve a deep fusion of real and virtual. As a typical complex system with multi-disciplines, multi-physics, and multi-domain characteristics, industrial robot (IR) involves various processes and elements from the two other levels of the system: components and production lines. Their complex relationships lead to a huge challenge to build a comprehensive DT model. Current researchers usually concentrates on single-layer services because of limited construction methodology, which results in enormous isolated models, and leads to low reusable system blocks, finite scalability, and high costs of design, adjustment, upgrade, and maintenance. To address these issues, a standardized methodology and a hierarchical, modular, and generic architecture are proposed to depict comprehensive and variable industrial robot digital twin (IRDT). Firstly, the ontology information model is presented by analyzing variable factors systematically. Then, model-based system engineering (MBSE) based methodology is introduced, including construction process and variants management. After modeling process of three levels (problem domain, solution main, and implementation domain) and four viewpoints (requirement, structure, behavior, and parameter), a generic architecture of IRDT is constructed and a feature-based variants management method is described. Besides, a six-axis IRDTS is implemented to illustrate the mapping of logical architecture and physical system as a multi-level elements and processes representation example. And the steps of numerical evaluations consist of system delay and derivation. Finally, results show the effectiveness and the potential of the proposed theoretical methodology for constructing IRDTS and other industrial applications.",2023
Human System Integration Ontology: Enhancing Model Based Systems Engineering to Evaluate Human-system Performance,"As we move forward to integrate system descriptive models and system analytical models, there is a key opportunity to integrate other viewpoints into the system model. Specifically, we have the opportunity to extend current modeling semantics and add other disciplines. Current systems engineering practices address human-system integration concerns as an afterthought (i.e., after system architectures have already been created). One primary reason for this deficiency is that people not trained in human factors engineering are unable to communicate with those that are, due to differences in terminology. To better integrate humans into and with systems, new semantics are needed to extend current system modeling representations. The integration of new semantics will allow human elements to be analyzed in a more holistic perspective. This paper looks into identifying core building blocks for creating the ontology for human system interaction, interfaces, and integration. This ontology, once fully developed, will extend current system modeling capabilities that will enable the human element to be analyzed as part of the overall system development process.",2014
Can Wymore’s Mathematical Framework Underpin SysML? An Initial Investigation of State Machines,"Model-based system engineering (MBSE) has been suggested to have significant benefits to include early verification and validation cycles and predictive analytics. Multiple languages for modeling the engineering of systems exist; the most widely used being Systems Modeling Language (SysML). SysML is descriptive in nature, meaning it contextualizes the relationships in the system model. While this is useful, it lacks a rigorously established mathematical framework that would allow for understanding of emergent behavior, pattern recognition, vulnerability assessment, and a scientific approach to modeling of systems among other capabilities. An internally consistent mathematical framework for MBSE was proposed by Wayne Wymore in 1993, which may provide what is necessary to overcome the descriptive limitation of SysML. In this article, we perform an initial assessment of the feasibility of underpinning Wymore mathematical system construct to SysML by comparing Wymore’s Moore-based state machines to SysML state machine diagrams. Specifically, we focus on the mathematical capturing of orthogonality through system coupling.",2019
Enhancing Knowledge Management into Systems Engineering through New Models in SysML,"This paper aims at exploring cooperative work and knowledge implication into Systems Engineering approach in order to study organisational impact. Furthermore, the study aims at providing conceptual models that enhance a Model-Based Systems Engineering (MBSE) with the purpose of taking into account knowledge management (KM). The research formulates a decision model that complements the existing methods through Systems Modeling Language (SysML). The methodology is based on current SysML diagrams and proposes a KM solution focused on an organizational approach. The requirements satisfaction is built on this conceptual approach to help on the decisional process. Systems Engineering (SE) integrates all the disciplines and specialty groups into a team effort forming a structured development process from design to production. SE shows that cooperative work and management increase with the complexity of systems. Thus far, the current models do not present enough cooperative and knowledge management supports. The study proposes to add a new model to imply KM and organizational aspect through SysML in order to develop a cooperative work process with a first conceptual approach. This paper tackles several possibilities based on modeling language SysML extension and discusses the interest of implementing the model while providing a complementary decision-making tool.",2017
Chapter 19 - Deploying SysML into an Organization,"Publisher Summary
Introducing any significant change into an organization requires a well-thought-out plan and disciplined implementation to be successful. SysML to an organization and projects should be planned as part of an initiative to improve the systems engineering process, methods, tools, and training. This chapter describes how to implement an improvement process to facilitate a smooth and successful transition to SysML as part of a model-based systems engineering (MBSE) approach. The transition to SysML should be implemented using the organization's improvement process as part of their transition to a model-based approach. Clear responsibility for the improvement initiative should be established, and the expected cost and benefits of the change should be understood and agreed on with stakeholders. A successful deployment must be planned, piloted, and incrementally deployed. Success of the modeling effort is a key ingredient to motivate other projects to follow. The result of the modeling effort, including its benefits and lessons learned, should be quantified, where practical, and used as a basis for future deployments and improvements.",2012
Model-based security engineering for cyber-physical systems: A systematic mapping study,"Context
Cyber-physical systems (CPSs) have emerged to be the next generation of engineered systems driving the so-called fourth industrial revolution. CPSs are becoming more complex, open and more prone to security threats, which urges security to be engineered systematically into CPSs. Model-Based Security Engineering (MBSE) could be a key means to tackle this challenge via security by design, abstraction, and automation.
Objective
We aim at providing an initial assessment of the state of the art in MBSE for CPSs (MBSE4CPS). Specifically, this work focuses on finding out 1) the publication statistics of MBSE4CPS studies; 2) the characteristics of MBSE4CPS studies; and 3) the open issues of MBSE4CPS research.
Method
We conducted a systematic mapping study (SMS) following a rigorous protocol that was developed based on the state-of-the-art SMS and systematic review guidelines. From thousands of relevant publications, we systematically identified 48 primary MBSE4CPS studies for data extraction and synthesis to answer predefined research questions.
Results
SMS results show that for three recent years (2014–2016) the number of primary MBSE4CPS studies has increased significantly. Within the primary studies, the popularity of using Domain-Specific Languages (DSLs) is comparable with the use of the standardised UML modelling notation. Most primary studies do not explicitly address specific security concerns (e.g., confidentiality, integrity) but rather focus on security analyses in general on threats, attacks or vulnerabilities. Few primary studies propose to engineer security solutions for CPSs. Many focus on the early stages of development lifecycle such as security requirement engineering or analysis.
Conclusion
The SMS does not only provide the state of the art in MBSE4CPS, but also points out several open issues that would deserve more investigation, e.g., the lack of engineering security solutions for CPSs, limited tool support, too few industrial case studies, and the challenge of bridging DSLs in engineering secure CPSs.",2017
"BPMN+I to support decision making in innovation management for automated production systems including technological, multi team and organizational aspects","A joined interdisciplinary approach from systems engineering, organizational sociology and psychology is introduced using an enriched Business Process Model and Notation (BPMN+I) based modeling approach to support decision making on a management level for both mid-term decisions such as in-/outsourcing and short-term decisions such as fixing a weakness on site during start-up of a plant abroad or involving the design offices. This approach focusses on the actual collaboration between interdisciplinary teams within an organizational context by enriching BPMN with checklists applicable to all interfaces along the projects’ workflow. Our contribution aims at supporting innovation management for automated Production Systems which depends on successful interdisciplinary collaboration.",2020
A Metamodel of Evaluation in Systems Engineering: Application to a Mechatronic Design,"Evaluation is present at any phase of the life cycle of a product and each time engineering choices must be made or justified. In order to contribute to supporting the evaluation process, we propose in this paper a meta-model of data needed to evaluate product design within the Systems Engineering framework. Relevant to the MBSE approach, the proposed meta-model should facilitate the communication within a multidisciplinary design team as it highlights the concepts and relations that must be handled and shared by the designers. It could be a basis for the development of a computer assisted evaluation tool for designing interdisciplinary systems such as mechatronics ones. Some concepts and relationships of the proposed meta-model are illustrated in the mechatronic context of designing a module for a power-assisted wheelchair.",2012
A system modelling approach to collaborative PSS design,"An adequate design of PSS-oriented business models (PSS BM) should illustrate the link between the strategic objectives of the stakeholders and the operational development of the offer. The literature on PSS explains the content of a business model mostly from the provider’s perspective with a clear operational positioning. This paper considers the strategic positioning of stakeholders in the early stage of the process of value co-creation. More precisely, this paper aims at providing a comprehensive conceptual model that integrates both strategic and operational perspectives of a business model, which is considered here as a system of value co-creation. A system modelling approach, by coupling two modelling methodologies, is proposed. Goal Modelling (GM) is used for the strategic perspective, and Model-Based System Engineering (MBSE) for the operational one. GM allows modelling high-level objectives that stakeholders expect from a given system, whereas MBSE supports formal modelling of the engineering process. Combining both modelling frameworks makes it possible to visualize the entire system from strategic and operational perspectives as a unique socio-technical system. The aim of this work is to support the value co-creation process in the early stages of PSS design through the visualization of its key elements (e.g., actors, goals, PSS offers, activities, among others). The implementation of the modelling framework is illustrated through a real example of a French company with respect to the provision of safety clothing for its employees.",2019
Multi-domain simulation utilizing SysML: state of the art and future perspectives,"Increasing system complexity requires adapted methodologies to tackle the challenges that come along with multi-domain systems development. Model-Based Systems Engineering (MBSE) provides significant support by using models to describe different aspects of an examined system already in the early stages of the development process. The Systems Modeling Language (SysML) can be utilized to establish a common system information basis on a comparatively abstract level for all participating stakeholders. Although SysML models are able to encompass system information like requirements, structure, behaviour and parametrics, in many cases additional specialized simulation or computation models are needed, especially for early design decision-making and verification activities. Ideally, the input data and the calculated results are automatically exchanged between the SysML modelling editor and the involved simulation tools. Hence, tool chain integration is a crucial factor to provide the necessary interconnectivity to achieve multi-domain simulation. In general, the integration of simulation environments with SysML tools is mainly limited by two factors. First, as the tools available for modelling with SysML are legion, interface solutions are usually developed for a specific tool and therefore, their usage is restricted to that particular software. Second, evolving standards like the Functional Mock-up Interface (FMI) provide capabilities to ease model data exchange and co-simulation, but the implementation of different versions of various standards in the tools causes incompatibilities. In this work a state of the art of the integration between simulation environments and available SysML modelling tools with respect to utilized standards and their implementation maturity is presented. Additionally, the capabilities of the reviewed tools to support co-simulation are evaluated. Furthermore, existing challenges are highlighted, and potential improvements are discussed.",2021
A System-of-Systems perspective for information fusion system design and evaluation,"This paper provides a System-of-Systems (SoS) perspective for integrated design and evaluation of an Information Fusion System (IFS). IFS is comprised of distributed and heterogeneous systems that accomplish low-level and high-level information fusion (LLIF and HLIF) functionality. LLIF and HLIF functions are developed independent from one another but require collaboration to achieve the IFS mission objectives. The distribution and heterogeneity of systems, in addition to the multiplicity of LLIF and HLIF functions, creates an extensively large design space for the IFS. We apply a SoS engineering architecting process to obtain integrated architectures of IFS and propose guidelines to constrain an otherwise infinite design space of Information Fusion System-of-Systems (IF-SoS). Furthermore, we elaborate a multi-agent system modeling approach and pair it with Design of Experiments for objective evaluation of the IF-SoS design space. The statistical analysis, based on analysis of variance (ANOVA) and Tukey Honest Significant Difference (HSD) Range Tests, quantifies the impact of interactions between LLIF and HLIF design considerations on the IF-SoS performance. Furthermore, statistical evidence is provided to demonstrate that the interactions among JDL levels, in particular between LLIF and HLIF, are the most significant design considerations for fusion performance which necessitate an integrated design and evaluation of LLIF and HLIF—a manifestation of the SoS perspective for the IFS.",2017
Framework to support Models for Manufacturing (MfM) methodology,"Model-Based System Engineering (MBSE) provides a conceptualization of systems and proposes the independence between knowledge conceptualization and tools, reusability and interoperability. In the scope of manufacturing there are several research works oriented to define ontologies, but only a few consider a framework to manage the whole lifecycle of the models and software tools for supporting this entire process. The aim of this work is to present a framework supporting Models for Manufacturing (MfM) methodology, which allows the definition, design and simulation of complex manufacturing systems. The framework will be defined around a collaborative architecture based on a commercial Free and Open-Source Software (FOSS), ARAS Innovator, which supports connecting software tools to develop and define models and its lifecycle. The framework, called Model Lifecycle Management (MLM), has been tested with several aerospace and non-aerospace use cases and is the core software tool supporting the MfM methodology. MfM methodology has been proposed by the authors as a new approach to apply MBSE concepts to Manufacturing, and aims to provide a set of processes, methods and associated tools to support the discipline of manufacturing in a model-based context.",2019
Through-Life Systems Engineering Design & Support with SysML,"New system capability needs have been evaluated based primarily on the product design characteristics. This process neglects the other areas of the system design such as operational availability. The proposed solution takes a more holistic view of system capability identification and trade-off analysis. This solution will consider the combination of both operations and support environments with through-life predictions of the key performance indicators of the various options, while using the systems modelling language (SysML) integrated with SimuLink. This involves using SysML to provide engineering templates, modular assembly of simulation scenarios and a matrix trade-off method using stochastic information.",2013
Preliminary ontology definition for aerospace assembly lines in Airbus using Models for Manufacturing methodology,"During the conceptual design phase of an aerospace assembly line, the Design Solutions that will meet the functional and industrial requirements are defined. As a result it is possible to define an early conceptual design of the assembly line and its basic parameters. Assembly Line Balancing (ALB) comprises ordering of tasks among stations to satisfy precedence constraints. Due to the specific features of an aircraft, such approach is not fully suitable for the case of an aerospace assembly line where the number of stations relates to technological criteria rather than to a calculation aiming to minimize a specific parameter. This paper presents a preliminary ontology definition for aerospace assembly lines in the Airbus context using Model for Manufacturing (MfM) methodology. The authors implement a new approach to characterize mono configured aerospace products. This new approach lets maximum flexibility in the shopfloor implementing the adherence characteristic and is developed using a novel methodology, MfM. The new approach for modelling manufacturing systems has been coined as an extension of the previous authors’ research to introduce MBSE (Model Based Systems Engineering) concepts in manufacturing. A preliminary ontology based on MfM is developed and proposed to represent an aerospace assembly line using the innovative concept of adherence to assembly stations. The model scope is the configuration of the design solutions against manufacturing solutions, and the arrangement of them in a network of networks. The ontology definition is based on the DA08 artifact, used by authors in several researches, supporting the models currently in development and the next steps.",2019
Contextual- and Behavioral-Centric Stakeholder Identification,"Proper identification of stakeholders is the first step to bound the system of interest and ultimately to correctly define the problem of concern. Research has traditionally addressed the process of identifying stakeholders using stakeholder-centric methods such as brainstorming (unstructured or with discipline-specific taxonomies). These approaches are grounded on the idea of listing entities that have a relation to the system and then analyze their mutual relationships so that their relative importance with respect to the system can be assessed. Yet, these methods do not provide any mechanism to ensure completeness and thus introduce a high level of uncertainty in the definition of the problem at the beginning of the system life-cycle. The present research proposes instead a contextual- and behavioral-centric approach for stakeholder identification. Using systems thinking the focus is put on understanding all the underlying relationships, be them complex or simple, of the system within its environment and during its existence by comprehensively modeling its socio-technical context and behavior. As a result stakeholders no longer need to be sought, but they comprehensively emerge out of the holistic understanding of the system.",2013
Structuring Activity Diagrams,"SysML covers a large modeling scope for Systems Engineers. Behavior is adequately described by state machine, sequence, and activity diagrams (completed by parametric constraints). The standard describes these diagrams at the level of elementary graphical objects. Unfortunately, most modeling tools remain at that conceptual level, i.e. graphical objects which are assembled together. In this paper, elementary behaviors are a priori defined and their equivalent described as behavioral construct patterns. The author claims that modeling tools should propose these behavioral constructs in an “insert” policy to let the Systems Engineers remain at the appropriate behavioral modeling level.",2012
Chapter 19 - Deploying SysML in an Organization,"Chapter 19 describes how to introduce the use of MBSE with SysML to an organization and projects as part of an initiative to improve the systems engineering process, methods, tools, and training. The chapter describes an improvement process and elements of a deployment strategy to facilitate a successful transition.",2015
Systems Engineering Management Based on a Discipline-Spanning System Model,"In many current development projects targets concerning time, cost and quality are often not achieved. This is due to the complexity of the product and its engineering processes. The conceivable development of information and communication technology will enable advanced mechatronic systems. Their manifold system functions, the cross-linking of elements within the system and their hardly manageable interactions induce a much higher complexity in the development process and make it much more challenging than today. As approaches of Model Based Systems Engineering (MBSE) get more and more accepted within industry, they can be the foundation for a better management of the product development process. Due to this, we state that model based systems engineering forms the basis for systems engineering management to ensure, that project targets are achieved. In this contribution we point out, how a discipline-spanning system model can be used as the core of system engineering management: We introduce a modelling technique and its utilization for project planning as well as assessment and control. We present approaches for planning operational structures as well as technical reviews and further for measuring development progress and product maturity on different system hierarchy levels, using the information modeled within the system model.",2013
Model-based application of the methodical process for modular lightweight design of aircraft cabins,In this paper the concept of the modular lightweight design as a method to combine the opposing views of lightweight-optimized- and modular product family-design is presented. Therefor specifics of these views are presented based on the use-case of civil aviation and aircraft cabins. Subsequently the concept of modular lightweight design and its concomitant benefits and challenges are outlined as well as the Model-Based Systems Engineering to assist the implementation of the approach into the product development processes for developing the modular hybrid design.,2021
Identification of dependencies between product parameters and process stakeholders,"In today’s mechanical engineering companies, the rising interdisciplinarity of processes and development teams as well as distributed company locations leads to increased production times and more complex product development processes (PDP), although shorter development times are requested. Especially changes, e.g. component optimization or changed customer requirements, as well as parallel sub-processes, require increased planning to make dependencies visible and estimate expenses. When requesting a change to e.g. a component property, it is difficult to identify on the one hand which processes and technical parameters are affected and on the other hand which stakeholders have to be included in the decision making. It is not yet state-of-the art that stakeholders affected by a change in the PDP are identified and notified automatically by the IT-system. Furthermore, it is challenging to identify indirectly connected stakeholders, which are not linked to changing properties or processes, concerning the changes made. In this paper, a methodological approach is presented, that links the technical parameters with the processes and the different stakeholders, using the example of a PDP for light weight composite components. The procedure comprises the implementation of the PDP for light weight composite, including the process-dependent roles, in a product data management (PDM) system. The process structure is then linked to a Model-Based Systems Engineering (MBSE) tool. By building a system model, the product parameters are linked to the processes and roles. Using the established system model, the direct and indirect dependencies between the technical parameters and the stakeholders are visualized.",2021
"""Specification Technique for Virtual Testbeds in Space Robotics""","Systems Development for Space Missions is an engineering challenge that requires a highly integrated systems design approach. Multidisciplinary dependencies, project size, technology novelty, and diverse operational environment conditions increase overall systems complexity. Therefore, systematic validation and verification techniques that consider environmental and operational conditions are crucial for mission success. However, verification and validation of system requirements is hard to achieve under real conditions since physical prototyping tests in space environment are hardly possible. Virtual Testbeds are a promising approach for the early identification of technical risks by simulating the overall system with approximate real conditions, and thus, increase the overall engineering efficiency. They enable early feasibility studies and virtual commissioning of the system during integration phase. The application of virtual testbeds requires not only a formal specification of the System Under Development (SUD) but also a formal Specification Technique for Validation and Verification (V&V). However, existing MBSE approaches provide only poor concepts for a holistic specification of system Test Cases and Virtual Testbeds. In this paper, we propose an integrated Model-Based Specification Technique that facilitates an integrated specification of the system and relevant V&V aspects. We first analyze existing norms like VDI 2206 and ECSS-Std. in order to identify relevant V&V aspects. Second, we describe a specification approach for Virtual Testbeds. Third, we present a modeling language for the specification of those aspects. Finally, we apply the presented technique on an example from the space robotics domain. Our findings show that the presented technique helps to capture relevant V&V aspects according to the existing norms in the space robotics domain. However it is not limited to space and can easily be used for industrial and other complex mechatronic systems.",2018
Integral Management of Process Plants Systems through their Lifecycle using a Model-Based Engineering Approach,"Nowadays we find ourselves in what is called the fourth industrial revolution: Industry 4.0. This revolution is being fostered in many countries to get a more competitive industry. Industry 4.0 target is to make more efficient and flexible plants, reduce times and costs of process and products lifecycle. Under this framework, models appear as a core component in every new development. Model-Based Systems Engineering is a methodology that allows for traceability and guarantees model consistency covering the entire lifecycle of the system. The objective of this work is to develop a holistic model of a process plant. Such model will be available during the entire lifecycle of the system (process+product) communicating in every stage with the specific (existing) tools used to develop it. In this paper, we present the development of the SysML model of a process plant (the production of ethylbenzene from benzene and ethylene), the architecture and the methodology to transform the central model to application-specific ones. We also explain how to execute these specific models from the core model keeping consistency between models and data.",2017
Streamlined best estimate plus uncertainty analysis of a GEN III + BWR for a bottom drain line small break LOCA,"Best Estimate Plus Uncertainty analysis has been used in the design, certification, and safety review of Nuclear Power Plants. To analyze the small break loss of coolant accident of a Generation III + Boiling Water Reactor, a streamlined BEPU method has been established and partially demonstrated to a Bottom Drain Line small break Loss Of Coolant Accident post-test analysis in this investigation. A RELAP5 input model was built for an integral test facility simulating a Generation III + Reactor with passive safety features. The Fast Fourier Transform Based Method was utilized to preliminarily evaluate the accuracy of the code simulation results. The DAKOTA toolkit was utilized to drive uncertainty quantification and sensitivity analysis. The simulation results generally reproduce the experimental phenomenon observed during experiments. The uncertainty bands of output parameters were established to demonstrate the enclosing of experimental data and the safety margin according to the design limits.",2023
Towards the systematic analysis of non-functional properties in Model-Based Engineering for real-time embedded systems,"The real-time scheduling theory provides analytical methods to assess the temporal predictability of embedded systems. Nevertheless, their use is limited in a Model-Based Systems Engineering approach. In fact, the large number of applicability conditions makes the use of real-time scheduling analysis tedious and error-prone. Key issues are left to the engineers: when to apply a real-time scheduling analysis? What to do with the analysis results? This article presents an approach to systematize and then automate the analysis of non-functional properties in Model-Based Systems Engineering. First, preconditions and postconditions define the applicability of an analysis. In addition, contracts specify the analysis interfaces, thereby enabling to reason about the analysis process. We present a proof-of-concept implementation of our approach using a combination of constraint languages (REAL for run-time analysis) and specification languages (Alloy for describing interfaces and reasoning about them). This approach is experimented on architectural models written with the Architecture Analysis and Design Language (AADL).",2018
Impact and risk analysis in the integrated development of product and production system,"The assessment of risks and influences of engineering changes of a product or production system on affected technical (sub-) systems of the same or a different domain are of great importance in order to evaluate possible alternatives and to select solutions. The increasing complexity of mechatronic products and production systems with Industry 4.0 technology reinforces the demand for a method that supports engineers in decision making in both technical and strategic issues. By using the method presented in this contribution, interdependencies between product functions, product features and the corresponding production processes and machines can be modelled and used to estimate the impact and risks of changes in one of those domains. Using the method, the change propagation of variations in and between the domains can be evaluated. The objective of the method is to support decision making in different use-cases like integrated product- and production system development, product variations while carrying over most of the production system or varying production processes while carrying over the product to improve production key performance indicators (KPI). Based on the model of PGE – Product Generation Engineering, the information of the reference system is used to identify the interdependencies. The inclusion of strategic factors like know-how and costs is implemented in the model, as well as the quantity and type of variations. The method consists of a representative model for a quick, holistic overview about the interdependencies and of a tool based model by using Model-Based Systems Engineering (MBSE) for an automatic connection and evaluation of the data. The contribution is part of the project I4TP - Sino German Industry 4.0 Factory Automation Platform (i4tp.org), in which a platform is developed to automatically configure a turnkey production system for a product in development.",2020
Exploiting Architectural Communities in Early Life Cycle Cost Estimation,"System architectures evolve over time. Accordingly, the dynamic properties of architectures reflect how systems respond to change, and this response ultimately impacts cost. In prior work we make an explicit connection between the architectural diagrams of Model-Based Systems Engineering (MBSE), parametric cost estimation, and network science. Specifically, by treating the DoD Architecture Framework (DoDAF) Systems View 3 (SV3) as an adjacency matrix, we assess how the addition of a new subsystem to an immature architecture might grow the existing network. With the subsequent application of parametric cost modeling, we translate anticipated growth into expected cost, thereby quantifying the impact of change. This paper refines that approach. In particular, by using the Girvan-Newman algorithm, the SV3 is initially divided into groups of subsystems such that the number of interfaces is dense within and sparse between groups. Based on this division into “architectural communities” and the prevalence of bridging ties, interfaces generated by the addition of a new subsystem can be faithfully integrated into the existing architecture, adding validity to our growth mechanism. This procedure is illustrated in detail with an example that highlights the importance of this refinement, and it is incorporated within a Monte Carlo simulation that allows the distribution of future costs to be estimated and assessed.",2014
"Need Finding for the Development of a Conceptional, Engineering- Driven Framework for Improved Product Documentation","Engineering companies that develop advanced products in multi-disciplinary new product development (NPD) teams, have difficulties in managing, communicating, and (re)using knowledge in and between NPD projects. Information is lost due to team dynamics, inappropriate documentation and methods, resulting in unnecessary design iterations, repeated problem-solving, lack of effectiveness and value, and low financial performance. It is, therefore, desirable to develop a documentation model that can be integrated into different engineering processes and used to effectively communicate product information within a single project and between projects, combining strategies from product design methodology, model-based systems engineering, and lean development. It is necessary to combine the most recent product (systems) engineering methods with the understanding of problems and needs in industrial environments where they shall be applied. This paper presents results of need finding in four companies using a semi-structured interview approach to gain insight into problems associated with product documentation. The findings are turned into a conceptual engineering-driven product documentation framework, which links documentation to the product architecture using knowledge-brief (A3) type documentation strategies from lean execution environments.",2013
Towards Effective Management of Inconsistencies in Model-Based Engineering of Automated Production Systems,"The development of automated production systems requires the collaborative effort of a variety of stakeholders from different disciplines. In model-based systems engineering, stakeholders address their specific concerns by forming a number of views using models. Because of the multidisciplinary nature of automated production systems, a variety of modelling languages, formalisms and tools is typically employed. Nevertheless, the aggregation of models is nowadays limited by the communication between stakeholders and interdisciplinary understanding. Therefore, in order to achieve a positive outcome of the design process it is crucial that the models are free of inconsistencies. As a first step, this paper describes challenges related to managing inconsistencies in models of systems from the domain of automated production systems. A conceptual approach that uses semantic web technologies and a technology demonstrator illustrating the technical viability of the approach are shown. Finally, requirements for a discipline-spanning inconsistency management framework are derived based on the presented challenges and initial findings from applying the approach to a demonstration case.",2015
Supporting Decision Makers with Use Cases; Case Study Results,"The benefits of defining Use Cases to support systems development, particularly during the early stages of the lifecycle, is well established in both software and systems engineering. The effective implementation of Use Cases to support stakeholder decision making during system development tends to be uneven, particularly for non-technical decision makers. This paper presents three case studies where Use Cases were developed and successfully used to support a variety of stakeholders in their decision making, two of which featured simulations of the Use Cases. This paper highlights aspects of Use Case development that were most useful to decision makers, what was not as useful, and finally recommends several areas for future research. The goal is not to present a tutorial on Use Case development. Rather, it is to identify factors that developers can consider during Use Case development to better support system visualization and decision making.",2019
Using SysML to Support Impact Analysis on Structural Dynamics Simulation Models,"Changes during the product development process pose a high risk of unexpected high implementation effort. To reduce this risk, the impact of engineering changes have to be estimated in advance before their implementation. However, in large systems, the numerous interdependencies often create challenges to the approximation of the implementation effort by inducing complex interdependencies which are often not easy to identify from the start. This paper therefore proposes a method to quickly determine change efforts of complex systems. To be able to estimate change efforts, the dependencies between system components have to be mapped together with their corresponding modeling effort (e.g. modeling time). The SysML (System Modeling Language) system model is a powerful tool to support this process as it offers the possibility of a very individual and versatile data storage. Furthermore, specific data (e.g. calculation time) can quickly be identified with algorithm such as “metachain navigation”. We propose in this paper to use a SysML system model for an advanced documentation of the product and construction structure to be carried out in parallel to the modeling process of a system simulation model (in this case finite-element- and multi-body-simulation). Assemblies and associated components are represented by the product structure, while the construction structure represents the force flow between two components. Furthermore, in SysML individual data, e.g. modeling time and calculation time, is stored in an instance that is connected to a specific component or assembly. As a demonstration example, the approach is shown on a structural dynamic analysis of a powertrain with seven subassemblies and over 100 components. Following the proposed method, the effort of a specific component change of the powertrain can be estimated quickly due to the stored data in the system model.",2021
Formal Framework for Discrete-Event Simulation,"A formal framework for modelling and simulation of parallel systems named ProjectDEVS is presented. The objective of this framework is to apply a Model-Based System Engineering approach to the development of simulation products for cyber-physical embedded systems. It is intended for the design and automated deployment of virtual prototypes. Models are constructed by coupling concurrent components exchanging data through ports and executed by various simulation schemes, namely simulators. This paper focuses on the integration of a Time Petri Net implementation of a parallel simulator into the framework. The semantics of the parallel simulator is formally described using timed transition system to verify the correctness of the implementation. Then, a model with its simulator can be model checked against formal specification and be rapidly deployed on FPGA or PC via code generators.",2017
"Mercury: A modeling, simulation, and optimization framework for data stream-oriented IoT applications","The Internet of Things is transforming our society by monitoring users and infrastructures’ behavior to enable new services that will improve life quality and resource management. These applications require a vast amount of localized information to be processed in real-time so, the deployment of new fog computing infrastructures that bring computing closer to the data sources is a major concern. In this context, we present Mercury, a Modeling, Simulation, and Optimization (M&S&O) framework to analyze the dimensioning and the dynamic operation of real-time fog computing scenarios. Our research proposes a location-aware solution that supports data stream analytics applications including FaaS-based computation offloading. Mercury implements a detailed structural and behavioral simulation model, providing fine-grained simulation outputs, and is described using the Discrete Event System Specification (DEVS) mathematical formalism, helping to validate the model’s implementation. Finally, we present a case study using real traces from a driver assistance scenario, offering a detailed comparison with other state-of-the-art simulators.",2020
An Object-oriented and Executable SysML Framework for Rapid Model Development,"This paper introduces Cortex, a new framework to develop object-oriented and executable SysML models using the IPython Notebook4. The framework strives to create a succinct and intuitive Python programming interface for SysML models, and integrate it with OpenMDAO (a Multi-disciplinary Design, Analysis and Optimization framework being developed by NASA Glenn Research Center). Data persists in MongoDB, with a Resource Description Framework (RDF) cache for semantic querying. The models can be exposed to custom web-based applications through a Representational State Transfer (REST) interface. The authors strive to create a foundational framework on which to be able to build more advanced system engineering and decision support tools. All the tools and libraries leveraged in this effort are open source software (OSS), and whenever possible, the authors selected technologies with the most permissive licenses.",2015
Supporting product design decision with a SysML design history Assistant,"With products reaching the whole world and being sold by thousands or millions the responsibility of designers has never been higher. A design mistake can cause - among others - physical damages, high costs or pollution of diverse types. Each mistake has consequences, whether before or after sale to various actors (manufacturing company, users, recycling company, etc.) and has to be avoided. Research is starting to integrate environmental impacts within the Model-Based Systems Engineering (MBSE) approach and particularly within System Modeling Language (SysML) as a tool to foresee design decisions according to previous gained knowledge. Following this, the research holds on existing foundations and proposes to extend current research efforts into a new SysML Assistant to capture the essence of product design and thereby support product development decisions. This paper focuses on the first part of the research, proposing design principles and warnings from requirements via the SysML Assistant. When facing a decision, designers can question the Assistant about examples of what had been designed before in similar or different domains. Depending on the request, designers receive, a formatted object containing several solutions or design principles (requirements, specification, use cases, test cases, warnings) for possible implementation. Various benefits are foreseen with the proposed research. First, a reduced design development time with an increased quality of products in the long term. Second, a reduction of product environmental impacts as well as repeated design mistakes. Third, an incentive to designers competitivity to achieve better design.",2020
AADL-Based safety analysis using formal methods applied to aircraft digital systems,"Model-based engineering tools are increasingly being used for system-level development of safety-critical systems. Architectural and behavioral models provide important information that can be leveraged to improve the system safety analysis process. Model-based design artifacts produced in early stage development activities can be used to perform system safety analysis, reducing costs, and providing accurate results throughout the system life-cycle. In this paper we describe an extension to the Architecture Analysis and Design Language (AADL) that supports modeling of system behavior under failure conditions. This safety annex enables the independent modeling of component failures and allows safety engineers to weave various types of fault behavior into the nominal system model. The accompanying tool support uses model checking to verify safety properties in the presence of faults and comprehensively enumerate all applicable fault combinations leading to failure conditions under quantitative objectives as part of the safety assessment process. The approach allows exploration of the effects of faulty component behavior on system level failure conditions without requiring explicit propagation specifications. It also supports a shared system model, a modeling language that can describe real-time embedded systems, and usable safety analysis artifacts.",2021
Heterogeneous models to Support Interdisciplinary Engineering - Mapping Model Elements of SysML and CAD,"A successful development of mechatronic systems need both domain specific as domain independent engineering models and approaches. The interface between domain specific and domain independent engineering often represents a possible source for failures and inconsistencies. Within this paper, this interface will be addressed by introducing heterogeneous models based on linked SysML and CAD model elements. Therefore a mapping of SysML and CAD elements will be presented and refined for the development of heterogeneous models. Furthermore, a technical concept for linkage of SysML and CAD models to ensure model consistency will be illustrated and an exemplary heterogeneous model will be visualized. In addition, future research targets and fields will be listed.",2022
Increasing System Failure Analysis Effectiveness Through Architecture Modeling,"This research demonstrated that the quality of the classic Fault Tree Analysis (FTA) method could be improved through the use of system architecture models. While existing work demonstrates use of simplified system models in FTA using methods that combine existing tools, this research uniquely addresses the value of using a single tool to generate stochastic behavior models of more complex systems, together with their normal and failure mode events, from existing system specification documents. Use of a single tool is desirable for organizations wishing to limit investment and simplify management of architecture data and analysis. The Innoslate tool is used show how classic failure analysis methods such as FTA can be emulated in the Model Based System Engineering (MBSE) design process. For a simple demonstration example, a fault tree is distilled from behavior models captured in action diagrams. A comparison of the classic FTA approach with the model based approach shows potential for increase in failure analysis accuracy and efficiency.",2017
The Ontology of Systems Engineering: Towards a Computational Digital Engineering Semantic Framework,"The goal of implementing an enterprise digital engineering strategy is to improve data sharing throughout system conceptualization, development, manufacturing, operations, sustainment and their supporting organizations. Data sharing is a critical element of interoperability of models and other digital artifacts supporting the systems engineering process. Achieving interoperability within systems engineering requires eliminating differences of syntax and semantics to take advantage of automation, augmentation, and artificial intelligence capabilities that will increase process efficiency and artifact quality. This paper describes the development of a process-centric Systems Engineering (SE) reference ontology, based upon ISO/IEC/IEEE 15288 Systems and Software Engineering – Life Cycle Processes [1]. The proposed SE reference ontology extends from the Basic Formal Ontology (BFO), which is a very small top-level ontology (TLO) designed specifically to support the integration of more specific ontologies that extend from it [2]. A reference ontology is intended to provide a comprehensive representation of the entities in a given domain encapsulating the terminological content of established knowledge. Unlike other systems ontologies, which focus on the target systems, this reference ontology is focused on the systems engineering process, providing context and purpose for the digital artifacts being built and linking the content of artifacts together into one lexicon.",2019
Designing the architecture of electrochemical energy storage systems. A model-based system synthesis approach,"Designing complex systems that address a wide range of heterogeneous requirements is a difficult task. The skills and know-how of the designers are no longer sufficient and it becomes essential to provide them with efficient methodologies and computational tools to achieve this task. The objective of this paper is to present a model-based system synthesis (MBSS) approach to perform this task. This approach is notably based on the DEPS language and constraint programming. Design examples involving electrochemical energy storage systems are used to illustrate the approach. The design of a starting battery for an internal combustion engine is first presented. It demonstrates the ability to make rational and quantified design choices between several available cell technologies and models (lead–acid, Li-ion NCA, NMC or LFP) while taking into account many design constraints. An example of battery design for a hybrid or electric vehicle is then discussed. The requirements of this second example include in particular a mission profile to be satisfied. Based on these two case studies, the article shows the strength and usefulness of using the DEPS-based design methodology. This approach is particularly suitable for the preliminary design and requirements specification phases, which often require trade-offs between the different stakeholders.",2022
"Hybrid ontology for safety, security, and dependability risk assessments and Security Threat Analysis (STA) method for industrial control systems","This paper introduces a model-based methodology for hybrid reliability, availability, maintainability, safety, and security (RAMSS) risk assessment management, which extends our previous work of model-based, data-driven, support for engineering mission-critical systems. It represents a hybrid risk assessment ontology, which harmonises basic concepts between dependability, safety and security based on well-known industrial standards. Based on the proposed ontology, we create a cybersecurity risk analysis method, called Security Threat Analysis (STA), for industrial control systems and successfully demonstrate the method. For the demonstration, we introduce a data model for creating a tool-supported data repository for STA, then implement this repository with a commercial-off-the-shelf tool. We use the repository to carry out an exemplary STA of a nuclear fuel pool cooling control system, assessing a cybersecurity-related hazard. The demonstration suggests that the hybrid RAMSS risk assessment ontology and the related STA data model are ready to be tested in industrial use, offering a structured data repository to support assessment and traceability between the created artefacts.",2022
Towards Sustainable Systems Reconfiguration by an IoT-driven System of Systems Engineering Lifecycle Approach,"By the ever-progressing smartization of products, their embedded environment systems are getting more and more crossed, and so-called System of Systems (SoS) are arising from this to deliver overreaching and new innovative services and functionalities, especially for the customer of those systems. In the future, it will be more and more beneficial to implement these services and product-based functionality under pertinent aspects of sustainability (e.g. carbon footprint or other critical resources along the product engineering process). In this context, this contribution presents a System of Systems Engineering Lifecycle Concept for the dynamic reconfiguration of systems within a smart Product-based System of Systems to ensure certain sustainability aspects during the system of systems operation using an Internet of Things (IoT) based platform. Part of the concept is, on the one hand, the integration of relevant data from the usage of several systems into the early model-based development phases (like Model-based Systems Engineering (MBSE)) by using the so-called IoT-driven smart Product-based System of Systems Reconfiguration Approach to ensure different sustainability aspects in future development phases of a system or a system of systems. To meet compliance and promotion of sustainability aspects in the operation of a smart product-based system of systems, on the other hand, the approach shows under consideration of the current operating data of the participating systems and their corresponding dynamic adaptation using the example of a sustainable autonomous construction site scenario and an appropriate IoT-based platform.",2022
A Holistic System Lifecycle Engineering Approach – Closing the Loop between System Architecture and Digital Twins,"This contribution introduces an approach for the optimization of smart products and systems in the early development phases through a Closed-Loop Systems Engineering approach. This approach – holistic in terms of considering the overall system and its usage context, interdisciplinary, overreaching multiple lifecycle phases, and supported methodologically as well as tool-wise – combines aspects from both Model-Based Systems Engineering and Product resp. System Lifecycle Management to optimize the system by using advanced verification and validation methods and techniques, in particular Model-, Twin- and System-in-the-Loop, and seamless feedback of product usage data to the early development phase. This approach has been prototypically applied at the example of a test bed of an autonomous construction area system of systems.",2019
Simplexity testbed: A model-based digital twin testbed,"In the last few years, due to the advances of computation, network, and wide-spread applications of artificial intelligence and machine learning techniques, developing and benefiting from the digital twin technology to connect the virtual to the physical becomes promising and practically feasible; therefore, a lot of attention has been attracted across industries of various domains. However, there lacks of platforms in the academic to facilitate research activities in digital twin technologies. This shortage has non-eligible and negative impact not only on advancing digital twin technologies, but also leading to scarcely publicly-available datasets for conducting research. To this end, in this paper, we present Simplexity Testbed. Simplexity Testbed is equipped with a physical model — an indoor ”driving ground” featuring various driving scenarios and surface conditions, and four land rovers (named SiLaRs) of two different types. Most importantly, the digital twin model of Simplexity Testbed currently is an integration of multiple models developed with different modeling paradigms (i.e., SysML enhanced with uncertainty information, Modelica, 3D simulators for autonomous driving), which enables model executions, simulations, and cross-model interactions. The architecture of Simplexity Testbed enables future integration of other modeling paradigms. In the paper, we also share our process of developing Simplexity Testbed and lessons learnt. In addition, we put lights on how various research activities can be enabled with Simplexity Testbed. We consider that with Simplexity Testbed, context-aware, autonomous, and adaptive capabilities of digital twins can be studied, which lead to full-fledged applications of digital twins in industry.",2023
"Combined development and test of product-service systems in early product development stages for customized, availability-oriented business models in the capital goods industry","Availability-Oriented Product-Service Systems (AOPSS) give manufacturers of capital goods the opportunity to expand their offerings while fulfilling the customers’ needs for product availability. In turn, they generate special requirements for the early product development phase. Condition monitoring has to be taken into account, which results in a contradiction since learning-based condition monitoring approaches require large amounts of data which isn’t available in that particular stage. Techniques from model-based systems engineering allow solving problems newly arising when developing parts or products in AOPSS. The approach proposed in the paper is being illustrated based on a use case from the agricultural industry.",2018
Collaborating with OpenMBEE as an Authoritative Source of Truth Environment,"To realize a holistic, model-based systems engineering approach centered on an evolving system model one needs an Authoritative Source of Truth (AST) as part of the digital engineering environment. An AST captures consistent system data and models across disciplines, offering access in the form of stakeholder-specific views. To progress towards such an environment the open-source OpenMBEE by NASA/JPL is used here as an AST implementation to test its feasibility and demonstrate the collaboration with an AST as part of a pilot study. First results indicate benefits of model-based documents generated with a viewpoint library, supporting collaboration between various stakeholders accessing consistent data without a required modeling background and enabling a more efficient engineering process with faster design iterations. Further findings cover modeling and project management implications. OpenMBEE does show its potential as an extensible and integral element of a collaborative AST environment.",2019
Development of field programmable gate array–based encryption module to mitigate man-in-the-middle attack for nuclear power plant data communication network,"This article presents a security module based on a field programmable gate array (FPGA) to mitigate man-in-the-middle cyber attacks. Nowadays, the FPGA is considered to be the state of the art in nuclear power plants I&C systems due to its flexibility, reconfigurability, and maintainability of the FPGA technology; it also provides acceptable solutions for embedded computing applications that require cybersecurity. The proposed FPGA-based security module is developed to mitigate information-gathering attacks, which can be made by gaining physical access to the network, e.g., a man-in-the-middle attack, using a cryptographic process to ensure data confidentiality and integrity and prevent injecting malware or malicious data into the critical digital assets of a nuclear power plant data communication system. A model-based system engineering approach is applied. System requirements analysis and enhanced function flow block diagrams are created and simulated using CORE9 to compare the performance of the current and developed systems. Hardware description language code for encryption and serial communication is developed using Vivado Design Suite 2017.2 as a programming tool to run the system synthesis and implementation for performance simulation and design verification. Simple windows are developed using Java for physical testing and communication between a personal computer and the FPGA.",2018
Model-based Representation of Protection Measures as Solution Patterns,"The mechanical engineering industry and related industries are undergoing a massive shift from classic mechanic-centered products to mechatronics. Summarized under the term “Industry 4.0” systems are becoming intelligent, will be able to self-optimize and will communicate with each other through the internet of things. The described push towards greater multichannel integration, for example integration of functions or inherent intelligence, leads to a greater experience for the customer. However, it also leads to new chances that intruders such as product pirates or hackers can exploit. For the effective protection of intelligent technical systems, suitable protection measures have to be found. Simultaneously the increasing complexity of the systems leads to the need for new methods to handle the complexity during the development process. To meet this challenge Model-Based Systems Engineering (MBSE) is well suited. Suitable measures for a preventive system protection have to be considered already in the model-based systems design. The main goal is the seamless integration of the protection measures in modern methods for an interdisciplinary and holistic systems design. Therefore, the protection measures have to be described as model-based Solution Patterns.",2016
Interface and requirements analysis on the DEMO Heating and Current Drive system using Systems Engineering methodologies,"In this paper we present the methodology implemented for analyzing System Requirements and Interfaces of the Heating and Current Drive (HCD) system of the European Demonstration Fusion Power Reactor DEMO. The work consisted in updating the preliminary framework of the Model-Based Systems Engineering model of the HCD System Architecture. This is now containing an ontology, a set of 6 perspectives and a defined set of viewpoints for each Perspective, for refining the HCD System Architecture. The scope of the work is to manage the interdependencies of HCD system elements and their integration into DEMO, for a given set of system functions. On the one hand, this means to address the identification and definition of the interfaces occurring, both internally in the HCD system, and between the HCD system and neighboring systems. On the other hand, this implies studying the impact of requirements coming from the ongoing physics studies. The rationale is to provide the technical foreground for supporting the decision-making processes related to the HCD system which is planned to be carried out during the forthcoming Conceptual Design Phase. The results we show in this paper are part of the design and integration activities consisting of both systems engineering methodologies and design analysis, all aiming at ensuring consistency in the overall EU DEMO plant design. In this framework the DEMO Heating and Current Drive system has been selected as pilot project for the application of Systems Engineering methodologies.",2019
A work-centered perspective on research needs for systems engineering with models,"Compared to document-based systems engineering (SE) models, IT-enabled ones can introduce radical changes in how SE is practiced. Such models are increasingly important today, but how well do we understand their use, impact, and issues? Real-world cases are helpful but tell us little about how and why models work (or don’t), their suitability for a particular context, or how to guide selection and use. Lacking sound knowledge and theory, we cannot assess the value of Model-Based Systems Engineering (MBSE) [1] or predict its outcomes [2]. Instead, we rely on heuristics and judgment, e.g., to make process tailoring decisions [3]. Our motivations include identifying core research needs, provoking discussion on key issues and questions [4] and generating interest by applied and theoretical researchers, including from outside engineering. Other authors have noted that SE would benefit from broader research methodologies and methods (e.g., [5], [6]) and greater participation by non-engineering disciplines (e.g., [2], [7]). This paper identifies MBSE research topics culled from literature and briefly discusses some key ones based on a work-centered organizational approach with the goal of sparking interest in foundational research.",2012
Change propagation analysis for system modeling using Semantic Web technology,"Change propagation potentially affects many aspects of a SysML-based system model during the iterative process of Model-Based Systems Engineering (MBSE). However, few authors have addressed the implication of engineering change and its impact. To address having a successful change process, this article analyzes and explicitly represents different scenarios of how a system model is changed from a formal perspective, i.e., how a system model should be changed, and how model elements should be added, deleted or modified in response to design changes. A workflow is introduced to guide the change process taking change propagation into account. Second, change impact relationships among requirements, behaviors, and structures of the system model are formalized by an ontology to make the semantics both human-understandable and machine-readable. Reasoning rules are defined as well in order to improve automation of the change process. Finally, an experiment using a water distiller system showed that the identification of change impact information could help designers complete the change in less time and with higher quality.",2018
Design Library Solution Patterns in SysML for Concept Design and Simulation,"Object-oriented models in the Systems Modeling Language (SysML) are developed in this paper to support the concept development phase within engineering design. Generic libraries in SysML for functions, according to the functional basis, and structural components, are presented in previous work by the authors. This paper extends this work and proposes the use of multi-solution patterns in SysML that combine a new behavior simulation library together with the previous generic libraries describing functions and components. These patterns capture coherent solutions to known problems that can be reused in concept design with the aim to save modeling effort. Since they are based on solution-neutral functions, they also offer multiple potential solutions at once. The new behavior simulation library and solution patterns are demonstrated in this paper using a 3D printer case study with two different kinematic solutions.",2016
Quantitative SoS Architecture Modeling,"Improved techniques to develop future System of Systems solution architectures are a systems engineering imperative. The systems engineer must be able to produce quantitative Measures of Performance that parse good performing architectures from bad architectures in a very complex and dynamic domain often and early during concept development. This paper proposes innovative System of Systems Engineering techniques to manage risks and reduce costs in complex systems. We suggest a combination of graph theory, Big Data and Uncertainty Quantification are foundational tools that can model architectures and more importantly the movement of data across architecture interfaces. This provides a mathematical foundation for quantitative architecture, model based systems engineering and simulation environments enabling continuous prototype testing in a model environment. The result is a means to quantitatively validate viable complex architectures early in the lifecycle. This paper describes a graph-based approach to model complex architectures. Complexity will be defined mathematically as a function of the number of entities, inter-entity relationships and active event sequences in the graphical architecture. Uncertainty quantification compares the graph model to the physical System of Systems based on quantities of interest. Big Data facilitates analytics across continuous data threads in the architecture.",2014
Model-driven engineering to ensure automotive embedded software safety. Methodological proposal and case study,"The development of driver assistance and autonomous driving systems for vehicles has started to revolutionize the transportation sector, offering comfort and safety. While significant technological progress has already been made in this area, the road ahead is littered with many challenges. Among these challenges, ensuring driver safety has become even more critical due to the increasing use of complex, communicating and reconfigurable embedded software. Current approaches to document-based safety analysis have reached their limit and the time has come to rethink them. To this end, we propose to rely on model-driven engineering to conduct safety analyses. This paper makes a methodological proposal that improves current practices in terms of time, analysis quality and reusability, and that has been validated on the study of an automotive software component.",2022
Innovative Digital Manufacturing Curriculum for Industry 4.0,"Manufacturing companies across all major industries are facing serious challenges trying to competitively design and manage modern products, which are becoming increasingly complex multi-domain systems or “systems of systems”. Model-based systems driven product development (or SDPD, for Systems Driven Product Development) has been proposed as a solution based on driving the product lifecycle from the systems requirements and tracing back performance to stakeholders’ needs through a RFLP (Requirement, Functional, Logical, Physical) traceability process. The SDPD framework integrates system behavioral modeling with downstream product design and manufacturing process practices to support the verification/validation of the systems behavior as products progress through all phases of the lifecycle, as well as the optimization of trade-offs decisions by maintaining the cross-product digital twin and thread for global decision optimization in an efficient and effective way. We have developed an innovative digital manufacturing curriculum (designed around the SDPD paradigm) that is based on the digitalization of the SE (Systems Engineering) process through the integration of modelling and simulation continuum, in the form of Model-based Systems Engineering (MBSE), with Product lifecycle management (PLM). At the core of this curriculum is a shift of focus from theory to implementation and practice, through an applied synthesis of engineering fundamentals and systems engineering, that is driven by a state-of-the-art digital innovation platform for product (or system) development consisting of integrated software (digital) tools spanning the complete lifecycle. The curriculum consists of three key components, namely, modelling and simulation continuum, traceability, and digital thread. The curriculum provides a foundation for implementing the digital twin and supports the training of the next generation of engineers for Industry 4.0. The digital manufacturing (or SDPD) framework is applied in the design and optimization of an electric skateboard. The implementation demonstrates: 1) The benefits of digitalization/model-based engineering when developing complex multi-domain products or systems; 2) The ability of students to effectively complete a real-life modern product development within the time line of one semester; 3) The provision of MBSE curriculum for Engineering Education 4.0, characterized by key, integrated skills for the digital enterprise and Industry 4.0.",2019
Service Oriented Architecture enabling the 4th Generation of District Heating,"The 4th Generation of District Heating (4GDH) is a complex agglomeration of heat providers, distributors, and consumers that must be automatically, continuously managed and coordinated. It is a complex system of systems; a definition which we align to Maier's architecting principles for systems-of-systems as collaborative systems. Wrapped in the idea of system of systems is the reality that the 4GDH systems’ descriptions and specifications are not currently all known. Nonetheless, the transition into the 4GDH is actual. We propose the use of two frameworks to secure a smooth metamorphosis and assure systems’ operation, maintenance, and evolution. The two frameworks are the Arrowhead Framework and the OPTi Framework. The first one enables system integration through Service Oriented Architecture (SOA) and the second one offers the overall system optimization with respect to all stakeholders. This paper uses the Model Based Systems Engineering (MBSE) tool SysML to model a district heating complex's structures and behaviors from the concept level down to the sensors and actuators within a district heating substation where we apply the SOA technology based on the open Arrowhead Framework. We focus on the Arrowhead Framework's core services, i.e. Service Registry, Authorization and Orchestration to clearly describe the interactions between the different service providers and consumers. Going back up from the sensors to the systems, it is clear that SOA is the architecture that will empower the 4GDH.",2017
"Flight Control System Modeling with SysML to Support Validation, Qualification and Certification","Abstract:
The introduction of new technologies to build ‘More Electric Aircraft’ induces new challenges for both the design and safety analysis of new aircraft. A model-based approach is needed for both design and validation processes in order to manage the complexity and validate the conformance to safety requirements. In this paper, a SysML-based approach merging MBSE and MBSA is presented. This approach is applied to a Flight Control System (FCS) both for the design and the validation processes. A parallel is made to compare the models used in each of these processes. This comparison led to suggestions of improvements both for the design and verification and validation approaches.",2016
Conceptual Modeling of Cyber-Physical Gaps in Air Traffic Control,"On March 8, 2014, a Malaysia Airlines Boeing 777 carrying flight MH-370 from Kuala Lumpur to Beijing disappeared during its flight. In this paper, we employ a model-based approach to capture and study the chain of events leading to the disappearance of the aircraft. We show that the critical reason for the aircraft’s disappearance was a cyber-physical gap (CPG). The CPG is the difference between the real state of a physical entity and its state as perceived by cybernetic agents. Failure to acknowledge the CPG’s existence, capture it in system models, and incorporate suitable mitigation mechanisms into systems exposed to CPG, has resulted in the past and may result in the future in severe consequences. In the MH-370 case, the plane’s position and adherence to its flight course were misperceived by the air traffic control, resulting in failure to track and find the plane, to this day. Our approach to CPG analysis has been previously shown to assist both designers and users handle emergent situations resulting from CPGs, such as the Three-Mile Island nuclear reactor’s partial meltdown accident in 1979. We propose several mitigation mechanisms, whose integration with air traffic control systems could help prevent similar cases in the future.",2018
Topology-based Safety Analysis for Safety Critical CPS,"Since Cyber-Physical Systems (CPS) may exhibit different structures and emergent behaviours during different operational phases, while also being safety critical, it is useful to perform systematic safety analyses tightly relying on the functional and components topologies of such systems. Our proposal is to perform FMEA and FTA analyses as soon as possible in the CPS design process in order to identify and mitigate the risks related to some safety critical structures and behaviours. Thus, these preliminary analyses enable to propose relevant design modifications and improvements such as optional or additional redundancies, components repairability capabilities or relevant control strategies, taking into account the complexity and the potential variability of the structure and the behaviour of the systems. This work derives from previous MBSE (Model-Based System Engineering) and MBSA (Model Based Safety Analysis) integration studies, performed during the early phases of the design of safety critical mechatronic systems, including interconnection components and multi-physical interactions. It relies mainly on M2M (Model to Model) and M2T (Model to Text) transformations and appropriate SysML metamodeling. The proposed CPS safety analysis methodology is illustrated using an aeronautic industrial case study.",2016
Chapter 8 - The Handoff to Downstream Engineering,"A very common question that systems engineers beginning to use MBSE have is to how to effectively handoff relevant engineering data—such as requirements, architectures, and interfaces—to downstream engineering teams. In the Harmony agile MBSE process, this is done incrementally, and each increment transforms the logical system engineering data into physical representations that are useable by the design teams. On one hand, the logical interfaces and types are converted to their physical realizations to be used by the subsystem teams. On the other hand, each subsystem specification is taken, requirements are allocated to engineering disciplines within the subsystem—such as software, electronics, and mechanics—and interdisciplinary interfaces are defined. This chapter provides details on how this can be effectively accomplished.",2016
A Systems Engineering Based Approach for Informing Extracorporeal Membrane Oxygenation (ECMO) Therapy Improvements,"Extracorporeal Membrane Oxygenation (ECMO) therapy provides stable heart and lung functions via mechanical means for patients with severe but reversible cardiac or respiratory failure [1]. As a result, the survival rate of these patients can improve from 25% to nearly 75% [2]. While there are over 235 medical centers world-wide that employ ECMO [3], no formal standards exist for the composition of an ECMO ‘circuit,’ best practices for operation and maintenance, or training and certification of ECMO specialists. Since 2011 the Professional Masters of Applied Systems Engineering (PMASE) program at the Georgia Institute of Technology (GIT) and medical staff from ECMO centers have collaborated to characterize and improve upon state- of-the-art ECMO therapies. This paper details the collaborators’ work in applying systems engineering principles and practices to ECMO therapies including the use of model based systems engineering (MBSE) to capture the ECMO domain, concept of operations, need statement, high level use cases, requirements, system and user behaviors, and both abstract and concrete structural designs. Finally, the paper explains how this work is applicable towards improvements in data collection, human factors, trade-off analysis for future technology insertions, and other ECMO improvement projects.",2013
Chapter 18 - Deploying SysML into an Organization,"Publisher Summary
This chapter discusses how to implement an improvement process to facilitate a smooth and successful transition to SysML. SysML is deployed as part of a model-based systems engineering (MBSE) approach using the organization's improvement process. Deploying SysML as part of MBSE should consider impacts on the systems engineering process, methods, tools, and training. A successful deployment must be planned, piloted, and incrementally deployed. The success is a key ingredient to motivate other projects to follow. The results should be quantified, where practical, and used as a basis for future improvements. The process includes monitoring and assessing projects to determine issues and improvement goals; developing the improvement plan; defining proposed changes to the process, methods, tools, and training; piloting the approach; and incrementally deploying the improvement. The process should be applied in increments to improve the organization's capability.",2008
Model Based Requirements Engineering for the Development of Modular Kits,"The introduction of modular design increases complexity within product development and especially within Requirements Engineering. To handle this complexity, the approach of Model Based Systems Engineering is applied in this contribution. First, the origins of complexity in modular product development are introduced. Key challenges within Requirements Engineering are drawn up and then verified. A modeling method for requirements of modular kits is introduced and validated in the series development of hybrid drivetrain systems at a German automotive manufacturer. Increases in quality and a requirements reusability of over 80% were achieved. Thus, the capability of the modeling method is verified.",2017
Extending Design Capabilities of SysML with Trade-off Analysis: Electrical Microgrid Case Study,"Changes in technology, economy and society create challenges that force us to rethink the way we develop systems. Model- Based Systems Engineering is an approach that can prove catalytic in this new era of systems development. In this paper we introduce the idea of the “modeling hub” in order to realize the vision of Model-Based Systems Engineering and especially we focus on the trade-off path of this hub. For that purpose the design capabilities of SysML are extended by integrating it with Consol-Optcad, a powerful multi-criteria optimization tool for trade-off analysis. The integration and its implementation is applied to analyze a multi-criteria optimization problem concerning power allocation and scheduling in a microgrid.",2013
Identification of potentials in the context of Design for Industry 4.0 and modelling of interdependencies between product and production processes,"Industry 4.0 offers great potentials for improving production systems and processes, as well as the product itself regarding quality and time-to-market. The majority of research in the context of Industry 4.0 focuses on typical production topics like reducing waste, increasing flexibility or increasing lead times. The focus in this work however, lies on the identification of Industry 4.0 potentials on the product considering its interdependencies with the production system. The identification and modelling of interdependencies between product functions, product embodiment with its features, production processes and the production system supports engineers and product developers in a variety of ways. Therefore, a method is developed to evaluate the impact and risk of changes on the product or process side, respectively to the dependent systems or processes. In this contribution, the model PGE - Product Generation Engineering is used to identify Industry 4.0 potentials in the product and production system and to estimate the impact and risk of their implementation. The approaches ""Design for Industry 4.0"" and “Design with Industry 4.0” are supported with the mentioned method. The occuring information from different domains is modelled and connected with approaches from Model-Based System Engineering (MBSE). This supports the product developer to handle the complexity in a project considering product and production system development in the early stages of development activities. Thus, this paper is a contribution to the inclusion of production systems and industry 4.0 technologies in the product development process.",2019
Improving physical-physiological interaction requirements for maintenance enabling systems specification,Recurrent incident reports indicate that ground operators have not always performed the right action or made the right decision following maintenance operations of transport systems. This paper explores first the physical-physiological requirements for a human to perceive right the meaning of symbolic properties technical objects afford when they are being maintained in variable contextualized situations. This paper explores then the impact of these necessary but not sufficient Human Factors requirements on the specification process of a maintenance enabling system by prototyping a door latch lock case-study with a modeling environment based on SysML.,2013
"Design of Cyber Bio-analytical Physical Systems: Formal methods, architectures, and multi-system interaction strategies","Integration of the Cyber–Physical System (CPS) concept with bio-analytical devices is highly desirable to enable device automation as well as to improve diagnostic and analytical capabilities. However, the modeling must account for entity interactions, system dynamics, and non-functional aspects required for proper device functionality. This paper presents a model-based system architecture that builds upon an extended timed automata-based formal technique. In contrast to prior works that utilized SysML or UML-based models, this allows for the wireless control of bio-analytical instruments. Using this formal method, the UPPAAL tool is used to model and test a case study called “A droplet flow cytometer for testing bacteria’s susceptibility to antibiotics”. The study shows the implications of formal techniques for the design and verification of wireless automation of high-throughput laboratory setups in Model-Based System Engineering (MBSE). Moreover, the paper extends the above aspects by adding the possibility to model multi-system interaction. This is used to analyze the trade-off between centralized and decentralized information flow strategies for better system performance under delay and bandwidth constraints. UPPAAL Stratego is used to analyze strategies for achieving specific delays and bandwidth consumption while avoiding packet losses in the event of network congestion. The results show that under strict delay constraints and high traffic, the use-case system selects the decentralized strategy over the centralized strategy. In low-traffic scenarios, the centralized strategy is more effective at ensuring the reliable operation of systems.",2023
SysML profiling for handling army base camp planning,"Army base camp planning is a complicated process involving many variables and optional facilities. The facilities can also vary in size and resource utilization depending on permanency of the base, local resources, and population on the base. Each level of facility is modeled and placed into a library database. All of these facilities must be distinguishable for planners to come in and export the correct facility based on the mission. The first method involves separating the different levels into packages so just the package could be exported. The issue is not all facilities will fit correctly. The second method is creating a stereotype with relevant tag definitions in the SysML tool to apply to the facility blocks. It allows minimum and maximum requirements for the facility to be displayed. This method is the start to creating a custom profile for base camp planning in SysML.",2011
Categorical formulation of mathematical design theories applied to system design process analysis,"Given hierarchical system specifications, embodiment and integration processes of subsystems are crucial in designing complex engineered systems. To complement the current mathematical design theories that do not sufficiently support these processes, this study applies general design theory to formulate these processes based on the mathematical structure of design knowledge studied in the literature using category theory. Specifically, the composition of embodiment operations and the relations among subsystems in integration operations on the category of sets and topological spaces are elucidated. Furthermore, the formulation is applied to analysis of a system design process of a production line in model-based systems engineering.",2019
A formal approach using SysML for capturing functional requirements in avionics domain,"In this work, a Model-Based Systems Engineering approach based on SysML is proposed. This approach is used for the capture and the definition of functional requirements in avionics domain. The motivation of this work is triple: guide the capture of functional requirements, validate these functional requirements through functional simulation, and verify efficiently the consistency of these functional requirements. The proposed approach is decomposed into several steps that are detailed to go from conceptual model of avionics domain to a formal functional model that can be simulated in its operating context. To achieve this work, a subset of SysML has been used as an intermediate modelling language to ensure progressive transformation that can be understood and agreed by system stakeholders. Formal concepts are introduced to ensure theoretical consistency of the approach. In addition, transformation rules are defined and the mappings between concepts of ARP4754A civil aircraft guidelines and SysML are formalized through meta-model. The resulting formalization enables engineers to perform functional simulation of the top-level functional architecture extracted from operational scenarios. Finally, the approach has been tested on an industrial avionics system called the Onboard Maintenance System.",2019
Towards an Integrated Conceptual Design Evaluation of Mechatronic Systems: The SysDICE Approach,"Mechatronic systems play a significant role in different types of industry, especially in trans- portation, aerospace, automotive and manufacturing. Although their multidisciplinary nature provides enormous functionalities, it is still one of the substantial challenges which frequently impede their design process. Notably, the conceptual design phase aggregates various engi- neering disciplines, project and business management fields, where different methods, modeling languages and software tools are applied. Therefore, an integrated environment is required to intimately engage the different domains together. This paper outlines a model-based research approach for an integrated conceptual design evaluation of mechatronic systems using SysML. Particularly, the state of the art is highlighted, most important challenges, remaining problems in this field and a novel solution is proposed, named SysDICE, combining model based system engineering and artificial intelligence techniques to support for achieving efficient design.",2015
Development capabilities for smart products,"Smart products supported by new step-changing technologies, such as Internet of Things and artificial intelligence, are now emerging in the market. Smart products are cyber physical systems with services through Internet connection. For example, smart vehicles equipped with advanced embedded intelligence are connected to other vehicles, people, and environment, and offer innovative data-driven services. Since smart products are software-intensive, data-driven, and service-conscious, their development clearly needs new capabilities underpinned by advanced tools, methods, and models. This paper reviews the status and trends of these emerging development technologies such as model-based systems engineering and digital twin.",2019
Subsystem selection for digital twin development: A case study on an unmanned underwater vehicle,"Digital twins are virtual representations of subsystems within a system of systems. They can be utilized to model and predict performance and condition degradation throughout a system's life cycle. Condition based maintenance, or the performance of system maintenance based on the subsystem states, is often facilitated by the implementation of digital twins. An open challenge is selecting the subsystems that require digital twins. We establish a generic process for determining a set of priority-based system components requiring digital twin development for condition based maintenance purposes. The priority set, which we term the “triage” set, represents the set of components that when monitored through a digital twin lead to the greatest increase in total system reliability and simultaneously represent the minimal cost set of components for implementing a digital twin. While we focus our process on an unmanned underwater vehicle (UUV), where we frame the design problem as a multiobjective optimization problem utilizing experimentally determined data and metrics from the model of a real UUV system, the process is generic enough that it could be utilized by any system looking at cost and reliability estimates for leveraging digital twin technology.",2021
Assessment of Production System Alternatives During Early Development Phase,The development of modern mechatronic systems is characterized by a rising complexity and an increasing necessity to develop product and according production system in a close interplay. Model-based Systems Engineering has been introduced to cope with these challenges by means of an integrated system model. It enables the consideration of possible interdependencies and allows the analysis of the whole system model from the beginning. Especially during the early phase of the production system development many interdependencies have to be considered while the information are still vague and most system specifications yet have to be determined. The objective of the approach presented in this contribution is therefore to compare and assess early alternative production system specifications parallel to the development in order to reduce the relevant solution space and save valuable development resources. For that purpose a three stage evaluation procedure is proposed and methodologically founded. Additionally an according multi criteria structure that is based on common specification languages like CONSENS or SysML is presented and the practicality of the approach is demonstrated with an application example.,2014
Design space computation based on general design theory applied to knowledge formulation in simulation-based production planning,"Digitalization is crucial for increasing the productivity of manufacturing systems and processes, where model-based systems engineering is a key engineering discipline to support related design and planning activities. However, knowledge used in these activities is not sufficiently captured through exhaustive simulation-based searches on design spaces. This study proposes a design space model based on General Design Theory to express such knowledge using the properties of topological spaces. A simulation-based production planning case study demonstrates computation of a design space from simulation experiments using inductive and deductive reasoning, and formulation of complex design options for production plans to meet performance criteria.",2021
SysML-based uniform behavior modeling and automated mapping of design and simulation model for complex mechatronics,"Model-based systems engineering (MBSE) is becoming a promising solution for the design of mechatronic systems with the increasing of complexity. To facilitate system design engineers to express their various behavioral requirements, a uniform behavior modeling approach is proposed based on SysML. A set of new constructs are proposed which compose the uniform behavior modeling profile. Based on the profile, the hybrid behavior of the mechatronic system can be uniformly represented in a multi-view and hierarchical way. Moreover, the language- and tool-dependent simulation related information is also described based on SysML as the complement part of the uniform behavior model, which can be transformed to different simulation platforms based on the triple graph grammar (TGG). In this way, the system-level design of the mechatronic system is simulated and verified automatically in the early design stage. Finally, the method is implemented and an example is given to illustrate the whole process.",2013
Service Systems Engineering: Emerging Skills and Tools,"We are living in a global service economy in which services now make up more than 78% of the US Gross Domestic Product (GDP). This growth in Service has also become a global phenomenon and this has brought much needed attention to Service Science and Service Systems Engineering (SSE). As part of these efforts, this paper proposes the enhancement of existing architectural frameworks for Service Systems. We readily concede that IT is at the heart of Service Systems but we argue existing frameworks need to be expanded to address service systems governance and insertion of technology breakthroughs. A modified NIST framework is illustrated, that includes an Enterprise/Service Management plane to analyze energy Smart Grids as an end-to-end service provider. We also realized the need for integration of tools for the real-time dynamic analysis of ever-changing requirements within a Service System. This concept is illustrated in the form of an internet manufacturing laboratory where design, fabrication, IT, and other supporting tools are integrated to rapidly fabricate complex 3D prototype models. Finally, we discuss issues which need to be addressed for the creation of curricula and professional degree programs in Service Systems Engineering at the graduate level. As a result, we propose a plan for including a Service Systems Engineering specialization track within traditional Systems Engineering programs.",2012
Integrating Analytical Models with Descriptive System Models: Implementation of the OMG SyML Standard for the Tool-specific Case of MapleSim and MagicDraw,"The Jet Propulsion Laboratory (JPL) is investing heavily in the development of an infrastructure for building system models using the Systems Modeling Language (SysML). An essential component is a transformation apparatus that permits diverse models to be integrated independently of their nature (e.g. declarative, analytical and statistical). This paper presents one useful case: the integration of analytical models expressed using the Modelica language. Modelica is an open standard, declarative, multi-domain modeling language that allows for complex dynamic systems to be modeled. Maplesoft's MapleSim is one software tool that supports the Modelica language. The tool-neutral specification for the transformation between the languages Modelica and SysML is defined in the SysML-Modelica transformation specification (SyML) standard published by the Object Management Group (OMG). As part of the development efforts, said specification has been implemented using the Query-View- Transformation Operational (QVTO) language. During the process, several critical changes to the current SyML standard were proposed. Furthermore, a number of current limitations related to MapleSim were identified. Despite these issues, a proof-of- concept transformation was successfully implemented. In conclusion, the integration of complex simulation models conforming to the Modelica language with SysML-based system models has shown great promise and is a highly useful tool to support the decision making process in design.",2013
Model-Based Requirement Engineering to Support Development of Complex Systems,"About 90% of the innovations on today’s vehicles are driven by electrics/electronics or software functions. This shifts the focus from a component-oriented perspective to a function-oriented view in engineering. At the same time, descriptions of systems and subsystems are required in order to coordinate collaboration with suppliers. These different views on the system under development essentially affect requirements engineering. On the one hand, information have to be provided, e.g., for requirement specifications for single systems. On the other hand, requirements have to be defined for functions realized on different systems and subsystems. This paper presents a concept for model-based requirement engineering supporting to gather and provide requirements needed for different views within the automotive development process. The concept presented is based on five partial models representing the emerging automotive system from an abstract concept (use cases) to a solution (system structure). Each of the partial models, namely use cases, functions, function realization, system structure and product structure are described with regard to required artifacts and their relations based on object-oriented modeling. These artifacts and relations serve for the allocation of requirements or can be specified by existing requirements. The proposed concept support different views upon the vehicle system and allow to generate structured, consistent documents, like requirements specifications for single systems within the development process. At the same time, the impact of changes concerning single requirements, use cases, functions or systems can be analyzed. The application of the proposed concept is highlighted using the example of an electric vehicle.",2019
Ontology-centric industrial requirements validation for aircraft assembly system design,"The development of an aircraft industrial system faces the challenge of integrative requirements validation with de-correlated modelling languages and distributed proprietary formats. This paper specifies an ontology-centric industrial requirements validation based on a cognitive digital twin approach, aiming at addressing the potentials of utilizing MBSE ontology integration for different models and leveraging a top level ontology BFO as a semantic core to integrate cross-disciplinary requirement validation, heterogonous models and simulations towards an optimized digital consistency, interoperability and reusability, with an example of such requirements validation presented.",2022
"Modeling Framework for Integrated, Model-based Development of Product-Service Systems","Product-service systems (PSS) are seen as the 21st-century solution for direct delivery of value to customers under the requirements of high availability, quality, and reduced risks. With mutual benefits for customers, manufacturers, service providers and often the environment, PSS represent a promising approach to sustainable development. This paper addresses the integrated development of product-service systems consisting of physical products/systems and services and proposes an integrated modeling framework that utilizes the Systems Modeling Language. A use case from Lenze, a German automation company, demonstrates the applicability of the integrated modeling framework in practice.",2018
Extending SysML for Engineering Designers by Integration of the Contact & Channel – Approach (C&C2-A) for Function-Based Modeling of Technical Systems,"Model-Based Systems Engineering (MBSE) is advancing rapidly in the domains of software and embedded systems. In contrast, mechanical engineers still have trouble in application of MBSE. SysML has established as the leading modeling language for multidisciplinary systems, but some limitations still hinder mechanical engineers from its application. The provided behavioral and structural diagrams seem to not being sufficiently capable to represent all relevant information regarding mechanical systems. This paper presents an extending profile which aims to overcome some of those limitations. The profile is based on the Contact & Channel – Approach (C&C2-A), which is well-proven in function-based modeling of technical systems comprising function-relevant structural properties. The goals of the C&C2-A are to retain a maximal solution space, to overcome component- afflicted thinking and to provide an adequate modeling approach for mechanical relevant information. A prototypic tool implementation of the extending SysML-profile, complemented by some automatisms in form of a plugin, is evaluated at the example of a small gearbox.",2013
Evaluation of the DoDAF Meta-model's Support of Systems Engineering,"The Department of Defense Architectural Framework (DoDAF) is the DoD's mandated method to document system architectures. Consequently, it has a far-reaching and deep impact on systems engineering and acquisition within the DoD. DoDAF version 2.0 departs from earlier versions in its emphasis on the underlying architectural data. It is now based on a meta model called DM2 that defines all the concepts and their relationships. This paper examines DM2 with a critical eye toward how it is defined, modeled, and used to support systems engineering. The evaluation is based on a text analysis of systems engineering guidebooks and a comparison with the DM2 definitions. We classify mismatches between the systems engineering guidebooks and DM2 and highlight some omissions in DM2 of important systems engineering concepts. We find that DM2 has some serious omissions that have implications for the ability of DM2 to support systems engineering. We make two recommendations for how DM2 can address these issues. First, the underlying ontology should be developed and modeled using more widespread used tools to facilitate greater understanding, adoption, and acceptance by the community. Second, the ontology must be designed to support the decision processes using language familiar to the intended users.",2015
Model Driven Upstream and Downstream Artifacts,"It is important for a systems architect to be able to “zoom in” and “zoom out” different levels of details, i.e., to see the enterprise and business level views as well as to go into details of systems and different components of systems. The enterprise knowledge and information systems are two fundamentally different disciplines. An intermediary approach that can connect the two bi-directionally can be very useful in such scenarios. This short paper proposes an intermediary modeling approach that can provide means to computer assisted creation of higher-level business architectural artifacts, that can hold business meaning for the upper management, as well as information system meta-model descriptions that can be used for MBSE (Model Based System Engineering) approaches to develop concrete software systems. This would allow enterprise planning at intermediary level to provide upstream and downstream independence. This preliminary research uses a computer aided planning environment that has repository of multi-disciplinary patterns at different levels of detail for rapid development of these models, capturing various views and viewpoints in a step by step manner.",2015
SysML-based Profile for Dependable UAV Design,"Model-based systems engineering approaches are commonly used for the development of various heterogeneous mechatronic systems including nowadays popular Unmanned Aerial Vehicles (UAV). As a rule, the dependability analysis is carried out during the system integration phase of the UAV development. Therefore, fundamental design drawbacks might be uncovered too late leading to serious and costly rework. This paper presents a new methodology for the early dependability analysis of a UAV system applicable during the design phase. The proposed dependability analysis is based on the Dual-graph Error Propagation Model (DEPM), a stochastic model of system design aspects that influence error propagation processes: control flow, data flow, and component-level reliability properties. A new domain-specific Systems Modeling Language (SysML) profile and the transformation algorithm from the SysML model to the DEPM are introduced as two key parts of this methodology as well as the main research results of this paper. The relevant technical details of the modeling workflow are demonstrated with a case study UAV that explains how to design a UAV using the introduced SysML profile, transform the SysML model into the DEPM, and evaluate dependability properties.",2018
Ontology-based system to support industrial system design for aircraft assembly,"The development of an aircraft industrial system is a complex process which faces the challenge of digital discontinuity in multidisciplinary engineering due to various interfaces between different digital tools, leading to extra development time and costs. This paper proposes an ontology-based system, aiming at functionality integration and design process automation, by Models for Manufacturing methodology principles. A tool-agnostic modelling, simulation and validation platform with Discrete Event Simulation and 3D simulation is enabled and demonstrated in a real case study. An ontology layer collecting the domain knowledge enables integration of the proposed system, accelerating the design process and enhancing design quality.",2022
"Integration of System Modeling and Design Processes, Data and Technology for Streamlining Enterprise Integration","Complex systems, Pattern-based Systems Engineering, and Model-based Systems Engineering are approaches to model system lifecycles and address engineered systems complexity. Each approach advocates languages, tools, and processes as supplements to traditional engineering processes; however, these approaches are not readily adopted. The challenge for these system modeling approaches is they are not linked to traditional engineering processes and require unique tools and languages independent of traditional engineering domains. Furthermore, the knowledge of the external standards and specifications used in traditional processes are not available to users of system modeling technology, and those who have knowledge of external standards and specifications do not have knowledge of system modeling technology. Moreover, embedding intelligence of external standards and specifications is available within traditional system modeling applications. The research goal is integrating the technology and processes employed by system modeling and traditional engineering to automate data creation, flow and validation through removal of barriers to rule-driven technology adoption. Rule-driven technology adoption should lead to efficiencies in creating and managing extremely large datasets through automation. The results project significant improvement to data quality and enterprise IT systems integration while reducing labor costs to; validate data, avoid and correct errors, and eliminate data omissions.",2016
Automated Derivation of Optimal Production Sequences from Product Data,"Customer specific, individual products nowadays lead to larger product variance and shorter time to market. This requires efficient production system planning. In addition, due to a larger system complexity, each iteration of the planning process itself gets soaringly complex. Time constraints and complexity, therefore, emphasize the necessity of supporting humans in planning modern production systems. Especially the determination of the production sequence holds immense potential and tends to get even more complex within specific production technologies. Exemplarily, this article focuses on welding sequences. Here, domain knowledge from product development and production planning needs to be holistically integrated. Furthermore, implicit, historic knowledge needs to be formalized and used in today’s planning tasks. This article introduces a methodical approach and a corresponding toolchain to derive optimal production sequences from customer product data which is validated using welding processes. For this, firstly, a reference system is build up consisting of historic product data (e.g. part list, CAD data) and corresponding production system characteristics (e.g. number and specifications of machines). The main aspect is to use similarities between the new product variant and assemblies from the reference system, to determine implications of product specifications on the process sequence. Overall, such restrictions can be displayed using Model-Based Systems Engineering. Relevant information (e.g. weld seam lengths) can be used to compute the optimal weld seam order regarding minimal cycle times, for example. This requires a parametric encoding of product and production system. In a nutshell, this approach covers the automated derivation of an optimal production sequence for new product variants, based on system information and product similarities, to tackle time constraints and complexity by suggesting initial planning drafts.",2022
Approach for model-based requirements engineering for the planning of engineering generations in the agile development of mechatronic systems,"The crucial factor for a successful usage of modeling approaches of systems engineering is the interaction of language, method, and tool. For this, specific challenges arise for the application of MBSE in agile requirements engineering. From observations in agile development practice at a machine tool manufacturer, the challenges for model-based requirements engineering are described and each is assigned to its critical aspect of modeling: The language must formally represent the requirements data model, especially for planning engineering generations. The tool must support collaborative, interdisciplinary cooperation, and consider the dynamics of the requirements model during the development process. The method must individually support the requirements engineering activities, which are carried out several times in a sprint during the development process and must enable a target-oriented process for bundling the requirements into engineering generations. Taking these demands into account, an approach is then presented providing activity-based views in conjunction with activity steps based on a consistent ontology for the description of product requirements and verification activities. The activity steps are composed in activity patterns and support the user in making use of the views for modeling requirements for the engineering generations. The approach is implemented in the software JIRA at a machine tool manufacturer. The subsequent evaluation shows that the approach is used in development practice and offers the potential to plan engineering generation systematically and comprehensibly and to ensure a regular review of the implemented requirements.",2022
Multi-level virtual prototyping of electromechanical actuation system for more electric aircraft,"Electromechanical actuators (EMAs) are becoming increasingly attractive in the field of more electric aircraft because of their outstanding benefits, which include reduced fuel burn and maintenance cost, enhanced system flexibility, and improved management of fault detection and isolation. However, electromechanical actuation raises specific issues when being used for safety-critical aerospace applications like flight controls: huge reflected inertia to load, jamming-type failure, and increase of backlash with service due to wear and local dissipation of heat losses for thermal balance. This study proposes an incremental approach for virtual prototyping of EMAs. It is driven by a model-based system engineering process in order to enable simulation-aided design. Best practices supported by Bond graph formalism are suggested to develop a model’s structure efficiently and to make the model ready for use (or extension) by addressing the above mentioned issues. Physical effects are progressively introduced, and the realism of lumped-parameter models is increased step-by-step. In particular, multi-level component models are architected to ensure continuity between engineering activities. The models are implemented in the AMESim simulation environment, and simulation responses are given to illustrate how they can be used for preliminary sizing, control design, thermal balance verification, and faults to failure analysis. The proposed best practices intend to provide engineers with fast, reusable, and efficient means to assess performance virtually and enhance maturity, performance, and robustness.",2018
Ontology-based requirement verification for complex systems,"Verification is a necessary part of Model-based systems engineering (MBSE) which is becoming a mainstream methodology for the design of complex systems. Verification in the early design stage has aroused widespread attention for its efficiency and cost-saving. Although there are numbers of researches on verification, some deficiencies still exist, such as the integration of design and verification needs to improve, the design problems are hard to trace and the behavior verification in the early design stage is often omitted. In this study, a novel ontology-based requirement verification method for complex systems is proposed to solve the above-mentioned problems. First, a requirement formalization method is proposed to avoid the ambiguousness of natural language, to make requirements easier to verify, and to make design problems easier to trace. Second, some transformation rules are defined to realize the automatic design ontology and rule generation. Based on these two steps, automated verification can be done through reasoning with ontology models and rules. This verification method is fully integrated with design tools and no additional expertise is needed for designers. To validate its feasibility and advantages, an example of a smart traffic light system is provided.",2020
Simulation of Database Interactions for Early Validation of Digitized Enterprise Processes,"Digitized enterprise processes often encompass interaction with relational databases. Describing and simulating large-scale and complex processes on different abstraction levels lead to the use of tools and methods of Model-based Systems Engineering. In practice, current entity-relationship modeling approaches solely enable modeling relational database structure without simulation of database interactions at an early development stage. However, in general, it is known that early validation improves common understanding and communication in the development team and reduces the risk of design flaws. This paper presents an approach for model-based enterprise process digitization and a previously developed and now enhanced broker-based SysML Toolbox for integrating real relational databases into SysML simulations. The approach comprises status quo documentation concerning enterprise processes, development of digitized processes and required relational database structures as well as validation of digitized processes using the SysML Toolbox.",2023
System-level model integration of design and simulation for mechatronic systems based on SysML,"The design of a mechatronic system (MTS) is not a trivial task due to the complexity of the systems. The evaluation of various design scenarios for the given requirements of a specific MTS is also difficult. Currently, model-based systems engineering (MBSE) and the modeling language SysML provide a novel means for the systematic design of MTSs. However, the specific requirements of MTS behavior modeling, i.e., continuous dynamics or even discrete/continuous hybrid behavior modeling, and automatic simulation and evaluation of the behavior models, are not supported by SysML which intends to create descriptive static design models. Therefore, extension should be made for SysML to support detailed hybrid behavior modeling and the transformation between hybrid models in SysML and executable simulation models in certain simulation environment. For this study, a meta-model based method is proposed to integrate the system design and simulation models of MTSs. First, a set of stereotypes is defined to facilitate the designer to explicitly model hybrid dynamic behavior based on SysML. The necessary simulation information is also formalized in SysML to support an analysis of the system dynamic behavior with the aid of simulations. Finally, the SysML-based system dynamic behavior, and the related simulation information are integrated with the platform-specific simulation model through a bidirectional model transformation approach based on a triple graph grammar (TGG), which facilitates the automatic model consistency and traceability between system design and simulation. The proposed method is implemented and illustrated by using an Inverted Pendulum System (IPS).",2011
Virtual Simulation of the Operation of a Lithium-Ion Battery as a Part of a Vehicle Using 1D Complex Model,"The article describes a virtual (numerical) model of a lithium-ion battery as part of a vehicle, developed for the subsequent modeling of the required operating modes, selection of parameters, analysis of the operation of the lithium-ion battery and development of algorithms for its control system. It is based on a complex functional 1D model of the upper level which is presented in the form of a block diagram of the product and allows predicting the operation of a typical lithium-ion battery pack depending on the type of vehicle and the its control system (active or passive balancing).",2023
Chapter 4 - Agile Stakeholder Requirements Engineering,"With the basics of model-based systems engineering (MBSE), agile methods, and modeling out of the way, Chapter 4 delves into the agile MBSE workflows in earnest. Specifically, this chapter focuses on capturing the needs of the stakeholder as stakeholder requirements to prepare for the following system activities. All the while, the agile themes of incremental development and continuous verification of engineering data are emphasized. The stakeholder requirements workflow includes five key activities; Identify Stakeholders, Generate Stakeholder Requirements, Model Stakeholder Use Case Scenarios, Create/Update Validation Plan, and Perform Review. Each of these activities is defined in detail, the workflows are explored, and their agile implementation is explained. In addition, two examples are used in this exploration—a high-end running treadmill and an industrial robot exoskeleton, the “T-Wrecks.” The chapter shows how to identify the stakeholders, elicit their needs, capture those needs as requirements, organize them into use cases, and perform scenario analysis to ensure their completeness, accuracy, and consistency.",2016
Operational and System Hazard Analysis in a Safe Systems Requirement Engineering Process – Application to automotive industry,"Automotive engineers have to meet evolving customer expectations, particularly growing concerns for safety, by introducing new sophisticated devices like Line Keeping Assistance, Collision Mitigation Braking System or Pedestrian Detection. These devices are composed of electrical components. They are likely to be subject to failures that may impact automobile safety, which means the safety of the vehicle occupants or pedestrians. Recent standards like ISO 26262 aim at mitigating these safety problems. Automobile engineers must prove that they perform safety studies along the design process. Meanwhile, they have to cope with other changes in their engineering practices. Due to the goals of verifying the satisfaction of all requirements, the design offices have introduced new practices based on Systems Engineering (SE) which are based on models. SE tools or processes are based on a functional approach of the system in which dysfunctional aspects are missing. Thus, there is a need to integrate the safety domain into the SE framework in order to improve safety studies and the collaboration between systems engineers and safety specialists. This paper analyzes this issue by focusing on the definition of high-level (or vehicle-level) safety requirements. It proposes a Safe Systems Requirement Engineering Process and a method named Operational and System Hazard Analysis (O&SHA) that helps to specify the high-level safety requirements (called safety goals in ISO 26262). It is based on a Model-Based Systems Engineering approach (MBSE) which integrates safety aspects. The added value of the proposed method is illustrated by applying it to two case studies.",2016
Modelling and Simulation for the Integrated Design of Mechatronic Systems,"The development of mechatronic systems involves the use of multiple disciplines, from mechanical engineering to electronics engineering and computer science. Traditionally, every discipline was developed independently and then integrated to generate the final system. However, high quality designs cannot be achieved without simultaneously considering all the engineering disciplines. This mechatronic approach carries intrinsic complexity into system design process and numerous researches are on-going in order to find out optimal methods. This article refines a SysML-based design process for the high level development of mechatronic systems, focusing on the integration of modelling and simulation as fundamental aspect for an integrated approach. How conceptual SysML diagrams may support the generation of simulation models is shown, along with a chain of simulations for an integrated design. The proposed approach is applied to a prototype case study designed from scratch, in order to be validated and to demonstrate its potentiality.",2015
SyProLei - A systematic product development process to exploit lightweight potentials while considering costs and CO2 emissions,"In lightweight design, developers are used to face the conflicting objectives of functional fulfillment, economic performance, and sustainability. Against this background, however, a clearly structured approach for the satisfied use of specific lightweight engineering methods within the product development is still missing. Thus, this contribution deals with the fundamental conception and first implementation of a systematic development methodology covering the disciplines of mechanics, electrics/electronics and software just like the focus on an integrated view on product, production and material aspects. To ensure an application-specific manifestation of the product development process for three exemplary use cases from small and medium-sized enterprises but also large corporations in the area of prosthetics, bike construction and plant engineering, the individually developed methods and tools are first generalized in order to make them adaptable to a wide variety of industries. As a result, one lightweight-specific method or tool (e.g., function mass analysis, “PPM solution correlator“ or “2D layout & weight drafting”) is introduced in more detail for all stages of the technically extended RFL(T)P approach derived from model-based systems engineering (MBSE).",2022
Pattern-based integration of system optimization in mechatronic system design,"Model-Based Systems Engineering (MBSE) is a promising methodology for the design of complex mechatronic systems. There are some tools developed to support MBSE in complex system design and modeling. However, none of them has got the functionality of supporting system optimization. This work is precisely motivated by this gap and aims to develop effective methods to support automatic system optimization for MBSE. Specifically, a pattern-based method is proposed to support the integration of system optimization into mechatronic system design. In such a method, optimization problems, their solving methods and computation results are formally defined in each pattern based on the System Modeling Language (SysML). In addition, a model description scheme termed an optimization profile is proposed based on SysML to include the components for formalizing different kinds of optimization problems and optimization methods. After an optimization profile is created for an optimization problem, system optimization methods can be chosen automatically from the pattern library based on a semantic similarity evaluation. Then, optimization results are provided to users to support decision-making and the pattern library is updated using the relevant information obtained in this process. A system design example is used to demonstrate the feasibility and effectiveness of proposed methods.",2016
Challenges in Automated Commercial Aircraft Production,"Civil Aircraft development and production are facing significant challenges in future. On the one hand, the flight-path to carbon neutral aviation, like using liquid hydrogen, will require game changing technologies. Simultaneously, competition, especially on the single aisle market, is evolving fast and puts pressure on market shares and margins. The necessity of an adaptable and highly efficient production becomes more evident than ever. One contribution to achieve this goal is the research project “Intelligent Modular Robotics and Integrated Production System Design for Aircraft Manufacturing” (iMOD). Namely, it will analyze challenges regarding (1) an integrated and Digital Twin-based system design approach, (2) flexible and modular robotics to support workers with unergonomic tasks and (3) a flexible intralogistics based on Automated Guided Vehicles (AGVs). Those three aspects will be integrated into an approach that uses semantic technologies to connect the different components across different levels of functionality and different life cycle phases.",2022
Using Architecture Patterns to Architect and Analyze Systems of Systems,"The inherent nature of a Systems of Systems (SoS) makes it very difficult to model and analyze it through conventional means. One of the first challenges faced is how to represent the SoS in a form that lends itself to detailed analysis, especially when full details of the component systems may not be readily available. Therefore, an important consideration is whether use of model abstractions can be sufficient to deal with many of the analysis needs of the SoS. It is clear there is a need for a new paradigm, encompassing methodology, models, tools and flows that enable the future engineering of SoS in order that they can be operated effectively. This paper describes how we are using architecture patterns to architect and analyze SoS in order that we can compare different architecture solutions and provide guidelines for the development of a future architectures based on the analysis of existing architectures. Insights are given to show the benefits for SoS architecture analysis with exemplars taken from a test case dealing with emergency response for a major incident in the UK. Our findings show the significant increase in SoS characterization that patterns can afford the systems architect in all phases of SoS evolution in order to deliver improved SoS capability.",2013
Collaborative Modeling of Interoperable Digital Twins in a SoS Context,"In an Industry 4.0 compliant production plant components from different value chain partners must work together. Digital Twins (DTs) are an essential part of that system of systems because all relevant assets will need those digital representations to be integrated into such kind of environment, as they establish the required flexibility for formerly rigid structures. This does not begin at the time of delivery of products but already during engineering of the production plant, where relevant data and information are needed. The DT topic is not exclusively a software topic, as it cannot be considered without the associated physical twins. This leads to a need for a holistic Model-Based Systems Engineering approach that integrates all necessary aspects into an architecture for interoperable DTs. This contribution presents an approach and guidelines for modeling DTs based on industry use cases. The goal is to support the implementation of interoperable DTs in Industry 4.0 by using formal modeling techniques. This closes the gap between informal discussions about DTs between value chain partners and the implemented interoperable DTs needed for a specific use case. Compatibility with emerging standards such as the asset administration shell is assured. Focus is the modeling of the DT environment, e.g. a production plant as a system of systems as well as the description of logical DT content elements. Main elements in the environment of a DT are other linked DTs, their relationships and interactions. Users of the modeling approach are developers or management responsible for the company’s DTs. They can use it to develop the correct DTs for relevant use cases of their assets.",2022
A Methodology for Sustainability Assessment and Decision Support for Sustainable Handling Systems,"Sustainable manufacturing is an important goal to reduce the carbon footprint and securing the economic success of companies. To reach sustainable manufacturing it is also necessary to use sustainable equipment. For this purpose, the sustainability indicators of the asset during its whole life cycle need to be considered for decision making during the design and selection of equipment. Missing analysis methods as well as missing awareness of the importance are obstacles in decision making. Therefore, a multi-criterial analysis method for handling systems for decision empowerment is presented in this paper. The presented methodology enables the engineer to analyze the suppliers for decision making in the purchasing process as well as the identification of weak points regarding sustainability in the handling systems. The methodology offers the possibility of analyzing a system of several parts as a whole, rather than just individual parts. The methodology is implemented in a usable software prototype which has a graphical interface for the data input and can be connected to conventional databases. The usability of the tool is shown with a handling system consisting of an industrial robot and a gripping system.",2023
Towards “Design for Interoperability” in the context of Systems Engineering,"In product development, early decisions made within the requirements specification and design phase have significant impact on overall functionality, quality and lifecycle cost of the product. In Systems Engineering, these oftentimes iterative design phases are steered by underlying development models, providing processes, guidelines and best practices. One family of guidelines are the “Design for X” (DfX) tools or principles. In the development of mechatronic systems e.g. production systems, traditionally the mechanical, electric and software domain are to be distinguished. Over time, driven by trends of digitalization, communication and interconnection of systems, the product innovation and thus the required development effort has been shifting from the mechanical domain towards the software domain. The question of system interoperability thereby is of a fundamental nature. This is especially relevant within the current paradigms of Industry 4.0 and the Digital Twin. To reflect the growing importance of interoperability (i.e. the ability of systems to purposefully interchange interpretable information) as a requirement for the product within the design phase of technical systems, this paper introduces “Design for Interoperability” (DfIOp) as a new DfX principle. First, this is motivated by the ever-growing importance of information technology for current and future products. Then, the main contribution of the paper is the combination of the state of the art in the research domains of DfX, interoperability, Systems Engineering and Industry 4.0. Consequently, DfIOp will be presented, including a systematization model as well as a first method for its implementation. Further contemplation on DfIOp shows, that it enables derivative principles such as “Design for Data Analytics” and “Design for Digital Twin”. In future research, the underlying models as well as methods of DfIOp are to be further detailed and integrated into the research context.",2021
Model checking reveals design issues leading to spurious actuation of nuclear instrumentation and control systems,"A spurious actuation of an industrial instrumentation and control (I&C) system is a failure mode where the system or its component inadvertently produces an operation without a justified reason to do so. Design issues leading to spurious failures are difficult to analyse, but pose a high risk for safety. Model checking is a formal verification method that can be used for exhaustive analysis of I&C systems. In this paper, we explain how formal properties that address spurious failures can be specified, and how model checking can then be used to verify I&C application logic designs based on vendor-specific function block diagrams. Based on over ten years of successful practical projects in the Finnish nuclear industry, we present 21 real-world design issues (representing 37% of all detected issues), each involving a systemic failure that could lead to spurious actuation of nuclear safety I&C. We then describe how random failures of the underlying hardware architecture—another cause for spurious actuation—can also be included in the models. With an experimental evaluation based on real-world nuclear industry models, we demonstrate that our method can be effectively used for the verification of single failure tolerance.",2021
Rapid model-based inter-disciplinary design of a CubeSat mission,"With an increase in the use of small, modular, resource-limited satellites for Earth orbiting applications, the benefit to be had from a model-based architecture that rapidly searches the mission trade-space and identifies near-optimal designs is greater than ever. This work presents an architecture that identifies trends between conflicting objectives (e.g. lifecycle cost and performance) and decision variables (e.g. orbit altitude and inclination) such that informed assessment can be made as to which design/s to take on for further analysis. The models within the architecture exploit analytic methods where possible, in order avoid computationally expensive numerical propagation, and achieve rapid convergence. Two mission cases are studied; the first is an Earth observation satellite and presents a trade-off between ground sample distance and revisit time over a ground target, given altitude as the decision variable. The second is a satellite with a generic scientific payload and shows a more involved trade-off, between data return to a ground station and cost of the mission, given variations in the orbit altitude, inclination and ground station latitude. Results of each case are presented graphically and it is clear that non-intuitive results are captured that would typically be missed using traditional, point-design methods, where only discrete scenarios are examined.",2014
Chapter 16 - Residential Security System Example Using the Object-Oriented Systems Engineering Method,"Publisher Summary
This chapter provides an introduction to the object-oriented systems engineering method (OOSEM) and how it fits into the context of the overall development process, and then it shows how it is applied to the residential security example. The example described in this chapter illustrates how SysML is used as part of a model-based systems engineering method, called OOSEM, to solve a systems engineering problem. The top-down scenario-driven method flows the requirements down from stakeholder needs to component-level specifications, which include hardware, software, persistent data, and operational procedures. The OOSEM approach includes analysis of stakeholder needs, analysis of black-box system requirements, defining the logical architecture, synthesizing candidate physical architectures, and supporting activities to optimize and evaluate alternatives and manage requirements traceability. The method also supports the verification process in the up side of the Vee development process. The approach illustrates how different aspects of the system are analyzed to address a multitude of concerns related to system functionality, interfaces, performance, distribution, and life cycle considerations.",2008
A Model based Visualization Framework for Cross Discipline Collaboration in Industry 4.0 Scenarios,"The Industry 4.0 initiative fosters close collaboration between various disciplines in product development. Collaborative aspects are addressed by several research activities, namely Systems Engineering and more precisely by Model Based Systems Engineering. This work contributes a new method for interdisciplinary communication by an integrated visualization of conceptual models. The method describes an environment for direct communication between experts in related disciplines. Common application scenarios are business process management workshops in which process experts have to achieve commitment with experts from other disciplines like computer science, logistics or engineering. Especially in Industry 4.0 scenarios, mutual understanding between experts from several domains is crucial for a successful process setup, planning and preparation of production scenarios. The method comprises a theoretical framework for establishing inter-model relationships and their visualization. For establishing links between models, an ontology based approach is applied. The Bunge-Wand-Weber Ontology for information systems provides a generic and yet applicable basis for establishing consistent inter-model relationships. For supporting communication processes the integrated models should be displayed. To provide an understandable visualization a three-dimensional environment is proposed, in which the linked models are arranged and displayed. The scientific basis is given by applying the concept of visual variables described in the scientific discipline of information visualization. The depth of space extends the set of visual variables. Applied to the semantic concept of integrated models a discriminable visualization of integrated models is achieved.",2016
Chapter 2 - What Are Agile Methods and Why Should I Care?,"Chapter 2 introduces agile methods and their application to systems engineering. Although agile methods arose in IT software development, they have begun to be applied——with good success—in other engineering disciplines as well. In order to understand how best to apply them to systems engineering, a good understanding of the basic agile concepts, methods, and approaches is necessary. This chapter outlines the Agile Manifesto and restates it to be more relevant to systems engineering, including identifying the important measure of success—verified engineering data. The benefits of agile approaches are explained with an emphasis on the difference it can make to systems engineers. Key methodological approaches—incremental engineering, dynamic planning, continuous verification (of engineering data), continuous integration, and so on—are all explained in the context of systems engineering. The chapter highlights the key agile best practices for improving quality and efficiency in systems engineering and then outlines the Harmony Agile Model-Based Systems Engineering (Harmony aMBSE) process that integrates those best practices into a coherent approach.",2016
A system model for assessing vehicle use-phase water consumption in urban mobility networks,"Water consumption is emerging as an important issue potentially influencing the composition of future urban transportation networks, especially as projected urban populations are expected to outpace water availability and as alternative fuels and vehicles are being implemented in such regions. National and State policies aimed at reducing dependence on imported fuels and energy can increase local production of fuels and energy, impacting demand on local water resources. This article details the development of a model-based assessment on water consumption and withdrawal pertaining to the use-phase of conventional and alternative transportation modes based on regional energy and fuel production. An extensive literature review details water consumption from fuel extraction, processing, and distribution as well as power plant operations. Using Model-Based Systems Engineering principles and the Systems Modeling Language, a multi-level, multi-modal framework was developed and applied to the Metro Atlanta transportation system consisting of conventional and alternative vehicles across varying conditions. According to the analysis, vehicles powered by locally produced biofuels and electricity (assuming average local grid mix for charging) consume more water than locally refined gasoline and CNG-powered vehicles. Improvements in power plant technologies, electricity generation (e.g., use of solar and wind versus hydro power) and vehicle efficiencies can reduce such water consumption significantly. Total water withdrawal for each vehicle and fuel is significantly greater than water consumption.",2012
Effect of satellite formations and imaging modes on global albedo estimation,"We confirm the applicability of using small satellite formation flight for multi-angular earth observation to retrieve global, narrow band, narrow field-of-view albedo. The value of formation flight is assessed using a coupled systems engineering and science evaluation model, driven by Model Based Systems Engineering and Observing System Simulation Experiments. Albedo errors are calculated against bi-directional reflectance data obtained from NASA airborne campaigns made by the Cloud Absorption Radiometer for the seven major surface types, binned using MODIS’ land cover map – water, forest, cropland, grassland, snow, desert and cities. A full tradespace of architectures with three to eight satellites, maintainable orbits and imaging modes (collective payload pointing strategies) are assessed. For an arbitrary 4-sat formation, changing the reference, nadir-pointing satellite dynamically reduces the average albedo error to 0.003, from 0.006 found in the static reference case. Tracking pre-selected waypoints with all the satellites reduces the average error further to 0.001, allows better polar imaging and continued operations even with a broken formation. An albedo error of 0.001 translates to 1.36W/m2 or 0.4% in Earth’s outgoing radiation error. Estimation errors are found to be independent of the satellites’ altitude and inclination, if the nadir-looking is changed dynamically. The formation satellites are restricted to differ in only right ascension of planes and mean anomalies within slotted bounds. Three satellites in some specific formations show average albedo errors of less than 2% with respect to airborne, ground data and seven satellites in any slotted formation outperform the monolithic error of 3.6%. In fact, the maximum possible albedo error, purely based on angular sampling, of 12% for monoliths is outperformed by a five-satellite formation in any slotted arrangement and an eight satellite formation can bring that error down four fold to 3%. More than 70% ground spot overlap between the satellites is possible with 0.5° of pointing accuracy, 2Km of GPS accuracy and commands uplinked once a day. The formations can be maintained at less than 1m/s of monthly ΔV per satellite.",2016
Chapter 16 - Water Distiller Example Using Functional Analysis,"Publisher Summary
This chapter contains an example that describes the application of SysML to the design of a water distiller, intended for use in remote, undeveloped areas of the world. This example starts with a description of the problem, and selection of an appropriate approach to system modeling will follow. Because of the abstract nature of this problem, the system is developed using a traditional functional analysis approach, which is both familiar and intuitive to many practicing systems engineers. This approach is generally consistent with the simplified MBSE method. The example also illustrates its application to modeling physical systems with limited software functionality. Examples of each SysML diagram are used to support the specification, design, and analysis, along with leveraging some of the fundamental SysML language concepts such as the distinction between definition and use.",2012
Applying the model-based concept framework to capturing the safety aspects of the suborbital human spaceflight missions,"Safety issues are one of the core attributes of the projects of the New Space economy such as SpaceShipTwo and New Shepard. While these projects are on their way to shifting the paradigms in space tourism and transportation, the question of tourist safety remains in the cornerstone for a successful operations. One of the important questions we encounter when we start the development of complex systems such as the suborbital transportation and space tourism systems is: what are the concepts available and how can these concepts be represented using strictly defined ontology and model semantics? And finally – how this model-based information would support the system architect in keeping track of safety aspects? In this work we present a model-based concept framework that aims to address this issue. First a concept framework methodology is presented, after which we demonstrate its applicability to suborbital human spaceflight missions–SpaceShipTwo and New Shepard. The analytical conceptual difference between these concepts is demonstrated. The proposed framework includes: the information about the stakeholders and their needs; the solution-neutral environment (the problem statement) in which we formulate the functional intent; the solution-specific environment (solution statement) in which we see the possible solutions; the integrated concept revealed by means of the decomposition of such solution into internal elements and functions; and the concept of operations. Each one of these entries of the concept framework has a counterpart represented in conceptual modeling languages, such as Object-Process Methodology (OPM) or the System Modeling Language (SysML). Such a model-based concept framework encodes the core information required to define a suborbital tourism concept and represent it in a digital environment. We believe this will become a powerful tool to support the makers of architectural decisions that lead to concept and eventually to architecture, and that provides a safe operations for suborbital tourist services.",2019
An end-to-end framework for safe software development,"It is largely recognized that the architectures of embedded systems are becoming more and more complex both at hardware and software levels. Despite the significant advances in the development tools, developing the software of such systems while ensuring their safety is still a difficult task. In this paper, we propose an end-to-end programming framework to ease the development of safe software systems. The programming framework, supported by a proper methodology and workflow, make it possible to design safe/secure software that implements functional requirements while respecting multiple non-functional requirements and mastering architectural complexity, time-to-market and cost. The programming framework is based on five concepts: (1) model-based system engineering: MBSE, (2) design-by-contract approach, (3) formal analysis of models based on symbolic execution, (4) code generation, and (5) static and dynamic code analysis. The effectiveness of the methodology has been demonstrated through multiple use-cases. The framework is realized using CEA LIST (http://www-list.cea.fr/en/) open-source development platforms: Papyrus, Frama-C, and UNISIM-VP. These platforms are results of many research and industrial projects such as FP7-SafeAdapt11SafeAdapt project was funded by the European Commission within the 7th Framework Program under the grant number “608945”., FUI-EQUITAS22EQUITAS project was funded by Bpifrance under call FUI-AAP16 with a contract number “F1312031-Q”., FP7-STANCE33STANCE project was also funded by the European Commission under the ICT theme of the 7th Framework Program with the grant agreement number “317753”., CATRENE-OpenES44OpenES project was funded under the CATRENE Program with the agreement number “CA703–2013”., FSN-SESAM Grids55SESAM Grids is a “Programme d'Investissement d'Avenir” project funded by “FSN-Briques Génériques du Logiciel Embarqué N°3” with contract number “O14830-67155”., and H2020-VESSEDIA66VESSEDIA project is funded by the European Commission under the SEC theme of the H2020 Framework Program with the grant agreement number “731453”..",2018
"Model-based systems engineering: Evaluating perceived value, metrics, and evidence through literature","Abstract Although Model-Based Systems Engineering (MBSE) is quickly becoming adopted in Systems Engineering (SE), there have not been many studies evaluating literature to determine the perceived value of implementing MBSE. This research first identifies and discusses previous studies on the justification or rejection of MBSE. This study investigates how the SE community perceives the value of MBSE by coding and analyzing positive and negative descriptions of MBSE; perceived benefits and drawbacks of implementing MBSE; and the evidence and metrics used to substantiate and measure each claim about MBSE. From 60 academic sources, this study collected and coded over 2900 claims on MBSE. Our findings determine the most positive attributes of MBSE to be Verification \& Validation Capability, Consistency, Reasoning, and Risk \& Error Manageability, while the most negative attributes were Approach Understandability, Acceptability, Familiarity, and Approach Complexity. The most-stated benefits were Reduced Time, Better Communication/Information Sharing, Reduced Costs, and Better Analysis Capability. The most claimed drawbacks were Increased Costs, Increased Time, Increased Effort, and Worsened Capability. A large share of claims (47\%) about MBSE was based on author opinions. Most claims (86\%) were not substantiated by a metric.",2023
State-of-practice survey of model-based systems engineering,"Abstract This paper aims to examine and document the current state of practice of model-based systems engineering (MBSE), and how organizations look toward the future. The paper is based on a survey of how MBSE has been applied and factors that influenced the perceived benefits and results. The survey was designed to evaluate the maturity and status of the implementation of MBSE (also called model-centric systems engineering), within industry, academia, and governments. The approach to the survey development is described along with the survey results. The study indicates that one of the main hurdles to introducing a model-based approach is the lack of clear and adopted organizational structures and an understanding of required conditions and needs at a management level. The survey also indicates that 50–75\% of the respondents noted some improvement or a significant improvement across almost all systems engineering tasks.",2019
Value and benefits of model-based systems engineering (MBSE): Evidence from the literature,"Abstract Traditional document-based practices in systems engineering are being transitioned to model-based ones. Adoption of model-based systems engineering (MBSE) continues to grow in industry and government, and MBSE continues to be a major research theme in the systems engineering community. In fact, MBSE remains a central element in the International Council on Systems Engineering (INCOSE)’s vision for 2025. Examining systems engineering literature, this paper presents an assessment of the extent to which benefits and value of MBSE are supported by empirical evidence. A systematic review of research and practice papers in major systems engineering archival journals and conference proceedings was conducted. Evidence was categorized in four types, two of which inductively emerged from the results: measured, observed (without a formal measurement process), perceived (claimed without evidence), and backed by other references. Results indicate that two thirds of claimed MBSE benefits are only supported by perceived evidence, while only two papers reported measured evidence. The aggregate assessment presented in this paper indicates that claims about the value and benefits of MBSE are mainly based on expectation. We argue that evidence supporting the value and benefits of MBSE remains inconclusive.",2021
Model Based Systems Engineering with Department of Defense Architectural Framework,"Abstract This paper presents a methodology for Model Based Systems Engineering (MBSE) utilizing the guidelines provided by the Department of Defense Architectural Framework (DoDAF). MBSE focuses the system engineering process on system modeling. Thus, requirements derivation, system design, integration, verification, and validation activities all center around the model of the system. System models can be built in many ways. This paper presents an approach using DoDAF. Visual accessibility of the DoDAF views facilitates full participation by all system stakeholders, including the customers, developers, and implementers, and enables the necessary dialogue. The approach promotes communications among the members of the development team and speeds up the iterations of the systems engineering process. The paper illustrates the utility of the DoDAF artifacts by means of a simplified but comprehensive, easy to follow, illustrative example. © 2011 Wiley Periodicals, Inc. Syst Eng",2011
Model-based systems engineering for a small-lift launch facility,"Abstract A study of model-based systems engineering (MBSE) applied to a small-lift launch facility is presented. The research uses Systems Modeling Language (SysML) products and functional diagrams to document the ground systems on a launch pad servicing a small class payload (0–2 tons). With the projected growth in launch cadence of small-lift rockets in the coming decade, there is a need to design increasingly complex launch systems with greater efficiency. The potential improvements in project communication, quality, and productivity are explored by developing a model following the ISO/IEC 15288 technical process framework and the International Council on Systems Engineering (INCOSE) Object-Oriented Systems Engineering Method (OOSEM) methodology. The stakeholder requirements are defined and analyzed to provide traceability to individual systems and subsystems. An architecture is proposed by generating engineering artifacts such as piping and instrumentation drawings. The concepts are verified and validated by performing engineering trade studies concentrated on the pneumatic and fuel subsystems.",2022
"Model-based systems engineering: Motivation, current status, and research opportunities","Abstract As systems continue to grow in scale and complexity, the Systems Engineering community has turned to Model-Based Systems Engineering (MBSE) to manage complexity, maintain consistency, and assure traceability during system development. It is different from “engineering with models,” which has been a common practice in the engineering profession for decades. MBSE is a holistic, systems engineering approach centered on the evolving system model, which serves as the “sole source of truth” about the system. It comprises system specification, design, validation, and configuration management. Even though MBSE is beginning to see a fair amount of use in multiple industries, specific advances are needed on multiple fronts to realize its full benefits. This paper discusses the motivation for MBSE, and its current state of maturity. It presents systems modeling methodologies and the role of ontologies and metamodels in MBSE. It presents model-based verification and validation (V\&V) as an example of MBSE use. An illustrative example of the use of MBSE for design synthesis is presented to demonstrate an important MBSE capability. The paper concludes with a discussion of challenges to widescale adoption and offers promising research directions to fully realize the potential benefits of MBSE.",2018
7.2.3 On enabling a model-based systems engineering discipline,"Abstract This paper considers the requirements of a model-based systems engineering (MBSE) discipline and the benefits that would be realized from it. A premise of MBSE is that the technical environment supporting systems engineering has evolved, and is still evolving. We analyze the basis of systems engineering decision making in conjunction with the technical environment in which it may soon be performed. The analysis provides insight into the requirements that, when met, enable a model-based systems engineering discipline. We report on our practical experience toward meeting the requirements using UML, SysML, AADL, AP233, and a systems engineering tool interoperability testbed.",2008
Model based systems engineering—A text mining based structured comprehensive overview,"Abstract An observed increase in systems scale and complexity has led to a significant momentum in exploring, identifying, and adopting model based systems engineering (MBSE) tools and techniques amongst research communities and industry practitioners. Several attempts to transform systems design and engineering practices through the use of MBSE in academia and industry has led to a considerable increase in the number of articles published containing the keyword “MBSE.” This growth serves as the motivation in this paper to explore the MBSE landscape with the help of text mining techniques to identify the most often used key terms, tools, and languages, in the context of research in MBSE and the thematic aspects defining the use of MBSE by researchers and practitioners. The objective of this paper is to provide a structured comprehensive overview of research contributions across the MBSE landscape by employing text mining techniques for: (a) identifying the concepts and methodologies inferred upon in relation to MBSE, and (b) classifying the literature published to identify commonalities across academic researchers and practitioners using MBSE tools and methods. For this purpose, the abstracts of 2380 relevant articles published in the period of the last two decades from five different databases are mined. It is found that the terms “SysML,” “Cyber Physical Systems,” and “Production” are the most used terms among researchers across the MBSE landscape with SysML being the most widely used modeling language. Further, six major thematic topics are identified that classify articles from over the last two decades with an increasing interest observed in the use of MBSE to support manufacturing and production engineering activities, especially in the cyber physical systems domain. The contributions of this paper provide a leeway on using text mining techniques to understand the research directions that are currently of interest in the field of MBSE and thereby identify potential future research directions.",2022
Foundations for model-based systems engineering and model-based safety assessment,"Abstract This article is a contribution to the INCOSE initiative for model-based engineering transformation. Its material has been presented at the ALSEE tour event in Oslo in September 2016. The ideas developed here come from the practical and theoretical experience of the authors in both industrial and academic frameworks. We organize the discussion around 6 theses that aim at establishing robust conceptual foundations for the model-based engineering transformation. We focus on model-based systems engineering, model-based safety assessment, and the relationship between these 2 disciplines. We report on active research initiatives that implement these 6 theses via the S2ML+X paradigm. We conclude with suggestions about future research and teaching activities.",2019
"4.3.3 Satellites to Supply Chains, Energy to Finance —SLIM for Model-Based Systems Engineering","Abstract Development of complex systems is a collaborative effort spanning disciplines, teams, processes, software tools, and modeling formalisms. Increasing system complexity, reduction in available resources, globalized and competitive supply chains, and volatile market forces necessitate that a unified model-based systems engineering environment replace ad-hoc, document-centric and point-to-point environments in organizations developing complex systems. To address this challenge, we envision SLIM—a collaborative, model-based systems engineering workspace for realizing next-generation complex systems. SLIM uses SysML to represent the front-end conceptual abstraction of a system that can “co-evolve” with the underlying fine-grained connections to models in discipline-specific tools and standards. With SLIM, system engineers can drive automated requirements verification, system simulations, trade studies and optimization, risk analyses, design reviews, system verification and validation, and other key systems engineering tasks from the earliest stages of development directly from the SysML-based system model. SLIM provides analysis tools that are independent of any systems engineering methodology, and integration tools that connect SysML with a wide variety of COTS and in-house design and simulation tools. We are presenting SLIM and its applications in two papers. In Part 1 paper—Motivation and Concept of SLIM—we presented the motivation and challenges that led to SLIM, the conceptual architecture of SLIM, and SLIM tools available for production and evaluation usage. In Part 2 (this paper), we present the applications of SLIM tools to a variety of domains, both in traditional as well as non-traditional domains of systems engineering. Representative SysML models and results of trade studies, risk analysis, and other system engineering tasks performed using SLIM tools are presented for the following domains—space systems, energy systems, infrastructure systems, manufacturing and supply chain systems, military operations, and bank systems.",2011
"4.3.1 Satellites to Supply Chains, Energy to Finance —SLIM for Model-Based Systems Engineering","Abstract Development of complex systems is a collaborative effort spanning disciplines, teams, processes, software tools, and modeling formalisms. Increasing system complexity, reduction in available resources, globalized and competitive supply chains, and volatile market forces necessitate that a unified model-based systems engineering environment replace ad-hoc, document-centric and point-to-point environments in organizations developing complex systems. To address this challenge, we envision SLIM—a collaborative, model-based systems engineering workspace for realizing next-generation complex systems. SLIM uses SysML to represent the front-end conceptual abstraction of a system that can “co-evolve” with the underlying fine-grained connections to models in discipline-specific tools and standards. With SLIM, system engineers can drive automated requirements verification, system simulations, trade studies and optimization, risk analyses, design reviews, system verification and validation, and other key systems engineering tasks from the earliest stages of development directly from the SysML-based system model. SLIM provides analysis tools that are independent of any systems engineering methodology, and integration tools that connect SysML with a wide variety of COTS and in-house design and simulation tools. We are presenting SLIM and its applications in two papers. In Part 1 (this paper), we present the motivation and challenges that led to SLIM. We describe the conceptual architecture (section 1) and use cases (section 2) of SLIM followed by tools available for production and evaluation usage (section 3). In Part 2 paper—SLIM Applications—we present the applications of SLIM tools to a variety of domains, both in traditional as well as non-traditional domains of systems engineering. Representative examples from space, energy, infrastructure, manufacturing and supply chain, military operations, and bank systems are presented.",2011
A model-based systems engineering framework for quantum dot solar cells development,"Abstract Currently, a wide range of newly designed devices are based on high-end quantum technologies. To successfully design a quantum system, it is necessary to appropriately address the increasing complexity which exists in the development procedure of the system. A suitable approach to deal with this problem is to employ systems engineering models and integrate them with domain engineering tools. The model-based systems engineering (MBSE) methodology is commonly used to analyze, design, manufacture, and test various complex systems. In this paper, the MBSE approach is chosen for the development of quantum dot solar cells as a typical quantum system and to deal with the complexity existing in this procedure. The analysis, manufacturing, and verification, validation, and testing (VV\&T) for this system are described using SysML in Cameo Systems Modeler software to represent the role of models in this regard. Then a detailed design is performed in MATLAB and integrated with SysML to identify how changing various parameters during the system development process affects the overall system performance. This technique facilitates the communication between different engineering teams and helps to manage the complexity in the entire system lifecycle.",1970
Operationalizing digital twins through model-based systems engineering methods,"Abstract In recent years there has been increased demand for readiness and availability metrics across many industries and especially in national defense to enable data-driven decision making at all levels of planning, maintenance, and operations, and in leveraging integrated models that inform stakeholders of current operational system health and performance metrics. The digital twin (DT) has been identified as a promising approach for deploying these models to fielded systems although several challenges exist in wide adoption and implementation. Two challenges examined in this article are that the nature of DT development is a system-specific endeavor, and the development is usually an additional effort that begins after initial system fielding. A fundamental challenge with DT development, which sets it apart from traditional models, is the DT itself is treated as a separate system, and therefore the physical asset/DT construct becomes a system-of-systems problem. This article explores how objectives in DT development align with those of model-based systems engineering (MBSE), and how the MBSE process can answer questions necessary to define the DT. The key benefits to the approach are leveraging work already being performed during system synthesis and DT development is pushed earlier in a system's lifecycle. This article contributes to the definition and development processes for DTs by proposing a DT development model and path, a method for scoping and defining requirements for a DT, and an approach to integrate DT and system development. An example case study of a Naval unmanned system is presented to illustrate the contributions.",2020
Combining dimensional analysis with model based systems engineering,"Abstract The model based systems engineering (MBSE) approach describes a system using consistent views to provide a holistic model as complete as possible. MBSE methodologies end with the physical architecture of the system, but a physical model is clearly incomplete without the study of its associated physical laws and phenomena related to the whole system or its parts. However, the computational demands could be excessive even for modest projects. Dimensional analysis (DA) is common in fluid dynamics and chemical engineering, but its application to systems engineering is still limited. We describe an engineering methodological process, which incorporates DA as a powerful tool to understand the physical constraints of the system without the burden of complex analytical or numerical calculations. A detailed example describing a microantenna is presented showing the benefits of this approach. The selected example describes a problem rarely covered in modern expositions of DA in order to show the wide benefit of these techniques. The information provided by this analysis is very useful to select the best physically realizable architectures, testing design, and conduct trade-off studies. The complexity of modern systems and systems of systems demands new testing procedures in order to comply with increasingly demanding requirements and regulations. This can be accomplished through research in new DA methods. Finally, this article serves as a fairly comprehensive guide to the use of DA in the context of MBSE, detailing its strengths, limitations, and controversial issues.",2023
TOWARDS MODEL-BASED SYSTEMS ENGINEERING (MBSE) PATTERNS TO EFFICIENTLY REUSE KNOW-HOW,"ABSTRACT Know-how reuse is an approach that has been always used by engineers to take advantage of their accumulated knowledge and practices. But, the difficulty to formalize and reuse expert know-how is increasing alongside the complexity of systems. To deal with this challenge, this paper aims to open the way to new approaches of know-how reuse, in order to improve engineering activities. For that purpose, it explores the capabilities of three reuse approaches (commercial off-the-shelf (COTS), set-based design, and patterns), and their ability to be linked with a model-based systems engineering (MBSE) framework.",2017
"Synergizing model-based systems engineering, modularity, and software container concepts to manage obsolescence","Abstract Costs to replace obsolete parts are estimated to exceed \$10 billion annually for military expenditures.1 Other industries experience high costs related to obsolete parts as well.2–5 Synergies between Model-Based Systems Engineering (MBSE) and modular design concepts should be leveraged to reduce those costs early in the design process. To date, obsolescence management, MBSE, and modularity have been studied, advanced, and presented in a mostly disjunct manner. Consequently, work to synergize these areas specifically to mitigate obsolescence impacts is lacking. The research presented herein illuminates that the untapped synergy at the nexus of obsolescence management, MBSE, and modular design can be leveraged to enhance strategic management of obsolescence. Borrowing from the modular software engineering “container” concept6, the MBSE container modeling approach presented provides systems engineers, architects, and designers with a novel method to influence the system design by minimizing the number of system modules affected by obsolescence. By applying this model-based strategic obsolescence management approach early in the system architecting and design stages, system engineering teams can reduce the associated complexity, lifecycle costs, and risk of obsolete parts replacement.",2021
Generic Model-Based Systems Engineering Methodology,"Abstract This paper presents a Generic Model-Based Systems Engineering (G-MBSE) approach based on an application of generic systems engineering principles. Firstly, these principles are defined, described and illustrated in more detail. Important artefacts are introduced that describe and characterise a system, e.g. system hierarchy, black box and white box system descriptions. Secondly, a generic systems engineering process is described within the context of a customised V-Model variant. This process is then augmented with a model-based validation/verification process to help reduce uncertainty and rework with the later design implementation. Ideally, model-based validation/verification should eliminate most of the deficiencies from, and confirm suitability of the solution/specification. Thirdly, some examples of typical artefacts required for a generic model-based implementation are presented, which have to be supported by a tool-based approach. Finally, an appraisal concludes feasibility of the proposed approach, ready for tool support.",2014
MBSE++ — Foundations for Extended Model-Based Systems Engineering Across System Lifecycle,"Abstract This paper presents an approach for next-generation model-based systems engineering across the system lifecycle, labelled MBSE++. This approach is based on the idea of a Total System Model that serves and evolves as the digital blueprint of a system through its lifecycle. The fundamental principles of MBSE++ are presented in this paper, including the use of decentralized and heterogeneous engineering models and repositories, spectrum of fine-grained model-based connections, unified representation of the system independent of the location of models, model transformations, comparisons, and synchronization to communicate between disciplines, and visualization and analytics for effective decision making. The motivation for each of the MBSE++ principles is presented, followed by a description of use cases. The use cases are exemplified using Syndeia, a MBE/MBSE platform developed by Intercax.",2016
Model-Based Systems Engineering Simulation Framework for Robot Grasping,"Abstract Constant rise in industrial usage of robots for commercial applications has led to the need for rapid, efficient, and reliable robotic system development processes. The idea of collaborative modeling and simulation provides different views to the stakeholders, enhancing the decision-making process towards design, development, and deployment. This paper 1) applies Model-Based Systems Engineering (MBSE) principles to a robot grasping system performing a simple pick and place task, 2) integrates Cameo Systems Modeler (CSM), CoppeliaSim robot simulator, and Gurobi Optimizer to facilitate and accelerate the system design process, and 3) describes a simulation-based Verification \& Validation (V\&V) framework and performs design space exploration. This is an effort to integrate tools to reduce the burden on system design, integration, and deployment of dexterous grasping and manipulation systems.",2022
Model-based systems engineering for life-sciences instrumentation development,"Abstract Next-generation genome sequencing machines and Point-of-Care (PoC) in vitro diagnostics devices are precursors of an emerging class of Cyber-Physical Systems (CPS), one that harnesses biomolecular-scale mechanisms to enable novel “wet-technology” applications in medicine, biotechnology, and environmental science. Although many such applications exist, testifying the importance of innovative life-sciences instrumentation, recent events have highlighted the difficulties that designing organizations face in their attempt to guarantee safety, reliability, and performance of this special class of CPS. New regulations and increasing competition pressure innovators to rethink their design and engineering practices, and to better address the above challenges. The pace of innovation will be determined by how organizations manage to ensure the satisfaction of aforementioned constraints while also streamlining product development, maintaining high cost-efficiency and shortening time-to-market. Model-Based Systems Engineering provides a valuable framework for addressing these challenges. In this paper, we demonstrate that existing and readily available model-based development frameworks can be adopted early in the life-sciences instrumentation design process. Such frameworks are specifically helpful in describing and characterizing CPS including elements of a biological nature both at the architectural and performance level. We present the SysML model of a smartphone-based PoC diagnostics system designed for detecting a particular molecular marker. By modeling components and behaviors spanning across the biological, physical-nonbiological, and computational domains, we were able to characterize the important systemic relations involved in the specification of our system's Limit of Detection. Our results illustrate the suitability of such an approach and call for further work toward formalisms enabling the formal verification of systems including biomolecular components.",2019
Using model-based systems engineering as a framework for improving test and evaluation activities,"Abstract Model-based systems engineering (MBSE) approaches are based on a paradigm shift from document-centric engineering to model-based engineering. Although MBSE methods are intended to apply across the entire system life cycle, one area that has not received much attention to date is the role of test and evaluation. Test and evaluation activities provide information that reduces the uncertainty about system performance, effectiveness, and suitability. This uncertainty reduction becomes particularly important within the context of defense systems, which can cost billions of dollars. This paper describes a methodology that uses an MBSE framework and Monte Carlo simulation to define uncertainty reduction goals for test planners to use in developing test strategies and detailed test designs for evaluating technical performance parameters. As tests are completed, physical models can be updated with test data and additional analyses conducted with combat models to determine if the system meets user requirements. The methodology is demonstrated through a simple case study involving a series of tests to predict the landing performance of an aircraft. ©2012 Wiley Periodicals, Inc. Syst Eng 16:",2013
10.1.2 Failure Analysis: Insights from Model-Based Systems Engineering,"Abstract Processes for system failure analysis (e.g., FMEA) are structured, well-documented, and supported by tools. Nevertheless, we hear complaints that FMEA work feels (1) too labor intensive to encourage engagement, (2) somewhat arbitrary in identifying issues, (3) overly sensitive to the skills and background of the performing team, and (4) not building enough confidence of fully identifying the risks of system failure. In fairness to experts in the process, perhaps such complaints come from those less experienced—but even so, we should care how to describe this process to encourage better technical and experience outcomes. This paper shows how Model-Based Systems Engineering (MBSE) answers these challenges by deeper and novel integration with requirements and design. Just as MBSE powered the requirements discovery process past its earlier, more subjective performance, so also can MBSE accelerate understanding and performance of failure risk analysis–as a discipline deeply connected within the SE process.",2010
A model-based systems engineering approach to critical infrastructure vulnerability assessment and decision analysis,"Abstract Securing critical infrastructure against attack presents significant challenges. As new infrastructure is built and existing infrastructure is maintained, a method to assess the vulnerabilities and support decision makers in determining the best use of security resources is needed. In response to this need, this research develops a methodology for performing vulnerability assessment and decision analysis of critical infrastructure using model-based systems engineering, an approach that has not been applied to this problem. The approach presented allows architects to link regulatory requirements, system architecture, subject matter expert opinion and attack vectors to a Department of Defense Architecture Framework (DoDAF)-based model that allows decision makers to evaluate system vulnerability and determine alternatives to securing their systems based on their budget constraints. The decision analysis is done using an integer linear program that is integrated with DoDAF to provide solutions for how to allocate scarce security resources. Securing an electrical substation is used as an illustrative case study to demonstrate the methodology. The case study shows that the method presented here can be used to answer key questions, for example, what security resources should a decision maker invest in based on their budget constraints? Results show that the modeling and analysis approach provides a means to effectively evaluate the infrastructure vulnerability and presents a set of security alternatives for decision makers to choose from, based on their vulnerabilities and budget profile.",2019
Transitioning the SWFTS Program Combat System Product Family from Traditional Document-Centric to Model-Based Systems Engineering,"ABSTRACT Over the past four years, the Submarine Warfare Federated Tactical Systems (SWFTS) Systems Engineering \& Integration (SE\&I) program has shifted from traditional document-centric systems engineering to a model-based systems engineering (MBSE) process for managing the evolution and support of the common combat system used by most submarines in the U.S. and Royal Australian Navies. At the beginning of this transition a pilot study established technical feasibility, and projected a 13\% reduction in the cost of processing a baseline if MBSE were applied to support the SWFTS system of systems baseline development process. Over the course of two years of development new modeling techniques were invented, and a large-scale system of systems model was designed, implemented, and populated. Now the transition to operations has begun. In early 2012 SWFTS SE\&I produced its first new generation of combat system interface baselines using MBSE. The technical foundation has been established, and the workforce transition is under way. Anticipated cost reductions are still a year away as the workforce ascends the learning curve, but the program is already seeing improvements in the quality and consistency of engineering products. This paper summarizes this document-centric to model-based SE transition, describes the accomplishments and observations to date, and describes the metrics being collected to quantify the achieved return on investment once the transition is complete.",2014
Evolving Model-Based Systems Engineering Ontologies and Structures,"Abstract Model-Based Systems Engineering (MBSE) is a mysterious concept that means many different things to different stakeholders. MBSE was envisioned to manage the increasing complexity within systems, by replacing traditional document-based system engineering with a model-based approach. However, more than a decade after MBSE was introduced, many systems engineering efforts still default to a “document-like view” rather than integrated, “virtual,” representation of the system. This paper suggests a revised definition for MBSE which supports system design and analysis, throughout all phases of the system lifecycle, and through the collection of modeling languages, model-based processes, structures, and presentation frameworks used to support the discipline of systems engineering in a model-based or model-driven context. To realize this definition, and an environment where the system is virtually represented, the long-sought ontology must be attained for better definition and structure within MBSE. This paper explores how current MBSE methods can be extended to include an ontology.",2018
Applicability of the diffusion of innovation theory to accelerate model-based systems engineering adoption,"Abstract Systems engineering (SE) is an interdisciplinary domain that can benefit from incorporating contributions from fields not typically associated with technical disciplines, including integrating relevant research from social sciences. The study of innovation has produced the diffusion of innovation theory, which identifies variables that affect the adoption rate of innovations. Of these variables, the perceived attributes of the innovation have been shown to have the most significant impact on the adoption rate of innovations. Shaping the innovation attributes of relative advantage, compatibility, complexity, trialability, and observability and how they are perceived can accelerate its adoption rate. This theory has the potential to accelerate the adoption rate of SE innovations. Model-based systems engineering (MBSE) is an SE innovation that, despite its benefits, has not been adopted generally. An evaluation of the attributes of MBSE as defined by the diffusion of innovation theory can aid in understanding its slow diffusion and inform methods to accelerate its adoption. Since there is some evidence to suggest that this theory is applicable to SE and MBSE, additional research should be conducted to determine the best way to utilize its principles.",2022
Synergistic Model-Based Systems Engineering with SysML and OPM,"Abstract Model-Based Systems Engineering (MBSE) is emerging as a pivotal paradigm, placing modeling as the underlying activity of systems' and products' lifecycle management. SysML is the OMG standard for MBSE, while Object-Process Methodology (OPM), one of the six leading INCOSE MBSE methodologies, is in the process of becoming ISO standard and the basis for model-based standards authoring. OPM and SysML complement each other, as each is especially suited for different lifecycle stages: OPM, which is simple and holistic, is most fit for the early conceptual stages, whereas SysML, which provides for expressing details, is good for later design stages. The tutorial introduces the principles, syntax, and semantics of OPM and SysML, highlighting their commonalities and differences, and showing how to use both in ways that promote synergy and improve critical system features, notably clarity, consistency, and completeness. The resulting model is an indispensible blueprint that puts all the stakeholders on the same page across the system lifecycle span.",2011
Essential Model-Based Systems Engineering — Applied and Practical,"Abstract Combine the key concepts of MBSE with the essentials of their practical application. This tutorial is designed help you leverage model-based techniques to better meet the engineering challenges of analyzing stakeholder needs and defining system solutions. The tutorial uses a practical top-down system analysis and design example and exercise to explore the application of layered model-based systems engineering (MBSE) to system definition challenges. It examines the range of views available to the systems engineer for understanding and communicating design choices and provides a practical introduction to constructing the model and generating each representation. As the analysis and design advances, the engineer will use a wide variety of views drawn from traditional and SysML representations to portray aspects of the model and gain understanding of stakeholder concerns and the design choices to be made. This tutorial works for both new and experienced systems engineers, capability analysts and others working on an integrated project team, and program/project/capability managers. While a basic understanding of the systems engineering process is assumed, the MBSE framework and approach provide the foundation for those not experienced in systems engineering. The detailed discussion of MBSE methodology and model representations including SysML and traditional SE products delivers value for all but the most experienced model-based systems analysts and engineers. This is an MBSE methods, models, and representations tutorial, not a tool tutorial. The focus is on the practical application of essential MBSE for project success. The concepts taught and methods shared are applicable regardless of the systems engineering tools the attendee may choose.",2013
Model-Based Systems Engineering Pathfinder: Informing the Next Steps,"Abstract In 2016, the NASA Engineering and Safety Center established a model-based systems engineering (MBSE) Pathfinder. The primary motivations for establishing the MBSE Pathfinder were to advance the Agency's applications of MBSE and capture lessons-learned to inform the next steps. The MBSE Pathfinder had four teams working in parallel for eight months on different topics of interest to NASA. The teams were encouraged to learn, and use creativity and innovation in their system modeling. The results were captured via reports, webinars, and a knowledge capture meeting. The approach taken for the MBSE Pathfinder was very successful in providing a number of lessons-learned for NASA and for other organizations considering MBSE or pathfinder efforts, and in building a very strong and collaborative user community.",2017
Model-Based Systems Engineering as an Enabler for Regulatory Design Compliance,"Abstract Whether working in the FDA regulated medical field or explosive industrial environments, using model-based systems engineering provides the confidence, traceability and structure to meet regulatory requirements. In addition, the authors propose the methodology to be a means to optimize schedule predictability and development of the most appropriate products. In this paper, the systems engineering process being employed is briefly described and two case studies are explored that make the case for MBSE as a key enabler of efficient design to complex regulations.",2012
7.2.2 Advancing Model-Based Systems Engineering at a Small Space Agency,"Abstract This paper reviews recent and current efforts to implement Model-Based Systems Engineering at the Canadian Space Agency. A mission under concept development is being used both for demonstration purposes and also for real process design with SysML. Several support and bridge tools have been developed to help with key process issues. A number of technology issues have come out of our work, leading to a wish list of improvements we would like to see. Also, we have been dealing with organizational resistance that is preventing a wider acceptance of MBSE.",2008
Maestro – A model-based systems engineering environment for complex electronic systems,"Abstract In this paper we present Maestro, a model-based systems engineering (MBSE) environment for design and simulation of complex electronic systems using Orchestra—a simulation tool developed at Sandia National Laboratories. Maestro is deployed as a plugin for MagicDraw and uses Orchestra domain-specific language (DSL) which is based on SysML. Maestro enables a model-based design and analysis approach that replaces the traditional document-based systems engineering process. It provides a unified graphical modeling environment to domain experts who have had to depend on drawing tools for defining system architecture and manual transcription of system topology in creating complex simulation models.",2012
Documents are an Essential Part of Model Based Systems Engineering,"Abstract Model Based Systems Engineering (MBSE) existed long before the recent emphasis on its merits compared with traditional document-based methods. Advocates disparage documents per se, failing to recognise their importance as information artefacts essential to MBSE. While the digital data model may be the ‘source of truth’, stakeholders view, verify, and use the model via screen-rendered artefacts, which if made permanent to any degree, constitutes ‘printing’ a document. This paper examines the nature and use of documents, both paper and electronic, in traditional and model-based methodologies, and identifies the evidentiary qualities of paper-based documents required for legal acceptance of electronic documents. Document templates are used to initially structure the model schema, populate the model, and progressively auto-generate output documents as complex views on the developed system model. The essential need for documents as information artefacts in gathering, developing, maintaining and reporting the ‘truth’ in a model-based (and model-centric) paradigm is demonstrated.",2012
Model-based-systems-engineering for conceptual design: An integrative approach,"Abstract Conceptual-Design is an early development phase, where innovation and creativeness shape the future system/product. Model-Based-Conceptual-Design (MBCD) attempts to use best-practices of Model-Based-Systems-Engineering (MBSE) to gain the envisioned benefits of model connectivity. Using MBSE supporting tools can transform Conceptual-Design into a digital-engineered process but may impede creativity and innovation. Concurrently, the design domain offers specific methods and tools for innovative Conceptual-Design. In the current study, we explore an existing Conceptual-Design framework and offer MBSE interpretation and tools extensions needed for its digital implementation. Through such exploration we highlight MBCD specific insights and discuss modeling-innovation interrelations. The implementation was accomplished using a domain-specific enabling software package on top of a market-accepted UML/SysML platform, extending the language definitions, where appropriate. The framework guided extensions allow generation of innovative bottom-up alternatives, solution integration, and solutions’ comparison. The use of modeling is shown to offer clearer process definition, specific methods assistance, and alternative ranking—both manually and automatically. Consequently, MBCD is accomplished, which supports innovation, while being digitally connected to full-scale-development models and the organizational assets at large. Through integration into the orderly Systems-Engineering process, traceability is maintained, and repeated iterations are supported, where conceptual decisions may be revisited. Additionally, through the introduction of an assets’ catalog, cross-organizational knowledge sharing is accomplished. The paper presents samples of the extensions, using a simplified example of technology design for Future Firefighting. The value of incorporating Conceptual-Design specific methodology and tools is evaluated through feedback from multiple domain experts. Discussion and future research directions are offered.",1970
2.3.2 Model-Based Systems Engineering And Object-Oriented Software Engineering: An Integrated Approach,"ABSTRACT In this paper, we explore the interface between model-based systems engineering (MBSE) and object-oriented software engineering (OOSE). We show that the context, behavior, and structure models captured by the systems engineering process are precisely those inputs needed to start the object-oriented software engineering process. Conversely, the object-oriented architecture generated by the software engineering process is needed by systems engineering to perform object-based rather than function-based architecture synthesis.",1998
Insights from Large Scale Model Based Systems Engineering at Boeing,"Abstract Development and design of increasingly integrated aerospace systems, by globally distributed engineering teams, presents challenges in bounding the effort required to produce, integrate, manage and validate the large and detailed accompanying specification datasets. Model Based Systems Engineering has become essential in allowing Boeing to meet these challenges. Through verification and validation of sufficiently detailed large scale system architecture models, Boeing has been successful in accelerating data release schedules, while at the same time eliminating specification errors that result in costly rework. In the process of developing these large scale system architecture models, Boeing has acquired some insights into what is required to effectively develop, deploy and manage an MBSE environment, and these insights are detailed in this paper. Additionally, recommendations are made as to how standards organization, the MBSE tool industry, and academia could better support the MBSE community.",2016
Property-Model Methodology: A Model-Based Systems Engineering Approach Using VHDL-AMS,"ABSTRACT The purpose of this paper is to contribute to the definition of a Model Based Systems Engineering (MBSE) approach which would meet the objective laid out by INCOSE in its Systems Engineering Vision 2020. After briefly presenting the tools used and summarizing a state-of-the-art system design process, we show how it is possible to define property-based requirements (PBRs) as features of specification models and to apply the design process to this specification model in order to develop design models. Then, we show how it is possible to perform a simulation-based verification process of design models in order to detect and remove design errors, to substitute the initial requirements of the system with derived requirements gradually assigned to the subentities of the system, to perform a simulation-based validation process of specification models in order to detect and remove specification errors. Additionally, we show how we define safety PBRs to prevent the consequences of failure conditions and verify mitigation means, such as redundancy or dissimilarity, introduced in design models to meet these safety PBRs. Thus, we consider that our proposals improve MBSE current practices making them safer for the development of present and future systems.",2014
2.5.1 Functional Architecture as the Core of Model-Based Systems Engineering,"Abstract The application of functional architecture from a model-based systems engineering process is examined throughout the product lifecycle. It is shown that focusing on the functionality of the system, in concert with the relationships to other elements of an integrated architecture, is a rich source of information for analyzing, developing, integrating, verifying, operating, and supporting a system. Lessons learned and examples from various product domains are provided.",2013
Restructuring Requirements Analysis Using Model-Based Systems Engineering and Agile Systems Engineering,"ABSTRACT In 2009, the US Army initiated a large acquisition program to modernize one of its systems. Due to circumstances, the program had to accelerate the system requirements review (SRR) milestone from eighteen months to five months. This paper describes the new agile requirements analysis process used, which accomplished this seventy percent schedule reduction. The process consisted of using model-based systems engineering (MBSE), storyboarding techniques, collaborative daily analysis of system and subsystems requirements, and the iterative and incremental delivery of requirements which engineers used for the SRR. The paper focuses on the practical application of an agile systems engineering requirements analysis and its benefits to manage caprice, uncertainty, risk, variation, and evolution (CURVE) in a large US Department of Defense (DoD) program while reducing the deployment time.",2018
Model-Based Systems Engineering For Project Success: The Complete Process,"Abstract This basic tutorial identifies the elements and benefits of a complete, proven model-based system engineering process, and demonstrates its tailorability and value for project success using vignettes from an information management system and a sample System of Systems (SoS) application. The tutorial illustrates how the model-based system engineering process supports both document-driven and model-based paradigms, whether in top-down, middle-out, or reverse engineering environments. It discusses how to know when each element of the process has been completed, and how to develop and validate functional and physical architectures using executable architectures. The requirement for concurrent engineering, the onion model, and synchronization of models and data are presented. The participants will be introduced to a flexible system engineering process suitable for system development tasks across the complexity spectrum. In addition to the process description, the tutorial will include a sample solution to illustrate the recommended techniques, views, completion conditions, and products of an MBSE system development methodology. It will also include examples of the development of graphical views commonly used by practitioners of DoDAF and SysML approaches. This tutorial is focused on highlighting how the use of model-based systems engineering can meet the government requirements for delivering architecture framework products while allowing the engineering organizations (industry and government) to successfully perform the systems engineering required to develop an executable design.",2010
Model-Based Systems Engineering for Aero Gas Turbine Engine Subsystems,"Abstract Enhanced complexity of modern systems often brings challenges in achieving performance, cost and time targets during development. Aero gas turbine engines are highly complex systems involving several modules and subsystems. Full Authority Digital Electronic Controller (FADEC) of aero engine is a very complex subsystem by itself, encompassing hardware and software to control the engine during all phases of operation. The current paper outlines an approach for system-level design of FADEC using model-based systems engineering (MBSE). FADEC is described comprehensively and consistently using SysML language. This includes defining the requirements of FADEC, importing them into SysML model and analysing these requirements, proposing multiple operations including the flow of control and data to fulfil these requirements, proposing a high-level system architecture, modelling the interaction between subsystems, and verifying system performance through simulation. This model is expected to help individual design teams in development of the FADEC meeting the project goals.",2016
Systems Engineering a Model Based Systems Engineering Tool Suite: The Boeing Approach,"Abstract Given the scope of some of the large scale system architecture models created at The Boeing Company, it is currently necessary for Boeing to customize its own Model Based Systems Engineering (MBSE) tool suites from Commercial-Off-The-Shelf (COTS) platforms to accommodate these models. Boeing successfully applies a modified set of Systems Engineering (SE) architectures to specify the required MBSE tool suites and also has developed a unique SE skill set for engineers creating these specifications and developing and deploying the subsequent tool suites. Furthermore, Boeing uses an MBSE tool suite to create these tool suite specifications as models, and also manages the configuration of the MBSE tool suite within the models.",2016
9.2.3 A Sublayer Generation of System Architecture Using the Model Based Systems Engineering Tool,"Abstract This paper describes a set of practical methods and templates developed to practice the Model Based Systems Engineering (MBSE), a computer-aided systems engineering, in an efficient manner. It also shows the steps to build more credible data model. The scope of the work includes the systems engineering engine process which represents the requirements analysis, functional analysis/allocation, and synthesis. This work focuses on the functional architecture generation. The SE engine process is tailored to accommodate the specific needs encountered from practical applications of the MBSE. The outcome of the work includes the templates for requirement and scenario description methods essential to construct MBSE database. To ensure the model credibility, the study presents the use of belief criteria.",2002
Update on the Model Based Systems Engineering on the Europa Mission Concept Study,"Abstract In May 2012 the Europa study team delivered to NASA the final reports on three distinct concepts for exploring Europa on a limited budget. The depth and quality of these reports have been widely praised by independent reviewers as well as by our sponsor. The application of Model Based Systems Engineering (MBSE) techniques is credited with enabling the team to study three quite different mission concepts for the resources normally sufficient to study only one or two. The Europa MBSE infusion itself has been awarded the NASA Systems Engineering Excellence Award in 2012. The Europa team is now preparing for its Mission Concept Review and has reaffirmed and strengthened the MBSE application. Significant new capabilities have been completed, most importantly the Powered Equipment List (PEL) and the computation of scenario-based power and energy margins. This paper provides an update on the continued successful application of MBSE in the dynamic environment of early mission formulation, the significant new results produced and several additional lessons learned in the process.",2013
Interface Management for a NASA Flight Project using Model-Based Systems Engineering (MBSE),"Abstract The goal of interface management is to identify, define, control, and verify interfaces; ensure compatibility; provide an efficient system development; be on time and within budget; while meeting stakeholder requirements. This paper will present a successful seven-step approach to interface management used in several prior NASA flight projects. The seven-step approach using Model Based Systems Engineering will be illustrated by interface examples from the Materials International Space Station Experiment-X (MISSE-X) project. The MISSE-X was being developed as an International Space Station (ISS) external platform for space environmental studies, designed to advance the technology readiness of materials and devices critical for future space exploration. Emphasis will be given to best practices covering key areas such as interface definition; writing good interface requirements; utilizing interface working groups; developing and controlling interface documents; handling interface agreements; the use of shadow documents; and the importance of interface requirement ownership, interface verification, and product transition.",2016
Model-Based Systems Engineering for complex rail transport systems – A case study,"Abstract The replacement of the signalling and control systems on Sydney's critical heavy-rail network infrastructure is envisaged to take years and affect many systems across the operational railway. Systems Engineering has been adopted early in the system lifecycle to manage the complexity and risks in a rigorous and consistent manner. This paper aims to document the real-life application of a Model-Based Systems Engineering (MBSE) methodology in the conceptual design stage on Transport for New South Wales’ Digital Systems Program. It illustrates how this methodology was applied to capture the operational and maintenance concepts, derive the architecture and interfaces and guide resulting requirements. It provides valuable lessons-learnt for the acquiring organisation on the deployment of MBSE, its benefits and lessons learnt.",2020
Artificial Intelligence Capabilities for Effective Model-Based Systems Engineering: A Vision Paper,"Abstract Both Model-Based Systems Engineering (MBSE) and Artificial Intelligence (AI) have been challenged for their deployment in real-world applications. Although MBSE remains the focal point of any systems engineering activities, its adoption still faces significant hurdles to demonstrate its return on investment. Recently, AI has received intensive attention, and its applications made their way into our daily life products. From an industrial perspective, within the context of the design and development of mechatronic systems, there is a lack of coherent foundation to enable the application of AI in MBSE. This vision paper discusses the role of AI in solving a set of MBSE challenges. As a result, we contribute by describing the actual MBSE adoption challenges and follow up with the characterization of the capabilities of AI in solving these challenges. With this initial work, we aim to trigger both AI and MBSE communities for further research discussions and industrial applications to help in achieving an intelligent design and development environment.",2022
Prioritization of Best Practices in the Implementation of Model-Based Systems Engineering,"Abstract Model-based systems engineering (MBSE) is a form of systems engineering that is reported to lead to many benefits; yet few companies have successfully implemented MBSE, partly due to a predominance of guidance for adoption that does not recognize differences in organizational context. This paper uses a combination of a literature review and semi-structured interviews to evaluate the hypothesis that the applicability of best practices varies on a case-by-case basis due to factors such as company size, industry, and location. A list of best practices is compiled from existing works and validated with interviews, ultimately resulting in a more complete and accurate list of best practices, along with a recommendation that each company should uniquely assess their circumstances and prioritize this list of best practices accordingly. The findings presented in this paper provide improved guidance towards the use of best practices for successful MBSE implementation.",2022
Standard Verification using Model Based Systems Engineering,"Abstract Systems engineering has embraced MBSE and other digital engineering techniques that have been in use in software engineering for decades. One area that MBSE lacks is automation of verification and validation of requirements for standards. System models require rework to model standards and in the case of reuse, extensive verification to ensure they have been implemented properly. SysML can utilize architectural constraints for system models in a similar way to how software engineers use architectural constraints in software architectures. Architectural constraints can be used to verify conformance with architectural decisions and standard implementation. This tool can be applied to automated standard compliance verification using query functions for analysis or validation suites for fast verification of architectural constraints. This technique has been applied to larger Reference architectures with success in finding errors architecture design as well.",2022
A MODEL-BASED SYSTEMS ENGINEERING APPROACH TO RESILIENCY ANALYSIS OF AN ELECTRICAL DISTRIBUTION FACILITY,"ABSTRACT This article describes a model-based systems engineering (MBSE) approach to cyberattack resilience modeling for an electrical power substation and demonstrates that (1) resiliency can be quantitatively characterized to enable design tradeoffs and (2) the analysis can be incorporated into a Systems Modeling Language (SysML) model to enable it to be incorporated into an MBSE development effort. The resiliency analytical model described here using the Markov model, derives from previous work on survivability analysis. For the system under analysis, it showed that the most important performance parameter for cyber resilience is propagation resistance followed by an attack rate mitigation. However, this applicability of this result is limited to this particular system with the parameter values described below. What is of more general importance is the value of such modeling, that when combined with SysML parametric analysis capability and the differential equation solvers in tools such as Matlab, has promise in improving resiliency with respect to cyber threats in the national energy.",2016
A Conceptual Model-Based Systems Engineering Method for Creating Secure Cyber-Physical Systems,"Abstract The Air Traffic Control industry is being increasingly exposed to rising levels of risk, as criminals and cyber-attackers look to exploit system vulnerabilities. Air Navigation Service Providers become more demanding regarding cybersecurity concerns in the products they acquire. Consequently, systems engineers need to consider cyber security concerns early in their system's development life cycle. Model-Based Systems Engineering methodologies are widely used to manage complex engineering projects in terms of system requirements, design, analysis, verification, and validation activities, leaving cyber security aspects aside. This paper presents a conceptual solution of a model-based security method that aims to enable systems engineers to perform threat modeling analysis of cyber-physical systems early and incorporate mitigation strategies into the system design, thereby reducing the cyber-physical system's overall security-related risks. Based on a real-life case study the method will be validated later during execution period from Jan. – May 2022.",2022
General Modeling Language to Support Model-based Systems Engineering Formalisms (Part 1),"Abstract Model-based systems engineering (MBSE) has been proposed for systems engineering (SE) whereby modeling approaches have been developed to support formalisms of system artifacts. By using traditional MBSE approaches, these formalisms are described by different languages; however, the use of different tools for such languages leads to gaps which result in integration difficulties for various system engineering product views, such as the requirements, architecture, and others. In this study, a textual modeling language is developed based on a graph, object, point, property, role, and relationship approach, known as “Karma,” to formalize models and meta-models. Its main goal is to construct different MBSE languages and their models, and to formalize the model-transformation and code-generation processes during the entire lifecycle. Based on the Karma language, an MBSE tool is developed to formalize the entire SE approach of products with the use of models, and to support automated model transformation for architecture-driven and code-generation schemes (introduced in Part 2 of this paper series). Finally, we evaluate the feasibility of the Karma language with our developed tool MetaGraph with an example which is based on the use of an auto-braking case in an autonomously driven system.",2020
Comparative analysis of a model-based systems engineering approach to a traditional systems engineering approach for architecting a robotic space system through knowledge categorization,"Abstract This study compares the types and quantities of knowledge that are captured by a model-based systems engineering (MBSE) approach and a traditional architecting approach to measure the benefits of the MBSE approach in managing the complexity of a robotic space system. The MBSE approach was implemented with Cameo Systems Modeler using Systems Modeling Language (SysML) and applied to architecting an orbiting sample Capture and Orient Module (COM) system concept for a Capture, Containment, and Return System payload concept for potential Mars Sample Return. An architecture framework was established, covering system, subsystem, and assembly levels, along with structure, behavior, data, and requirements perspectives. The COM system architecture was captured in parallel using both the MBSE and non-MBSE approaches in order to provide a side-by-side comparison of the approaches. The approaches were evaluated based on how well each represented the information content of the COM system architecture. A total of 4389 knowledge elements were classified using the Revised Bloom's Taxonomy knowledge dimension and used to quantitatively compare the two approaches. The MBSE approach more completely captured architectural knowledge than the non-MBSE approach. Limitations to the SysML-based MBSE approach were also identified, including its ability to fully represent certain high-level conceptual, procedural, and metacognitive knowledge such as design principles, design approaches and rationales, risks, development strategies and rationales, organizational core competencies, and requirement verification methods. The overall results demonstrate the benefits of MBSE in managing the complexity of robotic space systems and strengthen the case for adopting MBSE within the systems engineering community.",2021
Applying Model-Based Systems Engineering Methods to a Novel Shared Systems Simulation Methodology,"Abstract The need to develop increasingly complex, integrated systems and multi-domain systems-of-systems is initiating a transformation within the discipline of systems engineering. The critical trends of increasing interconnectivity, compressed development times, growing cybersecurity concerns, and a rapidly changing workforce are driving current systems engineering practices into obsolescence. Model-Based Systems Engineering (MBSE) is a formalized approach to systems engineering that uses models as an integral component of a system's technical definition with the objective of enhancing communication through rigor and precision and managing system complexity. This paper discusses the application of MBSE methods to the definition of a shared systems architecture and the development of novel methodologies for extending the model-based approach from the system definition space into the system simulation and analysis domain. Approaches for interface management of design properties between a model-based architecture and system simulation will be reviewed, with the effectiveness of each approach discussed.",2022
Conducting a Model Based Systems Engineering Tool Trade Study Using a Systems Engineering Approach,"Abstract Evaluating and choosing a comprehensive Commercial-Off-The-Shelf (COTS) platform to serve as the basis for a deployable large scale Model Based Systems Engineering (MBSE) tool suite is a challenging task with many factors to take into account. Applying a Systems Engineering approach to the problem gives a highly useful roadmap for choosing an effective solution. Boeing evaluated 25 candidate COTS platforms against end users processes and accompanying business requirements that were used to identify and specify the desired tool suite functionality, desired behavior, and design constraints. Design constraints included a range of considerations from scalability concerns to implementation specific needs. This paper outline the criteria against which the candidates solutions were evaluated and the results of the evaluations.",2017
Exploring and managing the complexity of large infrastructure projects with network theory and model-based systems engineering—The example of radioactive waste disposal,"Abstract Given that model-based systems engineering (MBSE) captures the structure and behavior of an engineered system in an overarching system model, MBSE appears to be a promising approach to managing large infrastructure projects (LIPs). However, it is not apparent how to most appropriately organize the associated system model—and hence the infrastructure project itself. Furthermore, MBSE may today not be readily accepted by the civil engineering industry. In this research, a hypothetical project for the geological disposal of radioactive waste is taken as an example of an LIP and initial system models of the entire disposal project are created. Furthermore, a network representation of the project is generated and examined with network theory. Based on the results, different project organizations are synthesized and evaluated. Eventually, the initial system models are updated to accommodate the most suitable organization according to the network analysis results. In addition, the perception of, and attitude toward MBSE is assessed by means of a cross-sectional survey in a civil engineering company. The generation of system models of LIPs is found to be straightforward. Network theory is able to unveil the complex structure of LIPs in order to identify the most suitable way to organize them and the associated system models. The survey results suggest that MBSE may find broad acceptance in the civil engineering industry.",2020
11.2.1 Requirements Statements Are Transfer Functions: An Insight from Model-Based Systems Engineering,"Abstract Traditional systems engineering pays attention to careful composition of prose requirements statements. Even so, prose appears less than what is needed to advance the art of systems engineering into a theoretically-based engineering discipline comparable to Electrical, Mechanical, or Chemical Engineering. Ask three people to read a set of prose requirements statements, and a universal experience is that there will be three different impressions of their meaning. The rise of Model-Based Systems Engineering might suggest the demise of prose requirements, but we argue otherwise. This paper shows how prose requirements can be productively embedded in and a valued formal part of requirements models. This leads to the practice-impacting insight that requirements statements can be non-linear extensions of linear transfer functions, shows how their ambiguity can be further reduced using ordinary language, how their completeness or overlap more easily audited, and how they can be “understood” more completely by engineering tools.",2005
Semantic Model-based Systems Engineering based on KARMA: A Research and Practice Roadmap 2025,"Abstract Model-based Systems Engineering is proposed as a graphical approach to support for-malization of system artifacts across system lifecycle based on models since 1993. The previous motivation of graphical specification is to provide a unified graphical description on the perspective of systems engineering in order to formalize system architectural views, to promote communications among stakeholders and to support system analysis and verification. However, when different modeling tools are developed based on such graphical specifications, model and data interoperability across modeling tools is the biggest challenge faced by the tool venders and MBSE practitioners. Thus, semantic specification is proposed again to enhance data interoperability, such as SysML 2.0 as a possible solution. In this paper, we propose a new semantic MBSE language and framework aiming to support complex system development using a semantic two-core mechanism: 1) KARMA language and 2) Industrial Ontologies Foundry (IOF) SE and MBSE ontology. Then, we introduce the KARMA Roadmap 2025 including technical vision, organizational views and standardization. A new KARMA open-source modeling environment is planned to being created in order to provide MBSE application for more industrial practitioners.",2022
Plug-and-Play Adaptive Approach to Integrating Model-Based Systems Engineering Concepts into Academic Curriculum,"Abstract Model-based Systems Engineering (MBSE) is coveted for improving productivity and product quality. However, adoption is slow because the workforce lacks training. Therefore, a group of MBSE experts at an R-1 university developed a series of MBSE online learning modules that can be integrated into existing courses. Rather than adding courses to engineering programs, this project presents a “plug-and-play” adaptive approach to implementing new topics into existing courses. Faculty can select elements from the modules that best fit their courses and their students' learning needs. To evaluate the effectiveness of the approach and content, parts of the first MBSE module were incorporated in a graduate level engineering course. Surveys and descriptive analysis revealed students' learning experiences and feedback (n = 81). The research findings suggest students had positive experiences with the content and their interest in MBSE increased. Further module design improvement is included and discussed in the paper.",2022
Application of natural language processing for systematic requirement management in model-based systems engineering,"Abstract Today, manufacturing companies are confronted with an enormous number of product requirements, which increasingly demand an interaction of the different engineering disciplines mechanics, electric/electronic (E/E) and software. At the same time, companies must realize a shorter time to market, lower costs and higher quality. As a result, development methods are required, which support the fast, flexible and structured transfer of numerous requirements into products despite this increased complexity in processes and products. In this context, Model-Based Systems Engineering (MBSE) takes advantage of the increasing digitalization of products and development processes. It provides structures and processes for the efficient processing of requirements by fostering the collaboration between different engineering disciplines and enabling early validation of the product. In this context, it is often challenging that requirements are not structured, but rather unstructured and heterogeneous. For the processing within MBSE, text-based requirements today usually still have to be prepared with high manual effort. This paper presents a methodology that supports the transformation of unstructured and heterogeneous text-based requirements using Natural Language Processing in order to prepare them for further processing within MBSE.",2021
Application of the Model Based Systems Engineering Approach for Modern Warship Design,"Abstract Modern surface combatants (hereafter considered as “systems-of-interest”) must accomplish a wide variety of missions, ranging from merely military, patrolling and constabulary roles to civil defense ones: the operational scenarios are much more complex than just a few years ago, and require that the whole warship is defined through deep configuration analyses, capable of simulating the effective theatres and leading towards the definition of the best fit for purpose solutions. This paper describes the Model Based Systems Engineering (MBSE) approach employed by Fincantieri for the definition and analysis of the whole warship level architecture, starting from mission analyses, and generating NATO Architecture Framework (NAF) based engineering views to describe the response provided by the system-of-interest, represented – in this specific case – by the new first line Anti-Submarine Warfare (ASW) surface combat units for Royal Australian Navy's (RAN) SEA5000 program. Many benefits derive from the implementation of the MBSE/NAF approach (such as the continuous traceability among the different domains of the architecture, the optimization of communications between customer and supplier, and a solid support for the verification of the Whole Warship performance), as discussed in the following chapters, and summarized in the conclusions. The system offered to RAN strictly derives from a consolidated system of success, which is currently employed by the Italian Navy (Marina Militare Italiana – MMI) in inter-forces NATO missions: Fincantieri has in fact identified the Italian FREMM (European Multi-Mission Frigate; Italian: FRegata Europea Multi-Missione) ASW class frigate as the optimal reference ship, which can be suitably tuned to achieve the goals intended by the customer in the new operational environment.",2018
BRIDGING THE GAP BETWEEN MODEL-BASED SYSTEMS ENGINEERING METHODOLOGIES AND THEIR EFFECTIVE PRACTICE – A CASE STUDY ON NUCLEAR POWER PLANTS SYSTEMS ENGINEERING,"ABSTRACT This article presents a case study on applying model-based systems engineering (MBSE) methodologies under real-life conditions. We present how engineers tailored existing MBSE methods and tools to both address the complexity factors of nuclear power plants engineering, and to contribute to the comprehensiveness of the design and safety assessment. We also provide feedback on the application of MBSE approaches and their key benefits on projects’ execution.",2018
3.3.2 Re-Use Libraries Leveraging Model-Based Systems Engineering to greatly increase engineering productivity,"Abstract The prevalence of model-based systems engineering tools has created a once-in-a-generation opportunity for engineering organizations to dramatically improve productivity by re-using common design elements when creating new product variants. To recognize these engineering productivity improvements, a library of model-based reusable elements can incorporate key product design structures encompassing requirements, architecture, behavior, interfaces and tests. Unfortunately, simply using a systems model does not translate into reusability of those designs on another programs. The author's previous studies have shown real cost savings when deploying re-use libraries: For example, when re-using just common requirements defined on previous programs, organizations save as much as 40\% of each systems engineer's time with a return on investment exceeding of 328\%. This paper describes the key considerations and basic process of building a library of model-based re-usable elements and explores the investment required and utility of such a library.",2014
Integrating a Model-Based Systems Engineering and Model-Based Product Support Approach for Affordable System Sustainment,"Abstract Systems engineers and product support managers often approach building the “best” or “right” system from different perspectives. Systems engineers focus on technical solutions that meet system requirements and maximize capabilities, while product support managers focus on optimized sparing levels and reduced supply chain delays. These tendencies lead to design decisions that do not optimize system readiness over the system life cycle. As programs evolve to deliver systems in today's budget constrained environment, several are adopting model-based engineering approaches. The emphasis in acquisition is often to capture system requirements and architecture definition through a model-based systems engineering (MBSE) approach. There is a significant opportunity to integrate model-based product support (MBPS) practices with MBSE through concept and development to enable a decision support capability that effects optimized sustainment costs and demonstrates impacts on system readiness in design trades.",2018
Integrating Safety Analysis into Model-Based Systems Engineering for Aircraft Systems: A Literature Review and Methodology Proposal,"Abstract Model-Based Systems Engineering (MBSE) has become increasingly popular within the aircraft industry in recent years. However, this model-based approach presents a challenge as traditional safety analysis practices are unable to keep up, resulting in inconsistency between the system and safety domains. This paper proposes a methodology tailored towards aircraft systems that addresses this issue by integrating safety analysis into MBSE. This is achieved by extending the Systems Modeling Language (SysML) profile to account for safety data in the system model and utilizing an Application Programming Interface (API) to automate the generation of safety analysis artefacts. The proposed methodology also allows for requirements management integration to increase the efficiency of the system development process.",2021
A Roadmap for Advancing the State of the Practice of Model Based Systems Engineering for Government Acquisition,"Abstract Model-Based Systems Engineering (MBSE) is an emerging paradigm for improving the practice of systems engineering, in which integrated sets of digital system models serve as the focal point for knowledge management, technical communication, and data interchange. Adoption of MBSE by Government prime contractors has grown significantly, often motivated by the drive for improved efficiency from the commercial elements of their businesses. Interest in adopting MBSE on the Government side of that interface has also grown, motivated not only by desire for improved efficiency but also by the need for a better approach for managing the complexity of those Government mission enterprises. This roadmap was created as an initial attempt at establishing a shared vision to drive discussions among the Government acquisition community—and the associated community of prime contractors, systems engineering and integration (SE\&I) contractors, and Federally Funded Research and Development Centers (FFRDC)—to drive investment and collaboration to improve the state of the practice of MBSE within this community.",2019
4.5.3 Model-Based Systems Engineering in an Integrated Environment,"Abstract Model-based system engineering (MBSE) can be accomplished in a variety of ways to develop high quality integrated systems. Certain organizational and system development characteristics render different approaches to MBSE attractive when compared with using SysML. The paper outlines the key characteristics that contribute to successful MBSE project development, and uses those characteristics to contrast approaches based on (a) traditional methods without integrated modeling, (b) SysML using a UML tool such as IBM® Rational® Rhapsody®, and (c) traditional methods using an integrated data environment such as provided by Siemens Teamcenter® for System Engineering (TcSE). An integrated environment provides the opportunity to document the system definition consistently and aid in performing trades and analyses throughout the product lifecycle, starting with abstract ideas and concepts and continuing until detailed physical architecture elements are determined and verified. Such an approach enables consistency between left-side-of-the-V activities and right-side-of the-V efforts, and also enables measuring the consistency and completeness of the data.",2012
"2.1.1 Feelings and Physics: Emotional, Psychological, and Other Soft Human Requirements, by Model-Based Systems Engineering","Abstract Traditionally, engineering encourages requirements statements that are objective, testable, quantitative, atomic descriptions of system technical behavior. But what about “soft” requirements? When products deliver psychologically or emotionally-based human experiences, subjective descriptions may frustrate engineers. This challenge is important for products appealing to senses of style, enjoyment, fulfillment, stimulation, power, safety, awareness, comfort, or similar emotional or psychological factors. Automobiles, buildings, consumer products, packaging, graphic user interfaces, airline passenger compartments and flight decks, and hospital equipment provide typical examples. This paper shows how Model-Based Systems Engineering helps solve three related problems: (1) integrating models of “soft” human experience with hard technical product requirements; (2) describing how to score traditional “hard” technology products in terms of “fuzzier” business and competitive marketplace issues; and (3) coordinating marketing communication and promotion with the design process. The resulting framework integrates the diverse perspectives of engineers, stylists, industrial designers, human factors experts, and marketing professionals.",2006
Developing a Human Performance Model Based Systems Engineering System Architecture (MBSE-SA) for Defense Applications,"Abstract The military has limited means to objectively evaluate soldier and squad performance, leading to sub-optimal operational, training, and acquisition decisions. Part of this limitation stems from the fact that the ability to monitor, predict, and enhance soldier and squad performance is a complex System of Systems (SoS) undertaking. To address this integration challenge, we developed a comprehensive conceptual framework that maps mission-level success to measures of task effectiveness and human performance that quantify the impact of emerging technologies and interventions. In addition, by leveraging lessons learned from a previous effort that developed a Wearables MBSE system architecture (MBSE-SA) and methodology for military health monitoring systems, we developed a Human Performance MBSE-SA to capture and apply the conceptual framework, which provides the foundation for several system-level and program-level analyses, including gap identification. This paper presents the Human Performance MBSE-SA and an illustration of its utility in showing the connections among ongoing military research efforts, strategic source requirements, and operational use cases.",2022
1.6.1 Using CORE Model-Based Systems Engineering Software to Support Program Management in the U.S. Department of Energy Office of the Biomass Program,"Abstract Biomass research has been a cornerstone of the U.S. Department of Energy's (DOE's) renewable energy development and deployment efforts during the last 25 years. Today, as the true cost of the nation's reliance on imported oil becomes increasingly clear, the DOE Biomass Program is poised to bring biomass-derived biofuels to the market as a sustainable, domestic alternative to petroleum-derived fuels. To ensure that the program is focused on the activities critical to achieving this goal, the program is implementing systems engineering processes, practices, and tools to guide informed decision-making as biomass-to-biofuel systems are advanced from concept to commercial adoption. The program is using CORE, a Model-Based Systems Engineering (MBSE) software tool, to organize, coordinate, and document the program goals, milestones, and project tasks in a central repository. CORE is facilitating management and communication of program status, through the automated generation of accurate and up-to-date custom reports, Gantt charts, and tables in Microsoft Word, Microsoft Project, and Microsoft Excel formats, which are widely available to all program participants.",2007
Analyzing Standard Operating Procedures Using Model-Based Systems Engineering Diagrams,"Abstract Standard Operating Procedures (SOPs) are critical for the safe operations of complex, hazard-sensitive systems. The SOPs are particularity important for dealing with non-normal operations in which the human operator must intervene and/or provide instructions to the automation. Under these rare circumstances, the appropriate human operator actions are defined by SOPs. The SOPs must be completed within an Allowable Operational Time Window (AOTW) to avert a hazardous outcome. In many cases, the AOTW is not fixed, but exhibits variance due to complex non-linear, plant dynamics. The Time on Procedure (ToP) is also subject to variability due to human factors such as experience, proficiency, fatigue, and the efficacy of the SOPs and the supporting automation user-interface. For this reason, it is critical to evaluate the dynamic performance of the SOP in the context of the operations and determine the likelihood of the ToP exceeding the AOTW. This paper describes how to model SOPs and perform SOP analysis using LML/SysML Action/Activity Diagrams that can be found in most Model-based System Engineering (MBSE) tools. The method enables the SOP designer to assess the performance of the SOP by accounting for human factors and operation dynamics. The ability to test the procedures in a MBSE tool can inform the system design and verify the procedure design early in the development life-cycle. The implications and limitations of this approach are discussed.",2021
6.6.2 Determining the right solution using SysML and model based systems engineering (MBSE) for trade studies,"Abstract With the recent widespread adoption of the Object Management Group (OMG) Systems Modeling Language (SysML) by the systems engineering community to properly capture system requirements, functional and architectural design, and detailed interfaces and design characteristics, it is a natural next step to apply SysML with proven trade study techniques to leverage a robust approach through which to explore the design space and ensure coverage of nonfunctional and performance requirements. This paper not only shows this robust technique with Model Driven Systems Engineering (MBSE) and SysML, but it also provides a methodology that enables users to properly explore the design space with execution analysis—all from within the design model, something that was often missing from previous techniques around trade study analysis. Having access to the proposed design solutions and being able to perform trade-off analysis from within an engineering model has numerous benefits, which this paper discusses.",2011
A truly testing experience – how Model Based Systems Engineering can help to ensure that you build the right product and build the product right,"Abstract Model Based Systems Engineering (MBSE) tends to be very focused on the early system lifecycle stages (the “left side of the Vee” in a traditional, sequential lifecycle model) which, whilst understandable, can mean that some of the benefits of MBSE are not fully flowed through to the Verification and Validation (V\&V) stages of the lifecycle. The goal of this paper is to illustrate how an MBSE approach and associated methods can be used to influence and guide the V\&V of systems and the Systems of Systems (SoS) that are formed from the interoperation of these systems. The approaches and methods illustrated have been applied in both the development of naval platforms (or systems) and the interoperation of these platforms via military communications with other platforms across multiple domains (air, sea and land).",2016
A System and Method for improving the Model Based Systems Engineering Environment capability,"Abstract As the evolution of new technologies such as IOT and Cloud Computational Analysis continue, the Systems have become more and more complex and it is grown much in size. Unfortunately the present day SE Environments, Modeling languages and the related tool sets are not sufficient enough to represent the multiple streams problem at hand in one integrated modeling environment which makes all of the Stakeholders and Engineers \& Non-engineers understand the problem scenarios. This lack of integrated modelling environment and a methodology for an additional representation of multiple problem domains limits off the analysis capabilities, timely communication of the technical and project risks to various stakeholders for decision making. It happens due to the inherent capability \& limitations of each modeling languages followed so far by the Model Based System Engineering (MBSE) community \& to bridge across them. This research paper focuses on improving the SE modeling environment capability from at least three distinct directions. First, it proposes a way to strengthen the SysML semantics with concrete guidelines which helps to reduce the incompleteness \& ambiguous nature of the SysML elements especially in the Non Functional Requirements modeling. Then it explores the possibility of integrating the ontology aspects offered in evolving Life-cycle Modeling Language (LML) specification to an extended SysML profile to complement its constructs to facilitate communication with non-system engineers as well. Finally, this paper draws parallel between the LML architectural modeling concepts with the Architecture Analysis \& Design Language (AADL) constructs and realizes them in an extended SysML profile. This will facilitate the seamless flow of models at various abstraction levels \& translation of architectural model information from LML to AADL analytical environment. A case study implemented using an extended SysML profile \& a methodology will be presented to measure its effectiveness.",2019
Developing a Model Based Systems Engineering Architecture for Defense Wearable Technology,"Abstract The rapid advancement of commercial wearable sensing technologies provides an unprecedented opportunity to gather information that improves warfighter performance during military activities and to detect the onset of illness (such as COVID-19) through surveillance. However, the promise of improved performance and illness prevention through these technologies remains unfulfilled because of the complexity of guaranteeing that technology development outside of the standard military acquisition cycle will meet military requirements. The key to meeting this challenge is to facilitate coordination among R\&D efforts, commercially developed products, and military acquisition strategies. To address this, we developed an MBSE architecture and methodology for validating independently developed wearable system designs against military end-user needs. This methodology includes developing a conceptual framework, a model library, and a capability needs matrix that maps defense mission characteristics to physiological states and product design implementations. This architecture allows military stakeholders to determine where capability gaps or opportunities for wider application of commercial technologies exist, thus providing a bridge between externally developed wearable sensing technologies and military acquisition strategies.",2021
Case Study: A Model Based Systems Engineering (MBSE) Framework for Characterising Transportation Systems Over the Full Life Cycle,"Abstract Development of transport infrastructure has significant challenges including acquisition lag, phased evolution, multiple disparate stakeholders and environment-specific issues. The Asset Standards Authority (ASA) at TfNSW is introducing MBSE to address these challenges. Instrumental to the introduction is the development of a framework that structures the available data and provides guidance and traceability between the data sets. This framework combines the enterprise-level drivers with the lower level drivers such as standards to outline a generic conceptual design for a transport system. This conceptual design is then used to guide future system development. The outcome is future project information based on greater, enduring understanding of the transport system.",2016
A generic hierarchical System of Systems Engineering (SOS) Approach for Model based System Engineering (MBSE) Projects,"Abstract Model based systems engineering (MBSE) has been accepted worldwide by many industries, including the automotive industry, for several years. Hundreds of projects have already been developed and deployed using MBSE approaches. MBSE is gaining importance because it provides systems advantageous life cycle processes, such as returns of investments and meeting the demands of global marketplaces, as they become increasingly complex. Consequently, the number and pace of deployment using MBSE approaches will increase in the future. Our current work objective is to define a generic MBSE methodology compatible with Systems Engineering Body of Knowledge (SEBOK) functional decomposition principles, ‘Automotive open systems architecture’ (AUTOSAR) developments and compliant to ‘Automotive software performance improvement and capability determination’ (ASPICE) processes using the ‘systems modelling language’ (SysML). We have proposed a generic SysML process framework, a hierarchical system of systems (SOS) engineering approach and automation solutions. We have shown that the proposed solution helps meet the defined objectives. The work is targeted and relevant for automotive industry MBSE practitioners. In general, the research, apart from transportation and mobility industries, can also be used in other industries.",2022
Automated Component-Selection of Design Synthesis for Physical Architecture with Model-Based Systems Engineering using Evolutionary Trade-off,"Abstract Component-Selection is an important task in design synthesis of MBSE. A trade study is commonly used to help systems engineers and stakeholders selecting the components of a systems design. A simple analysis may be sufficient when it involves only two parameters. However, when the components and their integration become more complex, the trade study also becomes harder, time- and cost-consuming, and error-prone. This paper aims to propose a method to automatically generate the solution by performing an evolutionary search. Sample components of a hybrid car which consists of an engine, an electric motor, and a battery are used in our initial prototype. The logical architecture is represented in the OMG SysMLTM via CSMTM. Through the experimental result, this paper shows that the proposed technique allowed the system design to be efficiently selected.",2018
MBSE delivers significant return on investment in evolutionary development of complex SoS,"Abstract The Submarine Warfare Federated Tactical Systems (SWFTS) is a rapidly evolving combat system of systems (SoS) product family. Managing the annual baseline updates requires processing thousands of baseline change requests, then coordinating and verifying their implementation. The complexity of this effort, which involves well over ten million source-lines-of-code (SLOC) as well as Commercial-Off-the-Shelf (COTS) and military-unique hardware, is compounded by being deployed in ten variants. After a feasibility study in 2010 the SWFTS systems engineering and integration program started a transition from traditional requirements database and document-centric systems engineering (DCSE) to a model-based systems engineering (MBSE) process. At that time there was little solid evidence in the literature for a positive Return on Investment (ROI) for moving from DCSE to MBSE. Applying MBSE to this program has resulted in measurable monetary and operational benefits. We 1) summarize the DCSE to MBSE transition, 2) describe the accomplishments and observations to date, 3) define the metrics collected, and 4) quantify the achieved ROI. Background on the systems engineering and integration (SE\&I) process and an apples-to-apples comparison of SE quality and efficiency are provided. The raw SE\&I efficiencies of the DCSE and MBSE approaches are documented, along with conclusions showing that the MBSE approach delivers a positive ROI through higher quality SE products at significantly less cost-per-change, enables managing more baselines and SoS complexity using constant resources, and reduces the cost of the downstream integration effort.",2021
Digital Engineering Models of Complex Systems using Model-Based Systems Engineering (MBSE) from Enterprise Architecture (EA) to Systems of Systems (SoS) Architectures \& Systems Development Life Cycle (SDLC),"Abstract This paper presents the sharing of our experiences and lessons learned to modernize a warship with C6ISR utilizing the digital engineering MBSE models of complex systems. We captured Enterprise Architecture (EA) DoDAF views, KPP and KSA in Capability Views (CV). At the EA, information passes into domain specific SoS Block Definition Diagrams (BDD) and Internal Block Diagrams (IBD) to interface and exchange information via SysML models and generate the Interface Control Document (ICD) automatically. The paper illustrates the mapping of EA with SoS digital models and tracing from EA to SoS MOE, MOP, MOS and TPM. The paper applies a Use Case to exemplify OOSEM life cycle activities for requirements traceability. The paper has demonstrated that both EA and SoS are derived from Systems Engineering (SE) process and can be validated and verified via the “V-Model” and endorse the noticeable reduction in the total development cost per complex systems project.",2018
Leveraging Variability Modeling Techniques for Architecture Trade Studies and Analysis,"Abstract Increasing complexity in modern systems, as well as cost and schedule constraints, require a new paradigm of Systems Engineering to fulfill stakeholder needs. Challenges facing efficient trade studies include poor tool interoperability, lack of simulation coordination (design parameters), and requirements flow down. A recent trend toward Model Based Systems Engineering (MBSE) includes flexible architecture definition, program documentation, requirements traceability, and Systems Engineering reuse. As a rapidly evolving practice, MBSE still lacks governing standards and commonly accepted frameworks. This paper proposes a framework for efficient architecture definition using MBSE in conjunction with domain specific simulation to evaluate alternatives. Variant modeling techniques are introduced as an extension to capturing parameterized architecture options. Initial exploration applies such variant modeling techniques to design for adaptability trade study criteria, as a means to evaluate candidate architecture configurations against multiple requirement sets. A general framework is provided, followed with a specific example including a method for designing a trade study, defining candidate architectures, planning simulations to fulfill requirements, and designing a weighted decision analysis to optimize system objectives.",2014
Implementing Model-Based Systems Engineering for the Development and Support of an Additive-Layer Manufacturing Plant in the Aerospace Context,"Abstract One of the revolutionary changes of the 21st century in the aerospace industry is the emergence of Additive Layer Manufacturing or 3D printing technology. This is so for a number of reasons. There is virtually no material waste in the production process. Existing aircraft parts of current designs can be produced in less time and for a fraction of the cost, whilst still meeting the ‘form, fit and function’ requirements of those existing parts. Modified parts that are stronger and lighter, but which could not previously be produced with traditional manufacturing methods and tools, can be designed and produced. Going even beyond parts, new designs will increasingly be enabled with larger ALM machines that are capable of printing much larger components, which have most of the traditional parts already integrated. This dramatically reduces manufacturing and assembly times and costs, as well as weight, while increasing the level of functional integration by such components. This paper reports on the application of MBSE for the development and support of a new ALM Plant in the UK. The establishment of this ‘ALM System’ followed years of cutting-edge research activities on laser and electron beam powder bed technologies. The requirements for and the solution architecture of the ALM System were developed using various methods and supporting tools, until the requirements cascade and part of the corresponding system design, down to the level of certain detailed production processes, was modeled in SysML using MagicDraw.",2020
Research needs in systems engineering: Report from a University of Alabama in Huntsville workshop,"Abstract The success of systems engineering (SE) efforts to solve development issues benefit from the mutually advantageous relationship between academia and practice. This relationship can be threatened by lag in adoption and differences in focus between the two worlds. In an effort to help maintain alignment between SE research and practice, a 2-day workshop was held at the University of Alabama in Huntsville on research needs in SE. The workshop was attended by individuals from academia, the Department of Defense, NASA, and the aerospace industry. This paper presents summaries of the discussions that took place, as well as possible research questions informed by the results of the workshop. The workshop consisted of an introductory roundtable and three breakouts sessions focusing on requirements, verification, and validation; configuration and data management; and systems acquisition and design. Several topics emerged as important concepts for future research, and research questions were developed relating to model-based systems engineering (MBSE), requirements, modeling, sociotechnical issues, and education.",2020
10.5.1 An MBSE Case Study and Research Challenges,"Abstract Model-Based Systems Engineering (MBSE) is an emerging practice that provides major advantages over document-based engineering design approaches: traceability and transparency of the evolving design, improved design completeness, and improved knowledge sharing. The paper opens with an introduction to contemporary systems engineering practice, its limitations and the need for MBSE. Then the paper describes an MBSE case study on the ground-based air missile defence system, which includes SysML model design and development, lessons learnt and insights, and a set of derived research challenges for future research and development.",2012
4.6.1 A historical perspective of MBSE with a view to the future,"Abstract Model-based engineering has been a topic of discussion for over twenty years; Model-based systems engineering (MBSE) has been an INCOSE initiative since 2006. For the third international conference on MBSE held September 2010, the author researched the background of MBSE from a historical perspective to identify the emergent timeline and to recognize the work that has lead to the current situation. This perspective can be used to understand the barriers to adoption, the research that remains, and to establish a reasonable expectation of the path ahead for realizing the full potential of MBSE.",2011
Towards Solving MBSE Adoption Challenges: The D3 MBSE Adoption Toolbox,"Abstract Increasing competition drives organizations to continually seek ways to improve the quality of their products and services, time to market and pricing pressures. Model-Based Systems Engineering (MBSE) promises many benefits to solve document-based engineering problems. However, the journey of MBSE adoption relies on several human, financial, organizational and technological factors. Organizations that decide to adopt MBSE must be aware of those factors. This paper outlines the MBSE adoption experience of a series of projects and presents an approach to support and guide organizations in overcoming MBSE adoption challenges.",2018
Creating Value with MBSE in the High-Tech Equipment Industry,"ABSTRACT The Netherlands has a strong presence in the high-tech equipment industry sector with world-wide renowned organizations. Systems engineering is a key capability that is well-established in this sector. The industry now sees model-based systems engineering (MBSE) as indispensable to bringing systems engineering capabilities to the next level. Despite this, MBSE is not a fully established practice in this sector as in other industries. ESI has initiated a study to understand the background of the sector's interest in MBSE, the challenges to address with MBSE, experiences with, and fit of current MBSE methodologies versus the characteristics of this sector. This article reports on the results of this study. It highlights innovation in MBSE to address the needs and characteristics of the high-tech equipment industry.",2022
A SysML Framework for Modeling Contingency Basing,"ABSTRACT Contingency basing presents a planner with numerous design decisions driven by multiple design criteria such as the number of soldiers, base permanency, base location, and other factors. The operational environment of the base is not static either; design requirements change as the mission changes. In this work, we introduce a model-based systems engineering approach to elicit design and operational needs while dealing with the design complexity of constructing a contingency base. The model includes the key facility types that can make a contingency base, interactions between facility types, and required utilities for each facility type. The model elements are kept at an abstract level so the details can be altered as required by the customer needs. Pairing the model with an external analysis tool allows for quick development and testing. Properties of the facility types can be altered either in the model or the analysis tool, and reflected in both. Using the model- based systems engineering concepts of reusability, these elements can be saved and re-used in future base designs allowing for a rapid and adaptable design process. In addition, the sharing of information visually with Object Management Group's Systems Modeling Language™ diagrams enhances the ability to collaborate with nonengineering subject matter experts within the design domain. By graphically showing the conditions and layout of the proposed contingency base, Department of Defense personnel not trained in modeling and simulation were able to interact with the engineering designs and identify gaps in the proposed architecture.",2015
Experience from introducing Unified Modeling Language/Systems Modeling Language at Saab Aerosystems,"Abstract A Unified Modeling Language/Systems Modeling Language (UML/SysML) subset was the modeling notation selected for an aerospace systems engineering project at Saab Aerosystems. In this paper, the rationale for selecting UML/SysML is given, along with a description of the situation at the project planning stage regarding business conditions, method and tools support. The usage of use case, sequence, and activity diagrams are described as well as definition of functional chains with SysML. Furthermore, the connections to system implementation activities including code generation and simulation are discussed. The advantages and disadvantages of using UML/SysML from experience in an industrial context are reported. It is also described how UML/SysML is related to industrial research projects in the Model Based Systems Engineering (MBSE) methods and tools area. Introducing UML/SysML with a methodology and a supporting toolset in an operative organization require a clear strategy, including planning, just-in-time training, and mentor support. Finally, industrial needs for further development of SysML are discussed. © 2009 Wiley Periodicals, Inc.",2010
Comparative analysis of model-based and traditional systems engineering approaches for simulating a robotic space system architecture through automatic knowledge processing,"Abstract Model-based Systems Engineering (MBSE) case studies in the literature assert that there are benefits to MBSE when applied to modeling and simulating space systems. This research evaluates the benefits of an MBSE modeling and simulation approach over a traditional, non-MBSE approach through modeling and simulation of an orbiting sample Capture and Orient Module (COM) architecture for potential Mars Sample Return (MSR). The COM architecture was modeled, simulated, and evaluated against nominal load power and output data rate requirements to compare the two approaches. A new modeling and simulation-centric V-model was synthesized from existing V-model and modeling and simulation process models to map out the modeling and simulation activities within the context of the system development lifecycle and used as a tool to compare the non-MBSE and MBSE approaches. A three-phase modeling and simulation process consisting of an analysis and modeling phase, computer programming and implementation phase, and experimentation phase was used to model and simulate the COM. The total number of manual and automatic knowledge processed was calculated for both approaches and used to quantify the benefits of the MBSE approach relative to the non-MBSE approach. In the non-MBSE approach, all knowledge elements were manually processed during the modeling and simulation process. In the MBSE approach, 49\% of total knowledge processing was automated. The MBSE approach showed user experience benefits with modeling and simulating the COM robotic space system through providing a higher level of support for automation, reducing the burden of systems engineering tasks, and reducing effort.",2022
Informing System Design Using Human Performance Modeling,"ABSTRACT Humans play a key role in the operation and support of most systems and model-based systems engineering (MBSE) offers new opportunities to properly consider human capabilities and involvement. This research presents an approach for systems engineers to integrate system models with human performance modeling for early and more effective system design. Unlike analyses using traditional physics-based models found in most extant MBSE literature, adjusting system parameters for human-based analyses can greatly impact the design of the system itself. Adjusting a human-system parameter can lead to design implications including adjustments to task allocation, process and workflow, and interface design. To demonstrate this, a quantitative case-study approach is used. Starting with a set of Systems Modeling Language (SysML) diagrams, a task analysis is performed to inform an “as is” model of human performance in the Improved Performance Research Integration Tool (IMPRINT). An alternative IMPRINT model is created with varying design parameters and utilized to perform a trade study. Through the analysis, constraints and assumptions placed on the human are verified and the results of varying automation estimated. With current design emphasis in MBSE and model-based engineering (MBE), there is great opportunity to emphasize human considerations and integrate human performance analysis.",2017
Recommended Best Practices based on MBSE Pilot Projects,Abstract Model-Based Systems Engineering (MBSE) is an emerging paradigm for improving the efficiency and effectiveness of systems engineering through the pervasive use of integrated descriptive representations of the system to capture knowledge about the system for the benefit of all stakeholders. This paper describes some of the key engineering lessons and recommended best practices that have emerged from several MBSE pilot projects over the past few years.,2019
Towards Developing Metrics to Evaluate Digital Engineering,"Abstract Model-based systems engineering (MBSE) is an increasingly accepted practice in the Systems Engineering (SE) community, however, little has been done to empirically show that MBSE provides value. Furthermore, as the industry continues in the direction of digital transformation, MBSE will become a critical component of the larger Digital Engineering (DE) approach. This paper presents a measurement framework for selecting and developing appropriate metrics to assess the value/benefits of MBSE and subsequently DE. Utilizing expected benefits identified in a review of MBSE literature, a causal map was hypothesized to show how expected benefits (potential metrics) influence and relate to each other. This was done in order to systematically determine which benefits would be the most impactful to measure. The hypothesized causal model was presented for feedback to subject-matter experts from a working group developing the first DE measurement framework. This group is a joint effort with industry, academia, and the USA government to develop DE metric standards. Once the causal map was finalized, a case study was used to partially validate the causal model. Based on the causal map and subsequent analysis, we can recommend the first metrics to be employed for DE/MBSE based on the most influential nodes of the causal model. The potential metric candidates include: system quality, defects, time, rework, ease of making changes, system understanding, Effort, accessibility of information, collaboration, project methods/processes, and use of DE/MBSE tools. We believe a concerted effort across the industry to focus on measuring these variables is the most effective way to establish proof of the value of MBSE and DE.",2023
A mission-based architecture for swarm unmanned systems,"Abstract This research applies a mission engineering approach with model-based systems engineering foundations to formalize a swarm unmanned system design methodology and architecture. The architectural framework and methodology herein presented extend current swarm system design methods, which are primarily bottom-up approaches focused on the behavior of individual agents. We introduce a top-down, hierarchical approach with an overarching mission decomposed into phases, tactics, plays, and algorithms. Three unmanned aerial vehicle swarm case studies (one of which is discussed in this paper) are used to demonstrate the approach and its effectiveness in formalizing a mission-based framework of common patterns in swarm missions that promote architecture reusability.",2019
Improving Project–Product Lifecycle Management with Model–Based Design Structure Matrix: A joint project management and systems engineering approach,"Abstract We investigate potential benefits of employing the Design Structure Matrix (DSM) in the context of Model–Based Systems Engineering (MBSE) for the purposes of analyzing and improving the design of a product–project ensemble. Focusing on process DSM, we present an algorithm for a bidirectional transformation framework between a product–project system model and its corresponding Model–Based DSM (MDSM). Using Object–Process Methodology (OPM) as the underlying modeling language, we examine and characterize useful and insightful relationships between the system model and its MDSM. An unmanned aerial vehicle case study demonstrates the semantics of and analogy between various types of relationships as they are reflected in both the OPM system model and the MDSM derived from it. We conclude with further research direction on showing how clustering of DSM processes can be reflected back as an improvement of the OPM model. © 2013 Wiley Periodicals, Inc. Syst Eng 16",2013
4.6.3 An MBSE Feasibility Study using the Systems Integration Sandpit,"Abstract Model-Based Systems Engineering (MBSE) involves a focal shift from document-centric to model-centric systems engineering practices in which the model becomes the primary systems engineering artifact to represent the system specification and design. For an organization, early adoption of new approaches such as MBSE requires careful consideration of the cultural change, staff training needs, and introduction mechanisms to inform the cost-benefit tradeoff and to ascertain the level of risks. To this end, this paper describes a pilot study conducted to investigate the above using an in-house robotic surveillance system. The paper opens with a brief introduction to MBSE tools and methodologies, and the advantages advocated by the MBSE research community. The body of the paper describes the SysML model development activities undertaken in the pilot study and the lessons learned in the process. The paper concludes with a discussion on the potential of MBSE for major defence programs and for systems of systems integration.",2011
Systems Engineering: Cracking the Code of Digital Transformation,"ABSTRACT While complex systems transform the landscape, the systems engineering discipline is also experiencing a transformation to a model-based discipline. In alignment with this, the International Council on systems engineering (INCOSE) is strategically accelerating this transformation by building a broad community that promotes and advances model-based methods to manage the high rate of change and complexity of systems today. This paper addresses contextual drivers for transformation, describes INCOSE activities aligned with accelerating the transformation, and makes the case that model-based systems engineering can help businesses crack the code of Digital Transformation as it pertains to innovation.",2019
3.1.1 Model Lifecycle Management for MBSE,"Abstract Model Based Systems Engineering (MBSE) is an evolving practice in the early stages of adoption similar to the mechanical, electrical and software domains 20 to 30 years ago. Today there is increasing recognition of the potential MBSE brings to system life cycle processes with the increasing complexity of systems and the demands of the global marketplace. In order for the practice to realize this potential, system modeling and MBSE must be part of the larger model based engineering effort, and integrate with other engineering discipline models and modeling activities across the life cycle of a system. This is placing increasing demands on the need for Model Lifecycle Management (MLM) as an essential part of an MBSE infrastructure. This paper establishes the motivation for MLM, as well as laying the foundation for addressing challenges that lay ahead. The paper is focused on describing key concepts, requirements, current practices, and future directions of MLM, and setting the basis for more in depth overview of MLM solutions and vendor offering that are beyond the scope of this paper.",2014
6.6.1 Using MBSE with SysML Parametrics to Perform Requirements Analysis,"Abstract Requirements are attributed as a common cause of failure in system development. Not only are text requirements ambiguous, the domain conditions under which they are to be satisfied are vague. Until operating conditions and requirements are formally captured, they will continue to be vague with ill-defined verification criteria. SysML used in a Model-Based Systems Engineering (MBSE) development process can enable mitigation of this primary source of error. By representing the system under design and its operating environment as a composite SysML model with parametric diagrams, requirements can be formalized in a precise manner. Formalization of requirements and constraints with parametric diagrams enables them to be verified and flowed down during the development process. An example will be used to illustrate how parametric diagrams can be used to develop requirements and constraints.",2011
UTILIZING MBSE PATTERNS TO ACCELERATE SYSTEM VERIFICATION,"ABSTRACT In aerospace, automotive, healthcare, and other domains, the capability to effectively plan and perform system verification tests is increasingly a strategic differentiator. This paper reports on methods used to improve effectiveness of complex aircraft system tests, the gains achieved, and their connection to underlying methods and trends. These include use of model-based systems engineering (MBSE), leveraged by pattern-based systems engineering (PBSE) to generate configurable, reusable system models — the focus of the INCOSE MBSE Patterns Challenge Team (Patterns Challenge Team 2013-2015). Distinctive aspects include (1) use of configurable, model-based patterns of system descriptions, including configurable system verification tests, (2) improved ability of model-based descriptions to integrate modeling tools and automated systems for test management, (3) use of models to describe both the system under development and the development process, and (4) ability of these models to be integrated with other system lifecycle management processes and information systems, for increased leverage.",2017
The Application of MBSE to Inform Workforce Decision Making,"Abstract A novel application of Model Based Systems Engineering (MBSE) to a workforce context is presented. The DoDAF 2.02 metamodel (DM2) and associated architectural views are used to communicate key workforce information and relationships. This is implemented through a model-centric system engineering methodology that ensures a common language, traceability, rationale and data integrity. Preliminary results indicate benefits to multiple stakeholders from organisational leaders to human resource professionals. Decisions relating to workforce design, development and realignment can be based on better understanding of interdependencies and traceability to organisational objectives.",2017
6.5.2 MBSE Supports Manufacturing System Design,"Abstract To date, Model Based Systems Engineering (MBSE) has been deployed primarily in the product design domain. However, manufacturing system design problems are equally challenging, but there are many fewer design support tools in the hands of system designers. This paper describes how MBSE principles and methods can be used to make a powerful analysis tool readily accessible to manufacturing systems engineers. The MagicDraw™ SysML tool was used to create a domain specific language for electronics assembly, and the tool itself was customized to present an interface that was relatively easy for the manufacturing domain experts to use to create descriptions of products, resources, and processes. The domain specific language was mapped to a metamodel of the Arena™ discrete event simulation language, and the ATL© model transformation tool was used to automate the generation of the an instance of a simulation model from an instance of the electronics assembly system. The use of this kind of analysis automation can reduce by up to a factor of ten the time required to develop such simulation models.",2012
3.4.0 Integrating MBSE into a Multi-Disciplinary Engineering Environment,"Abstract Model-based systems engineering (MBSE) formalizes the practice of systems engineering through the use of models. This panel is intended to address considerations for incorporating MBSE into a broader multi-disciplinary engineering environment. Engineering disciplines use multiple languages and tools whose results are not always easily integrated. The lack of integration is a source of design discrepancies and errors. The potential for MBSE is that it provides a means to integrate multi-disciplinary engineering including systems, hardware, software, analysis, and test throughout the development life cycle. This panel will include representatives from other engineering disciplines to address questions such as: 1) What should other engineering disciplines expect from MBSE, and what should systems engineering expect from other disciplines to enable MBSE? 2) What can MBSE learn from model-based approaches used in other engineering disciplines? 3) How should the practices and tools be integrated/coupled across disciplines? 4) How are the system, hardware, and software models managed to ensure an integrated technical baseline? 5) How should a program be organized to achieve more effective utilization and application of model-based engineering? These are some of the questions that must be answered to more fully reap the benefits of MBSE.",2011
Getting Started with MBSE in Product Development,"Abstract Whether it is a small company hoping to start using systems engineering with a Model Based Systems Engineering (MBSE) approach, or a larger, established company interested in converting existing document-based practices to MBSE, the challenges can be daunting. These can include unfamiliarity with the MBSE tool, complex default schemas, and understanding what is worth tracking in MBSE (or not). This paper will address the practical aspects for building and using a simplified MBSE schema. The schema details a selection of diagrams and items to be used for each phase of the product development process. The practical aspects for what information to include, how to trace items to each other, and what to include in each output document are described and demonstrated with examples.",2016
Integration of systems design and risk management through model-based systems development,"Abstract Model-based systems engineering is a powerful methodology to develop safety-critical systems. The use of the system model as a single source of truth for risk and dependability analysis results in a consistent and complete assessment. Besides, representation and logging of the assessment within the model result in a complete and up-to-date single source of information that can be used during the device certification as well. This paper aims to provide a comprehensive risk management SysML profile that includes interconnected safety analysis [functional hazard assessment (FHA), fault tree, and failure mode and effect analysis (FTA, FMEA)], control measure, and evaluation model elements in compliance with the medical standards. Model-based risk assessment of a point-of-care diagnostic device for sepsis has been shown as a case study to show the implementation of the profile. This device is a standalone unit and the test results obtained directly affect the patient. Therefore, both the top-down (FHA and FTA) and bottom-up (FMEA) safety assessment methods have been used. Another objective of the study is to define a systematic and holistic method to perform fault tree analysis, not only from the system architecture models but also from the functional, activity, and sequence diagrams of the system model.",2023
An Exploration of MBSE Through the Modelling of the S2TEP Space System,"Abstract Model Based Systems Engineering (MBSE) has great potential for the development of spacecraft as it promises to provide a more effective way to handle complexity. As part of a student project, the application of MBSE in conceptual design was explored through the modelling with the GENESYS tool of a micro-satellite currently being developed at the German Aerospace Center (DLR). The project sought to find the value of utilising model-based techniques and explore useful modelling techniques and applications to inform future MBSE efforts at the DLR. A model of the spacecraft was created in parallel to the system development. This allowed for some key benefits of MBSE to be found. MBSE was explored through both descriptive and analytic modelling of the spacecraft.",2017
4.4.2 MBSE Feasibility Study to improve PLM Business Solution System Specification and Design,"Abstract Ambiguous requirements are the main cause of failure in PLM business solution applications development. SysML used in a Model-Based Systems Engineering (MBSE) development process can mitigate this primary source of error. MBSE moves system engineering practices from document-centric to model-centric approach in which the model becomes the primary systems engineering artefact to represent system specification and design. The adoption of this new approach requires careful consideration of the cultural change, adequate training, and a new methodology. This paper describes the feasibility study, results and lesson learned on the MBSE maturity acquired in Alenia Aermacchi Information System and Engineering departments applying MBSE to Product Life-Cycle Management (PLM) and Document Management. It is based on the University of Salento expertise about modelling languages and on the Alenia Aermacchi experience on System Engineering. SysML has been used as standard language, IBM Harmony Methodology as system engineering methodology and IBM Rhapsody as modelling tool.",2012
Generating SysML views from an OPM model: Design and evaluation,"Abstract Conceptual modeling is key to Model-Based Systems Engineering (MBSE) approaches. OPM (Object-Process Methodology) and SysML (OMG Systems Modeling Language) are two state-of-the-art conceptual modeling languages. While both languages aim at the same purpose of providing a means for general-purpose systems engineering, these languages take different approaches in realizing this goal. As each of the languages has its relative strengths and weaknesses, ways to create synergies between them are considered in this work. We propose combining advantages of each language through automatic generation of several SysML views from an OPM model. To this end, we developed a new algorithm and software application for implementing the OPM-to-SysML views generation, and evaluated the results through an experiment conducted for this purpose. The formally constructed experiment described in this paper, which has been designed to test the quality of the auto-generated diagrams and their impact on system comprehension, indicates that the addition of some auto-generated SysML views to an OPM system model has increased system comprehension level. Our approach can benefit various stakeholders by promoting better system understanding, standardization, and improved interoperability. © 2011 Wiley Periodicals, Inc. Syst Eng 14:",2011
Constructing an Authoritative Source of Truth in a Changing Information Landscape,"ABSTRACT In support of the US Army Mission System Architecture Demonstration, Adventium Labs conducted a series of interviews and demonstrations to determine requirements, best practices, and available tool capabilities for building and maintaining an Authoritative Source of Truth (ASoT). An ASoT is a capability that gives definitive answers to queries about a target collection of systems. An ASoT should make information discoverable, enable controlled information sharing, and maintain traceability across time and organizations. The challenges to establishing an ASoT include limited standards adoption by tool vendors, entrenched workflows, and data rights management needs. The systems engineering community can overcome these challenges by keeping ASoT needs at the forefront when planning engineering activities, investing in open and flexible standards for information sharing, and leveraging emerging connectivity tools and model-based systems engineering methods.",2022
Towards V\&V suitable Domain Specific Modeling Languages for MBSE: A tooled approach,"Abstract Considering Model-Based Systems Engineering (MBSE) principles and needs, this article focuses on the design of Domain Specific Modeling Languages (DSMLs) aiming to link modeling, verification and validation (V\&V) activities. The goal is to ease the work and increase the freedom and autonomy of experts from various domains in the process of creating and managing system models then to supply experts involved in analyses and decision making processes with models characterized by highest level of confidence. This paper introduces and illustrates a tool-equipped approach, named “xviCore”, that provides MBSE experts with natively verifiable, executable and interoperable DSML named “xviDSML”, i.e., DSML that can be formally and directly checked and simulated requesting no huge efforts or skills.",2016
2.3.1 A MBSE probabilistic framework for preliminary lifecycle costing of mechanical products,"Abstract The challenging economic context and competitive pressure forces industrial companies to attain the highest profitability of a program, with lifecycle cost (LCC) as one of the key parameters. Thus, industrial companies are constantly developing more efficient methods to estimate LCC as early as possible in the design process. This paper presents a new Model Based Systems Engineering (MBSE) probabilistic framework for lifecycle cost estimation during preliminary design. Divided in two modules computing respectively manufacturing and maintenance costs, the framework is based on a suite of statistical regression-based models whose results are aggregated in order to provide the best probabilistic estimate of lifecycle cost. The framework has been tested on components from civil jet engines but can be applied to a large variety of mechanical products. The early results are satisfactory with predictive accuracy of lifecycle costs of new components representing a significant improvement over state-of-the-art methods.",2014
10.5.2 Three years of MBSE for a large scientific programme: Report from the Trenches of Telescope Modeling,"Abstract The most ambitious projects of the European Southern Observatory's (ESO) is the construction of the European Extremely Large Telescope (E-ELT) which will be by far the world's largest optical and near-infrared telescope, and. will provide images 15 times sharper than those from the Hubble Space Telescope. Such a project poses continuous challenges to systems engineering due to its complexity in terms of requirements, operational modes, long operational lifetime, interfaces, and number of components. Since 2008 the Telescope Control System (TCS) team has adopted a number of Model Based Systems Engineering (MBSE) practices in order to cope with the various challenges ahead. This paper provides an overview of the different approaches we took during this time - which ones worked, and which did not.",2012
MBSE Enabled Trade-Off Analyses,"Abstract This paper examines the potential to use Model-Based Systems Engineering (MBSE) tools to perform trade-off analysis of alternative systems decisions in the system life cycle from the concept stage to the retirement stage. Specially, we searched for integrated models that automate the simultaneous evaluation of the performance, effectiveness, stakeholder value, and cost of multiple alternative system designs. We used the Web of Science to perform a literature search to identify published papers that describe the use of MBSE tools to support automated analysis of alternatives and trade-off analyses. We found very few papers that claimed to use MBSE to provide analysis of design alternatives or tradespace exploration. Based on the literature search insights, we identify and describe the required and desired capabilities to perform automated trade-off analyses of performance, effectiveness, stakeholder value, and cost for multiple system design alternatives using integrated models.",2021
Model-based protocol specification,"Abstract We propose a holistic Model-Based Protocol Specification (MBPS) framework. Standards, procedures, and protocols are important anchors for interconnected systems: they facilitate the connectivity of billions of devices around the world, commodify advanced technologies and solutions, and enable efficient services involving trillions of transactions in aviation, medicine, e-commerce, transportation, infrastructure, and other domains. Domain protocols allow for conventional interactions within a domain among ecosystem entities and humans (eg, airline ticketing, financial transactions, etc). Protocol specifications must be formal, consistent, and verifiable. Nevertheless, most current standard protocols are text-based, unverifiable, and often inconsistent with themselves and with other standards. Text-based standards are difficult to manage, track, control, and adopt. MBPS includes three critical enablers: a modeling language, a modeling process, and a model-supported standardization process. This paper employs Object-Process Methodology (OPM), a model-based systems engineering framework, endorsed as ISO-19450, for modeling and simulation of the generic protocol specification process and for two examples: (a) a Kerberos authentication protocol revision based on a previous Kerberos model and on a recently discovered vulnerability and (b) a domain-specific Publish—Subscribe protocol application for selective information distribution.",2019
MBSE for Engineering Students,"Abstract The demand of new complex products shifts development from largely mechanical engineering to the interdisciplinary systems engineering. So, a systems-driven approach is critical to success in engineering complex products that consist of interdependent mechanical, electrical/electronic parts, and software modules. The paper presents a Model Based Systems Engineering learning approach where the main emphasis is on applying a modeling process rather than using complex notations or expensive tools. The results are illustrated with the final degree work of a student dealing with the preliminary design using SysML notation of a robotic system for the reconnaissance of victim bodies in natural or man-made disaster areas. The combination of a MBSE process with the knowledge of some engineering technical specialities related to the solution is a key factor of the students’ projects success.",2016
MBSE Applicability Analysis in Chinese Industry,"Abstract Model-based systems engineering (MBSE) is an emerging technique widely used in current industry. It is a leading way expected to become a next generation standard practice in the systems engineering. Fundamental principles of systems engineering can be supported by a model-based approach to minimize design risks and avoid design changes in late development stages. The models can be used to formalize, analyze, design, optimize, verify and validate target products integrating engineering developments, organizations and products across domains. Though model-based development is well established in specific domains, such as software, mechanical system, electric systems, its role in integrated development from a system perspective is still a big challenge for current Chinese industry. In this paper, a survey from volunteers related with MBSE is taken by using questionnaires. The purpose of this survey is to highlight the usage and status of MBSE in current Chinese industry and address the rough understandings of MBSE concepts among system developers in China based on the answers about usages, advantages, barriers, concerns, trends of MBSE, particularly the perspective of tool-chain development.",2018
(MBSE)2: Using MBSE to Architect and Implement the MBSE System,"Abstract Model-Based Systems Engineering (MBSE) is being applied in a new way at the enterprise level for the benefit of all its major programs and business units. For an enterprise to successfully implement MBSE, it must integrate models, datasets, tools, and infrastructure with appropriate processes, methods, and standards into a comprehensive, integrated MBSE “System”. This paper describes an approach being put to practice, which leverages MBSE principles and methods to architect this MBSE System, focusing on the descriptive models that serve as the foundation for MBSE. The approach is named (MBSE)2 since it uses MBSE to architect and implement the MBSE System. This (MBSE)2 approach is illustrated with example models of the MBSE System, showing how these models are used to inform the architecting process, monitor agile implementation of models, and facilitate model-based execution of SE reviews and audits. Summary For an enterprise to successfully implement MBSE, it must integrate models, datasets, tools, and infrastructure with appropriate processes, methods, and standards into a comprehensive, integrated MBSE System. This paper describes an approach that uses system architecting and MBSE principles and methods to architect this MBSE System, focusing on the descriptive models that serve as the foundation for MBSE. The approach has been named (MBSE)2 since it uses MBSE to architect and implement the MBSE System. This (MBSE)2 approach was illustrated with example models of the MBSE System, showing how system modeling tools can be used to analyze the MBSE System models to inform the architecting process, monitor the agile implementation of models, and facilitate the evolved execution of SE reviews and audits.",2020
Human factors hazard modeling in the systems modeling language,"Abstract An ongoing challenge within the field of Systems Engineering is the application of a right-scoped and consistent approach to modeling human functions and risks within a system lifecycle. Humans interacting with a system can be modeled along a continuum from passive agents with not well-defined interfaces with the system operations, to essential personnel who are responsible for dynamic interactions that ensure the safety and correct function of the system. This paper seeks to contribute to the integration of a model of human function, response, and reliability into the systems engineering of a complicated system through translation of a Human Factors Hazard Model (HFHM) into the Systems Modeling Language (SysML). The HFHM is constructed as a sequential event tree model of human response to triggering events, where each event's likelihood of failure is modeled by a set of fault trees predicting human failure probabilistically using Human Error Probabilities (HEP). Implementation of this model in SysML is demonstrated through a set of stereotyped structural, behavioral, and parametric diagrams. Integration of the HFHM within SysML demonstrates the benefits of human factors modeling and integration into Model-Based Systems Engineering (MBSE) processes illustrating executability, reusability, and traceability.",1970
Introduction to Pattern-Based Systems Engineering (PBSE): Leveraging MBSE Techniques,"Abstract This workshop is a practitioner's introduction to Pattern-Based Systems Engineering (PBSE), including a specific system domain illustration suitable for educational use. INCOSE thought leaders have discussed the need to address 10:1 more complex systems with 10:1 reduction in effort, using people from a 10:1 larger community than the “systems expert” group INCOSE currently reaches. Through the PBSE Project, the project team proposes to enable INCOSE membership, and the larger systems community beyond INCOSE, to achieve such order-of-magnitude improvements. PBSE leverages the power of Model-Based Systems Engineering (MBSE) to rapidly deliver benefits to a larger community. Projects using PBSE get a “learning curve jumpstart” from an existing Pattern, gaining the advantages of its content, and improve that pattern with what they learn, for future users. The major aspects of PBSE have been defined and practiced some years across a number of enterprises and domains, but with limited INCOSE community awareness. A related tutorial was recently provided at the INCOSE 2012 Great Lakes Regional Conference, and well-attended.",2013
Utilizing MBSE Patterns to Accelerate System Verification,"Abstract In aerospace, automotive, health care, and other domains, the capability to effectively plan and perform system verification tests is increasingly a strategic differentiator. This paper reports on methods used to improve effectiveness of complex aircraft system tests, the gains achieved, and their connection to underlying methods and trends. These include use of Model-Based Systems Engineering (MBSE), leveraged by Pattern-Based Systems Engineering (PBSE) to generate configurable, re-usable system models--the focus of the INCOSE MBSE Patterns Challenge Team. (Patterns Challenge Team, 2013-2015) Distinctive aspects include (1) use of configurable, model-based patterns of system descriptions, including configurable system verification tests, (2) improved ability of model-based descriptions to integrate modeling tools and automated systems for test management, (3) use of models to describe both system under development and the development process, and (4) ability of these models to be integrated with other system life cycle management processes and information systems, for increased leverage.",2015
An MBSE Methodology for Capability Systems Definition,"Abstract Systems Engineering provides a structured means to define, design, implement, integrate, sustain and manage numerous interdependencies throughout the Lifecycle of complex systems. This paper presents a Model-Based Systems Engineering (MBSE) methodology that focuses on the early Concept stage of the ISO/IEC/IEEE 15288:2015 to define the systems capability in the operational domain, functional domain and solution-independent physical domain. The methodology consists of systemic processes that are governed by an information-centric schema as well as enabling systems language and tools. The schema focuses on the objective information required during the capability design process to inform key design decisions and achieve convergence from conflicting stakeholder viewpoints. The paper opens with an introduction to MBSE and systems capability definition. Then, the detail of the methodology is discussed followed by an application of this approach to the Battlespace Communication Support Centre (BCSC) capability as a case study – reporting on the efficacy, lessons learned and recommendations for future applications.",2017
Systems Interface Management with MBSE: from Theory to Modeling to Reality,"Abstract Systems interoperate using interfaces. They exist between capabilities, organizations, people, systems, people and systems, systems and nature, systems of systems, and so forth. Interfaces are used to support both system to system communication as well as supporting the complete set of enterprise goals. Interfaces are where the most interesting things happen. And where most things go wrong. This paper addresses system interface-management issues and the benefits of Model-Based Systems Engineering (MBSE) approaches. An initial focus will be placed on interface information content that needs to be addressed at each level of system decomposition – from external stakeholders to system boundary to eventually, system component-to-component. The focus will then shift to interface management to model-based and functional/logical design practice. It will also cover system interconnection and communications, how they change, operate and evolve over time to implement mission goals and to satisfy stakeholder needs. Finally it will look at physical systems and the connection to PLM/CAD domains. Defining stakeholder goals and required capabilities Interface definition with MBSE Functional Architecture Interfaces Logical Architecture Interfaces Physical Architecture Interfaces Allocation across cross cutting views How behavior drives interfaces which drive behavior Defining interaction requirements Implementing effective and testable interface specifications Traceability throughout the architecture Service Oriented Architectures.",2018
An MBSE Tool to Support Architecture Design for Spacecraft Electrical Power System,"Abstract Since difficulty and complexity of spaceflight missions are increasing, current electric systems in the spacecraft become growingly complicated challenging the spacecraft electrical power system (EPS) architecture development. By using traditional approaches, system architectures are managed by document collections including various reports, documents and data chats. Due to lack of a unified visualization of system architectures, consistency and traceability among data, documents and information are difficult to manage, particular in supporting architecture design and system verification and validation. This paper presents a model-based systems engineering (MBSE) tool with emphasis on domain specific modeling (DSM), architecture visualization, model transformation and automated verification and validation by using Modelica. The MBSE tool aims to develop the architecture models of EPS, to support MBSE-driven visualizations of architectural hierarchies inspired by related techniques of Google Earth and to realize architecture-driven verification \& validation by using Modelica language. Finally, through a case study of EPS, we evaluate the feasibility of our tool.",2018
OMG standard for integrating safety and reliability analysis into MBSE: Concepts and applications,"Abstract Model-Based Systems Engineering (MBSE) is gaining popularity in organizations creating complex systems where it is crucial to collaborate in a multi-disciplinary environment. SysML, being one of the key MBSE components, has a good foundation for capturing requirements, architecture, constraints, views and viewpoints. However, SysML does not provide the necessary constructs to capture safety and reliability information in the system model. A group of industry experts at the OMG has been working since 2016 to define a new specification providing the necessary capabilities. This paper provides an update on the progress of this work. It discusses the proposed specification's use of generic concepts to allow information interchange amongst diverse analyses, its use of existing SysML constructs to provide automation of safety and reliability work in existing modelling tools, and describes several of the supported analysis methods.",2019
General Modeling Language Supporting Model Transformations of MBSE (Part 2),"Abstract With the increasing complexity of systems, model-based systems engineering (MBSE) has attracted increasing attention in the industry. MBSE formalizes the whole lifecycles of products using models based on systems engineering aiming to improve the development efficiency of complex systems. Traditionally, MBSE approaches require many modeling languages in each phase of the entire lifecycle. Different syntax between such languages leads to difficulty in supporting an integrated description of transformations between models and data. Thus, it is challenged to utilize a general language to describe model formalism and transformation for architecture-driven technology and code generation in one MBSE tool. In this paper, a multi-architecture modeling language called Karma (introduced in Paper Part 1) is proposed to support the model transformations including architecture-driven technology and code generation implementations in one modeling tool. Finally, from one auto-braking case of an autonomous-driving system, we find the availability of the Karma language supporting architecture-driven technology and code generation is verified.",2020
A resilience systemic model for assessing critical supply chain disruptions,"Abstract Assessing the impact of natural disasters and manmade incidents against critical infrastructure systems is important and challenging. As critical infrastructure sectors become more interdependent, a method is needed to assess how disruptions to one sector affect other sectors. This need is particularly significant in the case of critical national supply chains which have not received the same attention as other critical infrastructure systems. This research develops a methodology for performing supply chain impact assessments by integrating model-based systems engineering (MBSE) with discrete event simulation (DES). SysML models capture the supply chain structure and critical infrastructure interdependencies. Simulation of the supply chain model subjected to external constraints identifies the impacts from critical infrastructure disruptions. This approach enables researchers and public policy planners to assess critical supply chain risks associated with current infrastructure implementations, and to conduct what-if analyses on alternative solutions. Application of this methodology to assess the natural disaster impacts on an urban food supply system demonstrates the effectiveness of modeling and simulation for evaluating the impacts of critical infrastructure disruptions on a wide range of critical supply chains. Future research should apply this methodology to different national supply chains and investigate additional critical infrastructure interdependency linkage mechanisms.",2022
Is CAD A Good Paradigm for MBSE?,"Abstract Those looking to advocate for Model-Based Systems Engineering (MBSE) in the Systems Engineering field often turn to more established fields that have made a similar transition to models to assure others it will be beneficial. One practice that is often compared to MBSE is Computer-Aided Design (CAD) from the field of mechanical engineering. However, the adequacy of this comparison is challenged upon a side-by-side examination of what MBSE and CAD are. Based on the established definitions, it is evident that while CAD can be considered a method of mechanical drawing, MBSE cannot be described as only a method. MBSE is more than installing and utilizing software, it is a process in and of itself. Comparing MBSE to CAD runs the risk of oversimplifying MBSE and setting up expectations that may not be met. Therefore, while CAD may represent a similar paradigm shift as MBSE in terms of digitalization, it may not serve as an adequate paradigm in terms of adoption and benefits. In this paper, we characterize and compare CAD and MBSE and identify the similarities and differences between them. We use the resulting insights to level the expectations of adopting and using MBSE.",2021
Accelerating MBSE Impacts Across the Enterprise: Model-Based S*Patterns,"Abstract Model-Based Systems Engineering (MBSE) methods can directly address “silos” problems. This paper reports on work by the INCOSE MBSE Initiative Patterns Challenge Team, focusing on Pattern-Based Systems Engineering (PBSE) using model-based system patterns based on the S*Metamodel, speeding and improving multiple SE processes. Distinctive are (1) the configurable, model-based nature of the patterns (not all historical patterns work has been model-based), (2) the technical scope of the models, encompassing requirements, design, failure mode, verification, other aspects, (3) the system scope of the models, encompassing whole systems, configurable product lines, and platforms, not just libraries of components, (4) the diverse and integrating cross-enterprise domains of the patterns, encompassing products, innovation processes, manufacturing, packaging / distribution, and other domains, and (5) the ability to enable a variety of COTS modeling languages and tools, PLM, and other enterprise information systems to integrate support of management and application of S*Patterns across enterprises.",2015
Improving simulation specification with MBSE for better simulation validation and reuse,"Abstract A simulation can be a complex architecture of simulation models, simulation tools, and computing hardware. However, its development often relies on informal procedures and can begin without a clear, complete, and formal definition of the simulation needs. Simulation traceability is then compromised, which prevents from easily validating whether a simulation meets the needs, or understanding the purpose of a simulation model that can be reused. This paper proposes an approach to improve the definition of simulation needs using Model-Based Systems Engineering. Based on the semi-automatic processing of a system architecture, it presents a new method to formulate a so-called “simulation request” which covers (1) the part of the system to be simulated; (2) the objective of the simulation; (3) the simulation quality, cost, and delivery; (4) the test scenarios; (5) the data for simulation calibration and validation; and (6) the verification and validation of the simulation. All the tooling required for the formulation of the simulation request were prototyped in a SysML editor, with machine learning capabilities for the choice of test scenarios. The method and tooling were tested for the case of an autonomous car passing under traffic lights.",2021
MBSE Grid: A Simplified SysML-Based Approach for Modeling Complex Systems,"Abstract After an organization makes the decision to adopt model-based systems engineering (MBSE), it must go a long way before this decision proves right. There are many obstacles in this way, like stories about unsuccessful MBSE applications, insufficient information on how to proceed, and employee resistance to the cultural change to name a few. Neither of them is a true issue, if suitable enablers for MBSE adoption are chosen. Nowadays, MBSE is enabled by Systems Modeling Language (SysML). However, SysML is neither a framework nor a method: it provides no information about the modeling process and thus must be combined with some methodology to become truly applicable. This paper summarizes the experience of various MBSE adoption projects in the form of a new approach for MBSE. The approach is based on the framework organized in a matrix view and is designated to guide system engineers through the modeling process and help them answer the questions, like how to start, how to structure the model, what views to build, which artefacts to deliver, and in what sequence.",2017
11.5.3 Cost-Benefit Analysis of SysML Modelling for the Atomic Clock Ensemble in Space (ACES) Simulator,"Abstract Systems Engineering has successfully supported the space industry since its inception with methodologies and techniques to handle complex projects. However, the conventional design approach, ‘Document-Based Systems Engineering’ (DBSE), is more and more reaching its limits. This research evaluates the benefits and the cost associated with the paradigm of ‘Model Based Systems Engineering’ (MBSE) instead of DBSE by applying the Systems Modelling Language (SysML) in the frame of the Atomic Clock Ensemble in Space (ACES) project. ACES is indeed deemed to be a suitable project for this study as it includes both a very complex ground segment as well as a challenging space segment on board the International Space Station. Following an introduction to SysML and the ACES mission, we first develop the metrics on which the cost-benefit analysis is based on. Then, we explain the methodology and models used to perform the analysis which targets to characterise DBSE versus MBSE based on the ACES ground segment development. Then, we use the Analytical Hierarchical Process to determine weighted criteria where attention is also given to the transitional process between DBSE and MBSE. After a critical reflection upon the analysis methodology and its results, we focus on lessons-learned from the use of SysML for the implementation of MBSE in space projects. We have identified five key areas of lessons-learned for using MBSE with SysML itself as well as main deficiencies for Enterprise Architect, the tool used to implement SysML. We conclude with seven suggested improvements which are considered valuable to help improving the performance and acceptance of MBSE for the development of (space) projects in the future.",2012
ENABLING AGILE SECURITY WITH MBSE AND UPDM,"ABSTRACT The agile, evolving threat environment and the increasing cost of damage being inflicted is placing tremendous pressure on the systems engineering discipline to design and implement effective security capabilities. One promising approach is the application of agile systems architecture to the design of system security. In order to be successful, however, systems engineers and security engineers will need to adopt a common design language and a common reference architecture that supports the definition and design of a system that has both resilience and continuous evolution of security capability. This paper presents an approach to overcome these obstacles through application of model-based systems engineering and use of enterprise architecture frameworks to address specific elements of an agile systems architecture which resides in both the design time and operating time domains.",2016
Ontology for Systems Engineering as a base for MBSE,"Abstract This paper presents a method for creating a Systems Engineering ontology to enable Model-Based Systems Engineering (MBSE). This method is based on creating a set of information models as defined in ISO 15926-11. ISO 15926 is a well-known life cycle data integration standard from the process industry. During the engineering phase of several capital facility projects, the method has also shown to be helpful in Systems Engineering communication between involved parties. Based on the information models and the set of relationships defined herein and in combination with a Reference Data Library (RDL), one can build or configure an information management system or data exchange mechanism to support Systems Engineering processes. The presented ontology has been validated in real projects based respectively on the software tool Relatics and on a RDF Named Graph application using a triple store. Experiences with the described ontology have shown that the topic of ontology is important for systems engineering and that there is merit in further examining the suitability of ISO 15288 as an ontological foundation, enabling formalized MBSE.",2015
TOWARDS A QUANTITATIVE FRAMEWORK FOR EVALUATING THE EXPRESSIVE POWER OF CONCEPTUAL SYSTEM MODELS,"ABSTRACT Conceptual models describe, explain, and specify the function, concept, structure, and behavior of complex systems. Quantifying the contribution of conceptual models to stakeholder understanding of the systems-of-interest has been a great challenge. This difficulty hinders justifying the use of formal modeling and simulation of complex systems and the adoption of a holistic model-based systems engineering (MBSE) approach. The informativity of a model is the value of the information it conveys. Conceptual system model informativity is a key performance indicator for MBSE. We introduce MIA – Model Informativity Analysis – a quantitative, utility-based, prescriptive approach for boosting conceptual models’ expressive power and measuring the value of the information they provide. We define an integrated informativity index, “I3”, which aggregates model scores of diverse informativity-enhancing factors. We demonstrate various aspects of MIA with Object Process Methodology, OPM – a model-based systems engineering paradigm and ISO-19450 standard. OPM caters to quantitative informativity analysis due its formality, comprehensive function-structure-behavior modeling, and bimodal equivalent graphical-textual representation.",2018
4.5.2 Model Integration – Extracting Value from MBSE,"Abstract Model-Based Systems Engineering is making its way into the design processes of many Systems builders. But as with any new concept, it must prove its worth by demonstrating significant Return-On-Investment. One of the benefits of having designs formalized in models is sharing information, models and data, between designers and teams, and allowing valuable analytics to be performed over that collection of information. This paper will discuss a gradually evolving approach to model integration, sharing and collaboration, from simple indexing and relationship maintenance to comprehensive frameworks for information integration based on the recent advances in ontology-based data fusion and model transformations.",2013
An MBSE Architectural Framework for Inter-Satellite Communication in a Multiorbit Disaggregated System,"Abstract The Multi-Orbit Disaggregated System (MODS) concept is a disaggregation strategy geared towards improved resiliency and flexibility of space missions by dispersing payloads and/or functionality across multiple small satellites (SmallSats). Although SmallSats make good candidates for deployment as a MOD System, their success hinges on the ability to realize reliable Inter-Satellite Communication (ISC). To this end, we investigate the efficacy of developing a model-based systems engineering (MBSE) Architectural Framework for ISC to guide and constrain instantiations of ISC architecture solutions. An MBSE architectural framework is a systems engineering artifact that defines a set of views required to describe an architecture based on MBSE principles and practices. It provides a standardized structure and guidance to capture architectural decisions while maximizing opportunities for commonality, consistency, and interoperability within the Domain of Interest. To achieve well-defined architecture descriptions, a MODS architectural framework pattern, and a comprehensive architectural framework for the ISC (sub)system are created and presented. The Systems Modeling Language (SysML) (OMG, 2019) serves as the modeling language for the framework design.",2022
Complexity identification in major infrastructure project information systems using graph theory,"Abstract Information management for major infrastructure projects is a critical task requiring ever increasing time and resources. Whilst the digitisation of construction industry information has progressed over multiple dimensions, there are still gaps in machine readable information for adequate suitability assessment of projects against their requirements. With digital twins at the heart of the digitisation agenda, it is vital that the industry expand the information available to validate and verify asset and network outcomes throughout their lifecycle. Within the construction industry, systems engineering is being deployed for asset and information requirements and model-based systems engineering can support digital techniques in managing construction information requirements. However, as an intensive task it must be selectively deployed to obtain value within a complex operating system. An opportunity exists to use data and relationships held in electronic document management systems that currently store project requirements. To achieve this, graph/network theory can be used to visualise and analyse the connectivity of document datapoints. This study deploys a python modelling environment to create digraphs that are used to visualise and identify key data from a document management system, identifying the highest degree and betweenness for documents from a sample size of 20 queries producing 327 vertices. It demonstrates a useful means of interrogating the data rapidly that is quick to scale and expand. There are opportunities to deploy this across multiple digital systems to further map complexity and interactions between them. Identification is the critical first step for data driven point of application ‘surgical’ model-based systems engineering.",2022
Integrating Safety and Reliability Analysis into MBSE: overview of the new proposed OMG standard,"Abstract Model-Based Systems Engineering (MBSE) is gaining popularity in organizations creating complex systems where it is crucial to collaborate in a multi-disciplinary environment. SysML, being one of the key MBSE components, has a good foundation for capturing requirements, architecture, constraints, views and viewpoints. It allows linking different types of models that come from different engineering disciplines. However, inherent safety and reliability aspects of a system are not addressed by the SysML language. A new group at the OMG has been created by industry experts in this area to address these aspects in a new standard. In this paper, with the intent to get feedback from the systems engineering community, the members of the newly formed group present the current state of the Safety and Reliability Analysis Profile for UML submission, which extends the SysML language with the tools for modelling safety and reliability aspects. This paper also explains the value users get from taking a model-based approach to safety and reliability analysis and integrating it into the MBSE toolkit. Open issues and challenges are also discussed.",2018
A Pragmatic MBSE Approach of Nissan Powertrain Team to Minimizing Document-Based SE,"Abstract This paper describes a pragmatic Model-Based Systems Engineering (MBSE) approach to reduce dependence on traditional documents and manage complexity of the electrified powertrain system. The approach enables requirements flow-down from an upper abstraction layer to the lower one(s) with stepwise analysis and design for a holistic system architecture of the system of interest. This approach is employed in the Nissan Powertrain development, which aims to solve challenges due to the traditional documents systems engineering (SE) approach to complex systems. This paper describes an MBSE approach developed for Nissan-7 methodology that focuses on knowledge capture, fast feedback on requirements and design, and early verification and validation. The significant benefits of using an MBSE approach over a traditional documents SE approach are: a holistic view of system architecture, knowledge reusability, communicability, and adaptability to new technologies. This paper presents proof of concept example projects that have demonstrated that it is viable to use this approach and apply it to an actual development for future work.",2022
Requirements management within a full model-based engineering approach,"Abstract In this paper we show how the Property-Based Requirements (PBR) theory can be used to fully integrate Requirements Engineering (RE) into a Model-Based Systems Engineering (MBSE) method using OMG UML and its SysML profile. The objective is to avoid “in-parallel” management of two distinct expressions of the same specification (or design): once in a set of textual requirements and once in a model, which must be maintained to be consistent. This is achieved by the identification, in common modeling concepts, of Requirement Tracker Artifacts (RTA) that match the pattern defined by the Property-Based Requirement theory. An illustration is provided with both the UML and SysML modeling language. We also outline how relationships defined “by construction” in the model can be exploited to carry out requirements management activities without addition of dedicated and redundant data. © 2011 Wiley Periodicals, Inc.",2012
Investigating structural gender inequality in the Norwegian pension system: An example of using MBSE in the evaluation of social systems,"Abstract There is an increasing interest in expanding the capacity of model-based systems engineering (MBSE) to include the evaluation and design of social systems. System dynamics modeling can easily be utilized for such a purpose. This study investigates gender equality in the Norwegian pension system using system dynamics modeling and serves as an example of how MBSE can be used to evaluate social systems. Many women often do not work or work part time in their childbearing/rearing years, which affects their pension amount. In countries that implement policies to equalize the pension level between the genders, national policies center on enabling women to increase their lifetime working hours (e.g. national childcare policies for daycare). One country that is rather advanced in this policy area is Norway. Using system dynamics modeling, this paper explores how women are disadvantaged structurally in the Norwegian pension system in the context of social investment strategy and the dual earner/ caregiver relationship.",2016
4.5.1 Systems Modeling with SysML – an experience report,Abstract Model Based Systems Engineering has been presented as the future way of working for quite some time now. In this paper the practice of Model based systems engineering with SysML within SAAB Aeronautics is presented. Three different cases of different ambition and complexity are presented along with an analysis of the results. A number of modification proposals to SysML based on the experience made are also presented.,2012
Making Smart Cities Smarter – MBSE Driven IoT,"Abstract The Internet of Things (IoT) is a system of systems (SoS) in every sense of the definition. A.P. Sage and others list five common SoS characteristics: operational independence of the individual systems, managerial independence, geographical distribution, emergent behavior and evolutionary development or independent life cycles. Typical examples include smart houses, the electric grid, complex military systems and so-called smart cities. The future of IoT success, including technology advancements and revenue generating potential across the business spectrum, is dependent on the application of solid Systems Engineering and Model Based Systems Engineering (MBSE) principals. Without MBSE, the complexity involved in the design, development, and deployment of IoT systems would consume both system and operational providers. Absent of any industry standards, IoT systems cannot be built in a vacuum and their success will only be realized through application of modern day systems engineering processes, methods, and tools. With the potential of 28 billion “things” connected to the Internet by 2020, it's not too difficult for anyone paying attention to this emerging technology trend to envision the massive scale of social, economic, and technological changes that will need to occur to realize this prediction. Technology advancements in consumer products will continue to evolve to facilitate connection to larger and larger IoT networks. This will be the catalyst that will drive entire infrastructures changes to: Federal, State, City, and local governments; product development companies; utility and service providers; and even to consumers and their homes in order to support the growing demand for connected products. The infrastructure and management will need to be established prior to, or in conjunction with, the smart systems that support them. This paper will show a traffic management system and connected systems in a large city and how an MBSE and SoS approach will help guide development.",2016
Towards Industrial Integration of MBSE into PLM for Mission-Critical Systems,"Abstract Model-Based Systems Engineering (MBSE) is a natural choice for engineering complex systems of systems that involve hardware and software components, deal with a huge number of heterogeneous requirements, and require solid verification and validation at multiple levels. However, industrial MBSE adoption requires solving multiple problems. Most of them originate when MBSE is incorporated into the production environment. For enterprise-level industrial solutions, this means integration into the Product Lifecycle Management (PLM) tool chain. This integration covers requirements, product line, variability, design, simulation, BOM, configuration, version, and CAD drawings management. The problem is that there is no clear path for integration. Due to the various types of data that can be interchanged between PLM and MBSE, the existing integration solutions are patchy and driven by clients use cases only. There is not enough information about recommended MBSE – PLM integration practices, use cases, and methods. This is a huge problem in the context of large-scale partnerships working on mission-critical systems, where engineering data has to be processed and managed in the most consistent way so as to be used by all the partners and through the different PLM activities. In this paper we will overview real-world PLM and MBSE integration cases from our company experience. We will map a path toward the right solution, and will dive deep into the practical side of Product Line Engineering (PLE) and MBSE integration.",2016
USING MBSE TO EVALUATE AND PROTECT THE ELECTRICAL GRID AS A SYSTEM OF SYSTEMS,"ABSTRACT A system of systems (SoS) is a large complex system, with varying degrees of operational independence, managerial independence, evolutionary development, geographical distribution, and lifecycle independence. Critical infrastructure such as the electrical grid contains all the aspects of a SoS. Models are routinely used throughout the complete lifecycle of the grid during analysis, definition, construction, operation, maintenance, and more. Due to the ever-increasing complexity of the grid, a single model encompassing all aspects of the grid would be impossible. Typical projects I have worked on encompassed millions of telemetered points just to operate a small portion of the overall grid. When the detailed mechanics of the individual equipment as well as cyber security, connection to the Internet, the Internet of things (IoT), power trading components, co-generation, and other aspects are added, the problems quickly become too complex to analyze. Hence, we need to abstract the problem into a SoS set of aspects and examine the systems both at the SoS level, as well as the detailed level. This will require the use of standardized systems modeling tools such as the systems modeling language (SysML), and the unified architecture framework (UAF) to define the overall goals, strategies, capabilities, interactions, standards, operational and systems architecture, systems patterns, and so forth. Analysis using these standard methods can help identify potential problems that can be analyzed by specialty tools and the results fed back into the SoS model. This paper will examine the electrical grid as a SoS, define common characteristics, identify issues and vulnerabilities, and model-based systems engineering (MBSE) strategies for addressing them.",2016
Implementing MBSE – An Enterprise Approach to an Enterprise Problem,"Abstract Model Based Systems Engineering (MBSE) is now widely accepted throughout the industry, from commercial to aerospace and defense. However, while we understand and accept the principles of MBSE, successful adoption and implementation is still a challenge within the industry. The migration from document-based systems engineering processes to MBSE requires more than purchasing tools and a one-week course on Systems Modeling Language (SysML). MBSE does not change the practice of Systems Engineering as defined in the INCOSE SE Handbook or ISO/IEEE 15288, but it does affect the way in which systems engineering processes are implemented and supported within and across organizations. Organizations adopting MBSE must address issues such as new skill and competency requirements for systems engineers, model and data management over the lifecycle of the system, and integration with other engineering tools and processes, among others. It is not a tool problem or a modeler problem. It is an enterprise problem and requires an enterprise approach. The approach must be defined and guided by an enterprise architecture, which is broader than just the engineering tools and their interfaces. It includes the enterprise strategic vision, capabilities, operational concepts, organizations, and material solutions required to achieve MBSE adoption, how they relate to one another, and their evolution over time. This paper provides a broad overview of the fundamentals of MBSE adoption and the broader effort of digital engineering transformation, presenting the digital engineering environment as a system-of-systems. It presents the use of enterprise architecture as a roadmap for MBSE adoption within the industry.",2020
1.4.3 Applying Systems Engineering Modeling Language (SysML) to System Effort Estimation Utilizing Use Case Points,"Abstract This paper proposes that as model based systems engineering begins to play a larger role in system development it may be utilized in estimating systems effort, making model based systems engineering more valuable to system engineering. This paper proposes to extend the Use Case Points (UCP) estimating approach, used by some software engineers, to SysML for estimating the systems engineering effort. The paper reviews literature that encourages the notion of a UCP method for Systems Engineering (UCPSE). Finally the paper maps out the research plan to develop and validate the UCPSE method.",2011
"Design thinking, lean startup, and high-technology marketing for human-centered systems engineering","Abstract The use of design thinking, lean startup, and high-technology marketing in systems engineering is presented as a case study. All were used and evaluated for their potential to improve systems engineering processes and design, address the challenges of culture change, increase the adoption rate of new technology, and engage with potential users and sponsors more effectively. Multiple examples of training and use on a Model-Based Systems Engineering (MBSE) initiative at a large government agency showcase how these approaches were tailored and used successfully for significant benefits such as enhanced collaboration and better problem definition and design solutions. Challenges remain for use by quiet thinkers and with virtual teams. These new ways of thinking are well aligned with creating and using new technologies and are suitable for situations involving innovation, uncertainty, and change within organizations. This case study intends to familiarize systems engineers with the application of these human-centered approaches, to interest systems engineers in incorporating these approaches into their work processes, and to inspire the systems engineering research community to investigate further.",2022
11.5.1 Early Formulation Model-Centric Engineering on NASA's Europa Mission Concept Study,"Abstract By leveraging the existing Model-Based Systems Engineering (MBSE) infrastructure at JPL and adding a modest investment, the Europa Mission Concept Study made striking advances in mission concept capture and analysis. This effort has reaffirmed the importance of architecting and successfully harnessed the synergistic relationship of system modeling to mission architecting. It clearly demonstrated that MBSE can provide greater agility than traditional systems engineering methods. This paper will describe the successful application of MBSE in the dynamic environment of early mission formulation, the significant results produced and lessons learned in the process.",2012
Beartooth: Nuclear material testbed with MBSE and digital twin,"Abstract Digital engineering can fundamentally change the construction and operation of complex projects. Traditional engineering teams operate in siloed tools and disparate teams. Throughout a project lifecycle, data is translated manually or over brittle point-to-point connections, which increases the risk of silent errors. These potential errors can cascade across the effort, resulting in significant project delays and cost overruns. Furthermore, traditional engineering projects are not designed for the rapid digitization that allows for advanced analytic tools. Digital engineering can create a cohesive data “source of truth” to ensure a project is designed for the digital future. There is a need for a standard toolset to normalize and integrate project datasets. Idaho National Laboratory (INL) has developed DeepLynx, a crucial tool to mitigate this data management problem. This paper introduces INL's digital engineering approach and provides a concrete example of a digital engineering design effort currently taking place with Beartooth, a new nuclear material processing testbed project. This paper will provide the benefits, challenges, and lessons learned in using digital engineering on this complex system. The digital engineering approach is utilizing model-based systems engineering, extended reality, and a digital twin. Finally, this paper will discuss the new possibilities provided by using a digital thread and twin during future operation of a nuclear fuel cycle testbed.",2022
From initial investigations up to large-scale rollout of an MBSE method and its supporting workbench: the Thales experience,"Abstract Thales is today in the process of rolling out field-proven model-based systems engineering method and workbench, on a large scale throughout its different business domains and countries. This article looks back at the past decade of coming of age, describes a few practical deployment cases in Thales entities and analyses success factors, both at people and organization level as well as at technical level. The close loop between operational users, solution experts and tooling development are identified as a key success factor.",2015
Enabling Repeatable SE Cost Estimation with COSYSMO and MBSE,"Abstract In their paper on “A Generalized Systems Engineering Reuse Framework and Its Cost Estimating Relationships,” (Wang, Roedler, et al. 2014) present an approach for estimation of systems engineering effort that extends the COSYSMO equation to account for the effort associated with Design With Reuse and Design For Reuse classification categories in the Generalized Reuse Framework. Implementation of this approach for cost estimation clearly depends on two critical items: (1) the ability to accurately and consistently count the size drivers; and (2) the ability to calibrate the model equation. As part of future work, they also describe the potential to use this approach as a management tool in architecture development – “a cataloging mechanism in organizing components of reference architecture.” This paper presents a practical implementation of the COSYSMO cost estimating relationship through extension of a Model Based Systems Engineering (MBSE) modeling environment with SysML for estimating end-to-end systems engineering effort in developing a system. The approach provides a new way of rapidly creating cost estimates, conducting cost-based analysis and trade studies with full traceability from the cost estimation parameters back to the architecture of referenced system of interest.",2017
MBSE Methodology Applied for a Technology Demonstrator in the Space Transportation Sector,"Abstract Over the last 40 years, NASA has sponsored many technology development programs for composite cryogenic tanks (CCT) in order to improve space launchers’ performance. However, they have learned certain lessons in terms of risk mitigation, design failures, lack of technology maturation and time constraints during development phases that push to reinforce the systems engineering perspective given the number of new functions, components and subsystems involved in these CCTs performance. The present paper suggests a Model-Based Systems Engineering (MBSE) methodology to reduce the challenges that CCTs entail in a technology demonstrator program currently in a conceptual phase for the Ariane 6 upper stage. Topics such as a strong operational analysis; project instability; a Fully Integrated Operational System (FIOS) model combined with a Manufacturing, Assembly, Integration \& Test (MAIT) model; requirements traceability; and model navigability issues are studied throughout the modelling process. Results from this approach show and ease the way to obtain information in a complex and large model intended to simulate our System of Interest (SoI)/CCTs life cycle. Consequently, CCTs can face NASA's aforementioned lessons learned from an early phase of the project in order to prevent similar adverse situations.",2020
4.2.2 Systems Integration Sandpit for Entrenching Innovative Systems Engineering Practice,"Abstract This paper presents the Systems Integration Sandpit (SIS) established by the Defence Science and Technology Organisation and University of South Australia. The paper commences by describing the first two stages of the SIS development and early achievements against the facility's primary goals: exploring systems integration issues, the formation of systems engineering competencies by providing experiential learning, and research infrastructure to support the evaluation of emerging systems engineering practices, such as into Model-Based Systems Engineering (MBSE). From here, the paper discusses the ongoing research program for Stage Three that is focused on MBSE and systems engineering for evolving systems.",2010
Explicating System Value through First Principles: Re-Uniting Decision Analysis with Systems Engineering,"Abstract System complexity continues to grow, creating many new challenges for engineers and decision makers. To maximize value delivery, “both” Systems Engineering and Decision Analysis are essential. The systems engineering profession has had a significant focus on improving systems engineering processes. While process plays an important role, the focus on process was often at the expense of foundational engineering axioms and their contribution to system value. As a consequence, Systems Engineers were viewed as process developers and managers versus technical leaders with a deep understanding of how system interactions are linked to stakeholder value‥ With the recent shift toward Model Based Systems Engineering (MBSE), Systems Engineering is “getting back to basics,” focusing on value delivery via first principles, using established laws of engineering and science. This paper describes how Pattern Based Systems Engineering (PBSE), as outlined within INCOSE's Model Based Systems Engineering (MBSE) initiative, explicates system value through modeling of first principles, re-uniting Systems Engineering and Decision Analysis capabilities.",2016
5.3.1 Emergence: All in the Minds,"Abstract Model Based Systems Engineering (MBSE) rightly attracts much attention. However, when we start to consider models that are ‘beyond’ UML (or any similar language) we encounter one of the major challenges of systems thinking – that is that we each have different perspectives - or models - on what reality is. No two people approach a situation with exactly the same background, knowledge and objectives - there will always therefore be differences between their personal understanding and view of the situation. Reconciling these differences - indeed even recognising these differences - presents a major challenge related to MBSE.",2012
Modeling with SysML,"Abstract The OMG Systems Modeling Language (OMG SysML™) is a general-purpose, graphical, modeling language for specifying, analyzing, designing, and verifying complex systems that may include hardware, software, information, personnel, procedures, and facilities. In particular, it provides graphical representations with a semantic foundation for modeling system requirements, behavior, structure, and parametric equations that can integrate with a broad range of engineering analysis. SysML represents a subset of UML 2.0 with extensions to satisfy the requirements of the UML™ for Systems Engineering RFP. The OMG SysML™ Specification was adopted in May 2006. For more information on SysML, including articles, tool vendor and related links, and the specification, go to http://www.omgsysml.org/. This tutorial provides an introduction to how SysML can address your systems engineering needs, including: background and motivation, an overview of the SysML diagram types and language concepts, a demonstration of how the language can be used throughout a Model-based Systems Engineering (MBSE) process. A class exercise is included to help solidify the student's understanding of the language. The course will also include a brief introduction to a typical SysML tool. Attendees should gain appreciation of the value of model-based Systems Engineering versus legacy, document-centric methods; awareness of the graphical notation; and a high level understanding of when and how a Systems Engineer can exploit the various diagrams and models as part of their systems engineering process.",2011
SYSTEMS SCIENCES AND SYSTEMS ENGINEERING RESEARCH NEEDS,"ABSTRACT The Systems Engineering Research Center (SERC) Pathfinder project in collaboration with INCOSE identified systems engineering research and workforce development needs. The results indicate five broad areas of systems engineering research needs in order of emphasis: mission engineering; agile development and engineering at the scale of the enterprise; model-based systems engineering; modeling and assessing system trust, security, and resilience; and development of pragmatic methods to deal with and to leverage increasing complexity and analytics, and leveraging machine learning for this purpose. Within INCOSE, the survey of Fellows worldwide emphasizes model-based systems engineering along with more general systems engineering modeling and measures. For both SERC and INCOSE, the results will guide priorities over the next two to five years.",2018
Modeling with SysML,"Abstract The OMG Systems Modeling Language (OMG SysML™) is a general-purpose, graphical, modeling language for specifying, analyzing, designing, and verifying complex systems that may include hardware, software, information, personnel, procedures, and facilities. In particular, it provides graphical representations with a semantic foundation for modeling system requirements, behavior, structure, and parametric equations that can integrate with a broad range of engineering analysis. SysML represents a subset of UML 2.0 with extensions to satisfy the requirements of the UML™ for Systems Engineering RFP. The OMG SysML™ Specification was adopted in May 2006. For more information on SysML, including articles, tool vendor and related links, and the specification, go to http://www.omgsysml.org/. This tutorial provides an introduction to how SysML can address your systems engineering needs, including: background and motivation, an overview of the SysML diagram types and language concepts, a demonstration of how the language can be used throughout a Model-based Systems Engineering (MBSE) process. A class exercise is included to help solidify the student's understanding of the language. The course will also include a brief introduction to a typical SysML tool. Attendees should gain appreciation of the value of model-based Systems Engineering versus legacy, document-centric methods; awareness of the graphical notation; and a high level understanding of when and how a Systems Engineer can exploit the various diagrams and models as part of their systems engineering process.",2010
Towards a Quantitative Framework for Evaluating the Expressive Power of Conceptual System Models,"Abstract Conceptual models describe, explain, and specify the function, concept, structure, and behavior of complex systems. Quantifying the contribution of conceptual models to stakeholder understanding of the systems-of-interest has been a great challenge. This difficulty has hindered justifying the use of formal modeling and simulation of complex systems and the adoption of a holistic model-based systems engineering (MBSE) approach. The informativity of a model is the value of the information it conveys. Conceptual system model informativity is a key performance indicator for MBSE. We introduce MIA – Model Informativity Analysis – a quantitative, utility-based, prescriptive approach for boosting conceptual models’ expressive power and measuring the value of the information they provide. We define an integrated informativity index, “I3“, which aggregates model scores of diverse informativity-enhancing factors. We demonstrate various aspects of MIA with Object Process Methodology, OPM – a model-based systems engineering paradigm and ISO-19450 standard. OPM caters to quantitative informativity analysis due its formality, comprehensive function-structure-behavior modeling, and bimodal equivalent graphical-textual representation.",2016
1.6.2 Generic Approach for Systems Design Optimization in MBSE1,"Abstract The complexity of contemporary systems causes Systems Engineers great pains during early architectural design phases. Model-Based Systems Engineering (MBSE) proposes methodologies to deal with complexity and streamline design processes, but the penetration of the new approach is slow. This paper proposes a generic SysML based methodology for improving the Architectural Design phase of Systems and mitigate the barriers for MBSE adoption. The proposed methodology suggests an alternative way to formalize requirements, define design alternatives, automate design space exploration and examine optimization results in the original modeling format. A representative example is provided. A glossary is included at the end of the paper.",2012
2.3.2 Reducing the Effort for LCC Evaluation and Optimization,"Abstract Model-Based Systems Engineering (MBSE) is making its way into the design processes of many Systems builders. As with many other disciplines, MBSE can greatly benefit from the principles of reuse, but the very term assumes the existence of a large number of available models which may not be available due to the newness of MBSE activities. There exists, however, a great capital of artifacts from other domains, which Systems Engineering relates to and can leverage. This paper explores several practical examples of such approaches in the context of an architecture affordability study, reducing the effort and time required to identify a preferred architecture solution that is optimal for a given set of metrics including life cycle cost and system availability.",2014
1.3.1 Microcosm – A Systems Engineering and Systems Integration Research and Learning Sandpit,"Abstract This paper describes the Microcosm program established by DSTO and UniSA to research and to promote good systems engineering and systems integration practice. The initial focus of the Microcosm project is research into the application of Model-Based Systems Engineering (MBSE) in complex systems engineering and systems integration programs. The paper outlines what Microcosm seeks to achieve with particular focus on the high-level architecture of the Stage 1 solution. The paper concludes by describing the Stage 1 implementation of the Microcosm ‘sandpit’ including the information management environment, the simulation, modelling and control environment, and the physical systems including unmanned ground vehicles, sensors, communications infrastructure and effectors.",2009
Two Variant Modeling Methods for MBPLE at Airbus,"Abstract Product Line Engineering (PLE) is a fundamental component of systems engineering. As postulated in INCOSE's Vision 2025, Model-Based Systems Engineering (MBSE) is becoming the norm for systems engineering. Thus, we need to integrate PLE into MBSE. An important aspect of this integration is the definition of model-based methods. This paper defines two possible approaches for variant modeling with SysML applied at Airbus and provides insights into their application in practice.",2022
5.1.1 Parametric Analysis Through a Model-based Reference Architecture for Medical Device Development,Abstract This paper presents a proof of concept for the integration of the INCOSE Biomedical-Healthcare Model Based Systems Engineering (MBSE) Challenge Team's modeling framework with a model-based analysis method. This project investigated the inclusion of numerical analysis of an infusion pump and anesthesia using mathematical models integrated into the team's larger scope SysML drug delivery system medical device development modeling framework. The results of this work demonstrate how the results of a stochastic analysis can be integrated into a larger MBSE model. The inclusion of these results makes it possible for high level decisions to be informed by detailed engineering model analysis to give medical device designers the necessary data to speed development and utility of the devices they propose.,2014
Issues in Conceptual Design and MBSE Successes: Insights from the Model-Based Conceptual Design Surveys,"Abstract The INCOSE Model-Based Conceptual Design (MBCD) Working Group was established in 2011 with the purpose of advancing the body of knowledge and practice of systems engineering (SE), through the development and application of model-based systems engineering (MBSE) methodologies to the concept stage of a system's life-cycle. The Working Group strives to achieve its vision through a series of activities conducted by members of the working group. One of these activities was to conduct a survey of people involved in MBCD, with the goal: To identify the issues associated with performing Conceptual Design and areas where MBCD has been successful. As part of this activity, two surveys, one in 2014 and one during 2015, have been conducted. This paper begins with an overview of the first survey and the need for a second survey that arose from the possibility of non-response bias being present in the first survey's results. Following this, the results obtained from the second survey are presented, compared with the results from the first survey and discussed. The key insights the authors uncovered from the results, survey workshops, and symposium presentations on both surveys are also identified. The paper concludes with a discussion on how these results are being used to inform current MBCD WG activities and strategic planning.",2016
Frenemies: OPM and SysML Together in an MBSE Model,"Abstract A Frenemy is “a person with whom one is friendly despite a fundamental dislike or rivalry.” (OED, 2018). The Systems Modeling Language (SysML) and the Object Process Methodology (OPM) are two such frenemies. OPM and SysML are different means of achieving Model-Based Systems Engineering (MBSE), each with their own benefits, issues, supporters and detractors. The National Defense Industry Association (NDIA) defines MBSE as “an approach to engineering that uses models as an integral part of the technical baseline that includes the requirements, analysis, design, implementation, and verification of a capability, system, and/or product throughout the acquisition life cycle.” (NDIA, 2011) SysML is based on the Unified Modeling Language (UML) and includes diagrams that can be used to specify system requirements, behavior, structure and parametric relationships. SysML provides a means of defining high-level abstract systems down to detailed physical systems. OPM is a “conceptual modeling language and methodology for capturing knowledge and designing systems. Based on a minimal universal ontology of stateful objects and processes that transform them, OPM can be used to formally specify the function, structure, and behavior of artificial and natural systems in a large variety of domains.” (ISO, 2015) OPM is used in some systems engineering graduate courses. Students graduating from these institutions are struggling to integrate the differing styles, philosophies, concepts and processes of SysML and OPM. A literature search reveals some papers that contrast SysML and OPM, but none that describe how the two can work together. This paper discusses a synergy of SysML and OPM in a SysML tool rather than promoting one language over another.",2019
"A value-driven, integrated approach to Model-Based Product Line Engineering","Abstract Pushed to the edge of their capabilities in a highly competitive world market, organizations everywhere look for efficient means to innovate and develop their products and services. This paper proposes and illustrates a holistic integration of Product Line Engineering (PLE) and Model-Based Systems Engineering (MBSE) to connect and align market and business analysis, architecting, design, and engineering. This value-driven, integrated approach capitalizes on MBSE best practices to tackle the concrete challenges of product line engineering.",2021
The Use of MBSE in Infrastructure Projects -- An MBSE Challenge Team Paper,"Abstract Large infrastructure projects are complex, difficult and expensive. They are found in the transportation, energy, and communications sectors. These include projects for aerospace, and construction of public works and utilities, airports, sea ports, rail, highways and bridges, among others. They are subject to the requirements of a multitude of stakeholders, take many years to build, are often influenced by politics, and can lack focus or involve scope creep. They are also subject to laws and regulations, operational concepts, site conditions, external interfaces and utilities, industrial codes and standards, operator needs, the public interest and other influences. Projects often suffer several types of problems caused by inadequately determining, engineering and managing requirements. For example, contractual and regulatory commitments can be overlooked. Requirements do not flow down to subcontractors or suppliers. Requirements are incomplete, unclear and subject to widely varying interpretations. Projects have difficulty demonstrating requirements were met. Examples of projects where virtually all of these problems occurred include the Millennium Dome in the UK which was bankrupt shortly after opening (Projects, 2012), and the Freedom Tower (New World Trade Center) in New York City (Time, 2005). Solving these and other issues drive the need for more formal approach to managing these projects. There is a significant advantage to be gained by the adoption of systems engineering methods within the remainder of the infrastructure sectors. The INCOSE Infrastructure Working Group was formed to demonstrate how systems engineering can assist with infrastructure projects. As a part of that effort, we have created a drawbridge model to demonstrate how Model-Based Systems Engineering (MBSE) can assist engineers in defining clear requirements, defining scope, demonstrating regulatory compliance, identifying stakeholders, etc. It uses the Unified Profile for DoDAF and MODAF (UPDM) and the Systems Modeling Language (SysML). This paper will describe the model and demonstrate how the different aspects of MBSE help infrastructure projects. The model contains close to 100 diagrams and reports, so size constraints of the paper mean that only selected parts of the model can be described. For the complete model, visit the IWG area of the INCOSE website. http://www.incose.org/practice/techactivities/wg/infrastructure/",2015
System models and model classification in tribological system development,"Abstract Current requirements for the reduction of CO2 emissions, as well as for the improvement of durability and reliability of sociotechnical systems such as passenger cars, lead to an increase in development effort in order to increase efficiency and system lifetime. Tribological systems play an essential role in the development of sociotechnical systems, but have proved to be particularly complex. The development of tribological systems, as part of the overall system under development, is an interdisciplinary effort. Involvement of solid mechanics, fluid mechanics, rheology, and many more scientific disciplines is essential to cope with the high number of nonlinear relationships, which often cause unpredictable system behavior. This paper contributes to the scientific field of tribology by introducing concepts of model-based systems engineering for the specific case of elastohydrodynamic lubrication states. The elastohydrodynamic lubrication state of tribological system has been chosen as example to show how system models can be used to better describe the behavior of a system by connecting several specific models. In order to gain an overview of the models used in tribological system development, a system cube was used to structure the models. The system cube enabled gaps and overlapping model zones to be identified. Finally, the role of system models in development and the benefit of using system models to solve problems that cannot be solved by a single technical discipline but only in an interdisciplinary effort are discussed. An approach to connect models and methods to describe a system in an elastohydrodynamic lubrication state is presented.",2020
REQUIREMENTS FOR THE NEXT GENERATION SYSTEMS MODELING LANGUAGE (SysML® v2),"ABSTRACT This article provides an overview of the requirements for the next generation Systems Modeling Language (SysMLR v2). The requirements are specified in the SysML v2 Request for Proposal (RFP) that was issued in December 2017 by the Object Management Group (OMGR). The issuance of the RFP culminates a one-and-a-half-year effort by the SysML v2 RFP Working Group to develop the requirements for SysML v2 that will improve support for model-based systems engineering (MBSE). In particular, the requirements are intended to enhance the precision, expressiveness, and usability of SysML v2 relative to SysML v1. A complementary RFP entitled, “The SysML v2 API and Services RFP” is also being developed to enable interoperability between SysML modeling tools and other model-based engineering tools.",2018
Augmenting requirements with models to improve the articulation between system engineering levels and optimize V\&V practices,"Abstract Model-based systems engineering has developed significantly over the last few years, resulting in an increased usage of models in systems specification and architecture description. The question of the positioning of requirement engineering versus MBSE is a recurrent one. This paper describes one vision of this articulation where textual and model requirements actually complete each other. The results are improved contracts across engineering levels and more formalized verification and validation practices.",2019
From Model-based to Model and Simulation-based Systems Architectures—Achieving Quality Engineering through Descriptive and Analytical Models,"ABSTRACT Systems architecture design is a key activity that affects the overall systems engineering cost. Hence it is fundamental to ensure that the system architecture reaches a proper quality. In this paper, we leverage model-based systems engineering (MBSE) approaches and complement them with simulation techniques, as a promising way to improve the quality of the system architecture definition, and to come up with innovative solutions while securing the systems engineering process.",2023
Models as enablers of agility in complex systems engineering,"Abstract Complex systems engineering programs not only deal with the inherent complexity of the systems they develop, they also face shorter time-to-market, increasing changes in environments and usages, and more sophisticated industrial schemes. The ability to adapt to new circumstances, or agility, becomes mandatory. In this paper we present how Model-Based Systems Engineering (MBSE) approaches can be enablers of the implementation of agility in complex systems engineering programs. Known to provide additional engineering rigor and quality, MBSE also brings key concepts favoring agility and co-engineering.",2020
5.5.2 Efficient and Effective Systems Integration and Verification Planning Using a Model-Centric Environment,"Abstract There is an increasing interest in Model-Based Systems Engineering (MBSE) practices in academia and industry. The majority of research and adoption in industry is relevant to the early phases of the system life-cycle, where model-based design is expected to provide improved results during system development. However, little attention has been paid to the application of such methodology to later phases of the development, and in particular to system integration and verification of the actual manufactured system, which continues to be done in the traditional document-centric environment. This paper proposes a model-centric environment for system integration and verification activities at the end of the development cycle and presents benefits in effectiveness and efficiency in planning system integration and verification activities for a system under a model-centric environment.",2013
Architecture Design of Nuclear Power Plants Systems through Viewpoints-based Systems Analysis,"Abstract This paper presents a method to perform the architecture definition and design of Nuclear Power Plants (NPP) systems. This method is based on the viewpoints concept and on an existing Model-Based Systems Engineering (MBSE) approach that was tailored to address the complexity factors of NPP engineering, progressively guarantee the comprehensiveness of the design and facilitate the safety assessment. This paper also provides an illustration of how this method was applied to define the architecture of a Nuclear Island system, provides valuable findings for the designer organization regarding the deployment of MBSE approaches and presents their key benefits and future improvement actions.",2018
"Knowledge Capture, Cross Boundary Communication and Early Validation with Dynamic A3 Architectures","Abstract Understanding and extracting systems information is a time consuming, demanding and expensive process. Complicating factors are cross-boundary communication methods and tools. We combine an informal and formal systems engineering method; Lean manufacturing principles and Model Based systems Engineering (MBSE) resulting in Dynamic A3 architecture. Dynamic A3 Architecture is a hierarchy of overviews from super-system to sub-system that the reader can navigate through active links. We applied the method to a lube oil system of a gas turbine package. We found that Dynamic A3 Architecture can ease internal and cross boundary communication, train new employees, facilitate knowledge capture, and share common understanding of the “system of interest”. A functional sequence diagram, which is a hybrid of a state and functional diagram, can assist in early validation of process applications.",2013
6.1.3 Model-based Technical Planning: An evaluation of description techniques,"Abstract As model-based systems engineering (MBSE) gains ground as a real alternative for complex industrial projects compared to the traditional plan or document-driven systems engineering paradigm, several challenges remain to be dealt with. MBSE requires not only the technological system-of-interest to be included in the common model repository used for MBSE, but also other elements and structures that are used to describe vital aspects of a complex technical project. This paper elaborates on how the primary planning document, the Systems Engineering Plan (SEP) can be evolved from the document-driven to the model-driven paradigm, and how some SysML diagram types along with architecture framework viewpoints may be used to model the most common content of a SEP. The evaluation is based on industrial experiences using MBSE in real-world industrial development and procurement projects. Several examples on how SysML may be used to represent SEP elements are presented along with suggestions on potential directions for further work.",2009
Whose Line is it Anyway? Using MBSE in the Management and Acceptance of the Defence Lines of Development,"Abstract As we continue to apply Systems Engineering and Model Based Approaches to the acquisition of complex and closely coupled systems, the ability to map, analyse and manage the interfaces across all the component elements of a capability presents a significant challenge. This paper provides an overview of the application of a Model Based Systems Engineering Approach to a case study, supported by the Whole-of-System Analytical Framework (WSAF), to manage the integration and acceptance of the Defence Lines of Development (DLOD) and its application to a case study in the United Kingdom (UK) defence acquisition domain. The approach seeks to provide the ability to conduct analysis of DLOD elements down to a significant level of granularity, including the inter- and intra-DLOD dependencies. The aim being to provide a comprehensive, consistent and systematic view of the DLODs across a complex and disparate stakeholder landscape. This supports the ability to manage the integration and acceptance of the DLODs which, when successfully effected, deliver military capability.",2017
Distributed Design of Computer Based Systems: Methodology,"Abstract The distributed design of computer based systems requires a methodology that supports both the modeling of the distributed system and the ability to assess the impact of requirements and engineering change while the system is at any stage of development. Model Based Systems Engineering, MBSE, provides an approach to these twined problems with the advantages of tailorability to application, culture, notations, and tools. It is critical that traceability linkages be constructed in the normal course of engineering development and that they be adequate for an analysis of the impact of change.",1993
A Model-based Reference Architecture for Medical Device Development,"Abstract The application of systems engineering within the medical device domain must adapt to its unique challenges such-as the regulatory environment that these devices have to be designed within to ensure patient safety, and the nature of the interactions between the device and the patient. The sheer number of regulations imposed by government agencies such as the U.S. Food and Drug Administration and various international agencies adds to the complexity of designing these systems. This also presents an opportunity to implement a Model-Based Systems Engineering (MBSE) approach to capture the regulatory environment and map those specialized requirements to components within the system that address those requirements. In this study, we present a model of a reference architecture that can be used as a starting point for the system design of medical devices. Although the state of the model has not been fully matured, this approach offers the potential to more efficiently address the complex regulatory requirements, and reduce the time to design medical devices.",2012
SUBSEA OIL PRODUCTION: THE DESIGN BASIS,"ABSTRACT The origination of the design basis document for subsea production systems (SPS) in the oil industry is a challenging task. The completeness and correctness of the design basis is crucial for the successful execution of the project in safety, technical, and commercial terms. This work aims to establish, through systems engineering and through information models (model-based systems engineering (MBSE)), how the SPS design basis should be optimally developed. The MBSE is integrated into this work by the theory of transactional processing, which is implicit in the universal thought process when using behavioral models but seldom explicitly referred to. The current industry practice for developing an SPS design basis is compared to the suggested optimal process. The work constitutes the foundation for the revised design basis issuing procedure and the design review practice for the Aker Solutions worldwide subsea business. This work is part of a PhD at the Norwegian University of Science and Technology.",2017
6.1.2 Generating SysML Views from an OPM Model: Design and Evaluation,"Abstract Conceptual modeling is key to Model-Based Systems Engineering (MBSE) approaches. OPM – Object-Process Methodology and SysML – OMG Systems Modeling Language are two state-of-the-art conceptual modeling languages. While both languages aim at the same purpose of providing a means for general-purpose systems engineering, these languages take different approaches in realizing this goal. As each of the languages has its relative strengths and weaknesses, ways to create synergies between them are considered in this work. We propose combining advantages of each language through automatic generation of SysML views from an OPM model. To this end, we developed a new algorithm and software application for implementing the OPM-to-SysML views generation, and evaluated the results through an experiment conducted for this purpose. Our approach can benefit various stakeholders by promoting better system understanding, standardization, and improved interoperability.",2009
4.3.2 Systems of Innovation II: The Emergence of Purpose,"Abstract Engineers design mindful of the purpose of a system. So, engineering conceptual definitions of the concept of “system” frequently include the idea of purpose. However, we also use “system” to describe things not human-designed. We might refer to purpose in living systems, as in the immune system, but biologists use “function” to avoid this. What about inanimate natural systems? Do Saturn's rings have a purpose, or function? And what about pathologies, when systems don't work as they “should”? Do all these “systems” terms and concepts serve us well across these different domains, or are some force-fit? Using the language of Model-Based Systems Engineering (MBSE) and Pattern-Based Systems Engineering (PBSE), this paper describes a framework in which “system” and “purpose” emerge at different levels, apply uniformly, naturally, or not at all, and inform. The framework is the Systems of Innovation (SOI) Pattern. Practical benefits include insights into the nature of innovation across these domains, improving ability to perform innovative systems engineering.",2013
4.2.2 Application of Systems Engineering to Improve Extracorporeal Membrane Oxygenation (ECMO) Therapy,"Abstract Though able to boost survival rates from below 25\% to nearly 75\% in patients that qualify for treatment, the complexity of the currently implemented Extracorporeal Membrane Oxygenation (ECMO) system of systems keeps it from being used across an even wider range of patients. Representatives from the Children's Healthcare of Atlanta asked a team from the Georgia Tech Professional Masters in Applied Systems Engineering for assistance in reducing the complexity of the current implementation as well as help provide a way forward for future improvement to the therapy. This paper examines the application of systems engineering methodologies as performed by the team, including Model Based Systems Engineering (MBSE), gap analysis of the system architecture and data visualization prototyping. Additionally the paper describes how the selection of tools and models fostered dialog between two groups of distinctly different backgrounds and provides a proposed roadmap for robust system design, development and future work.",2012
An Investigation of Functionalities of Future Tool-chain for Aerospace Industry,"Abstract Model-based systems engineering (MBSE) is advocated as one important means to deal with increasing product complexity. In this paper, we investigate the increasing interest and use of MBSE in the aerospace domain. The growth of MBSE tools causes new challenges in the corresponding tool-chain development including data and information management, tool's applicability identification, tool-integration, etc. In this paper, a literature survey into trends and usages of large-scale MBSE tool-chains is presented. It is found that the key functionalities include functional roles, elements, abstraction levels and tool integration techniques. Additionally, we propose a methodology to provide guidance in optimizing future MBSE tool-chain functionalities for the aero-industry. In closing, we present a case study in order to illustrate the decision making process required to develop expected tool-chains by the proposed methodology.",2017
Model Based HSI \& Operational Process Simulation,"Abstract Human-Systems Integration (HSI) activities are focused on the human engineering aspects of the systems designing, manufacturing, operation, and maintenance. It is part of the system engineering process. Model-Based Systems Engineering (MBSE) is a concept, which is implemented by languages and software tools, for supporting all activities of development, operation, and system retirement, using a set of coherent models. This paper proposed how MBSE usage can be used to support the holistic HSI, from requirements and operational analysis, through retirement. The suggested methodology, which includes the use of Operational Process (OP) diagrams and model-based 3D (three dimensional) simulation, can be applied to introduce further discipline and rigor to address complex HSI, marking an improvement over current document-based practice.",2022
WILL SYSTEMS-OF-SYSTEMS MODELS SUPPORT COST RECOVERY FOR CRITICAL INFRASTRUCTURE RESILIENCY?,"ABSTRACT The fragility of critical infrastructures and the interdependency of infrastructures such as electric grids, water, wastewater, agriculture and manufacturing supply chains should encourage cost recovery for investments in resilience, not merely system reliability. Most cost recovery standards support investments for safety and reliability, but not resilience. If model-based systems engineering (MBSE) and virtually all other engineering domains can demonstrate greater system protection, adaptability, and recovery (minimizing cascading harms to connected critical infrastructures), regulatory standards should provide cost recovery for investments in resilience. Beyond cost-recovery incentives, systems-of-systems engineers can design facilities for supply component availability, surge production, and other commitments to more robust supply chains. Firms that plan for supply chain disruptions can expand their market shares during and after emergencies, while other firms decline or fail entirely. System designs for greater resiliency may reward firms that overcome system shocks, even when resiliency investments are not automatically priced into goods sold or services delivered.",2016
Model-based architecture and programmatic optimization for satellite system-of-systems architectures,"Abstract This paper presents a new approach to architecture optimization for an enterprise or System of Systems (SoS) with the goal of enhancing individual system acquisition programs and the operational effectiveness of the enterprise as a whole. Replacing the current common practice of utilizing one or two technical parameters serially to evaluate candidate architectures is a better method that employs a fuller set of technical and programmatic variables in a Model-Based Systems Engineering (MBSE) context. Integrated architecture modelling and optimization is performed in a tool-supported MBSE process to identify an optimum architecture solution. This specifically addresses the predesign phases of a system acquisition program where leverage on total program cost is the greatest. We seek to improve the ability to deal with challenges such as management independence, technical diversity, and lack of synchronization across the programs involved in a SoS. This implementation results in a higher quality optimization with a more informed, and traceable selection decision. An example satellite communications SoS case study is used to develop the approach and highlight its utility.",2018
SEMANTICALLY-ENABLED MODEL-BASED SYSTEMS,"ABSTRACT This paper describes a novel approach to the development and integration of semantics to the model-based systems engineering and operation of safety-critical network of systems. Engineering models work directly with formal domain and meta-domain (especially time and space) knowledge that are determinate, provable (ambiguity free), and executable. Engineers encode knowledge as semantic blocks, which are an integration of ontologies, rules, and communication and computation interfaces. This paper exercises these concepts in a collision avoidance problem involving autonomous agents at a traffic intersection.",2017
Model-based Interface Specification for Systems Integration in Systems of Systems Engineering,"Abstract The key to enable systems integration is that systems inter-communications are accurately and unambiguously specified. In line with ongoing Model-based Systems Engineering (MBSE) initiatives aiming to support systems engineering activities by means of formal and graphical models, we have introduced a logical model for the definition of Interface Communication Modelling Language (ICML), to enable a model-based approach for interface specification. ICML is based on UML and can potentially be integrated with other systems models in similar forms, e.g., SySML, and with systems of systems models in UPDM or related frameworks. We have designed ICML basing on a preliminary domain analysis on radio signal specifications, with application to space systems. In the analysis, we have specifically considered simple digital and unidirectional signals, and subsequently we have included a method to use ICML for Time-Division Multiplexed signals. We also present an excerpt of the ICML metamodel and a simple example application.",2012
Systems Modeling Language (SysML v2) Support for Digital Engineering,ABSTRACT The OMG Systems Modeling Language™ (SysML®) was adopted in 2006 and has been used by many organizations to support their efforts to transition to a model-based systems engineering (MBSE) approach. SysML v2 is the next generation Systems Modeling Language and is intended to address many of the limitations of SysML v1. This paper highlights how the SysML v2 language and the new standard Application Programming Interface (API) can enable MBSE and digital engineering. SysML v2 is being developed by the SysML v2 Submission Team (SST) in response to requirements issued by the Object Management Group (OMG). The final submission to the OMG is planned for 2022. The draft SysML v2 specifications and the open-source SysML v2 pilot implementation can be found at https://github.com/Systems-Modeling.,2022
A Model-Based Method for Design Option Evaluation of Off-the-Shelf Naval Platforms,"Abstract Off-the-Shelf (OTS) strategies have become prevalent in the acquisition of naval platforms because the strategy is perceived as a means of reducing the acquisition cost and schedule risk. This paper covers a method to conduct an evaluation of shortlisted OTS naval platform design options that utilises Model-Based Systems Engineering (MBSE). MBSE is used as a means of developing and managing the traceability of evaluation criteria, managing the evaluation itself and facilitating reuse of the design patterns present both in naval platforms and acquisition processes. The paper concludes with a description of a pilot test of the method for an Offshore Patrol Vessel, which found it to be useful to manage the evaluation criteria traceability, maintain design data and identify weak spots in OTS design options.",2017
Academic application of trade-off studies to support a CubeSat project,"Abstract Academic CubeSat projects offer students and researchers hands-on engineering experience and can deliver cutting-edge research data. The CubeSat projects are highly multidisciplinary and require teamwork skills as well as engineering expertise. A challenge for academic CubeSat projects is the high turnover of graduating students, which makes knowledge management complicated. Model-Based Systems Engineering (MBSE) offers functionality that can address many of the challenges academic CubeSat teams experience. This paper presents a trade-off study using the Analytical Hierarchy Process (AHP) to select an MBSE software for use by students. Literature on academic application of formal trade-off studies in student teams is limited. The case study described here shows how tangible and intangible factors are addressed using the AHP method, and a discussion of the process and results is provided.",2022
Using Visual Diagrams and Patterns for Consistent and Complete Requirements,"Abstract This paper describes a visual and textual requirements representation based upon Model-Based Systems Engineering (MBSE) requirements patterns. This underlying representation is a rethinking of the concepts behind systems requirements. It takes into account the subjective stakeholder value, the life cycle modes, objective technical behavior and it combines the best of agile User Stories with MBSE patterns. This underlying MBSE requirements pattern improves the quality of conversations between key stakeholders of the system. Agile User Stories begin the conversation by focusing on the problem domain, addressed by MBSE pattern features. MBSE patterns then continue the conversation for the technical requirements. The content and relationships between the key MBSE patterns capture the product learning of the organization for use on future applications of similar products. The complexity of re-use and re-application is reduced by configurability. Organizations re-apply this product learning in new products resulting in lower costs and increased quality.",2016
Case Study: Application of DoD Architecture Framework to Characterizing a Hospital Emergency Department as the Intended Use Environment for Medical Devices,"Abstract This paper presents a case study by the Biomedical-Healthcare Model-Based Systems Engineering (MBSE) Challenge Team in response to inputs received during workshops held at the 2015 and 2016 INCOSE International Workshops. At IW2015 and IW2016, the Challenge Team held workshops, including clinicians and systems engineers, to assess potential contributions of systems engineering, and MBSE, to clinical operations. At these workshops it was claimed that clinical operations were too complex to be modeled with existing MBSE tools from defense and aerospace. It was further claimed that there would be very limited value to MBSE products. Based on these claims, the MBSE Challenge team undertook several case studies to evaluate the ability of MBSE tools to represent clinical operations and to address problems relevant to healthcare. This paper describes the outcomes of applying one MBSE tool, the DoD Architecture Framework, to characterize clinical operations as the intended use environment for medical devices.",2018
The Virtual Instrumentation Diagram,"Abstract The INCOSE Vision for 2025 projects Model-based Systems Engineering (MBSE) as the “norm” for systems engineering execution in the future. Implementing MBSE for the first time, however, requires a significant investment from the organization that decides to make the move. Further, the project's stakeholders may balk at joining in that investment without clear and certain evidence of significant benefits. This paper proposes an incremental approach to MBSE for an organization in the chemical processing industry. The initial objective of this approach is the production of a virtual piping and instrument diagram (P\&ID). The P\&ID is a diagram that is familiar to engineering teams and stakeholders in process industries. The quality of the resulting model is evaluated using an established framework. To further enhance the effectiveness of the model, system behaviors are animated with software developed to extend the model into a working simulation.",2015
SysML Activity Models for Applying ISO 14971 Medical Device Risk and Safety Management Across the System Lifecycle,"Abstract The INCOSE Biomedical-Healthcare Model-Based Systems Engineering (MBSE) Challenge Team has been exploring applications of MBSE techniques to medical device development. Because patient and user safety is paramount in medical devices, the team has focused on using MBSE techniques to address safety topics. This paper uses MBSE methods to address the processes of analyzing safety and incorporating risk control at each step of the development portion of the system life cycle in order to achieve “built in” safety. SysML activity models are presented that link the steps of ISO 14971 to the system development technical processes of ISO 15288. In addition, the models show how the analysis results of ISO 14971 can be used to develop a system safety assurance case. The activity models explicitly show the iterative and recursive approach to applying risk management at each stage of system development and address the ISO 13485 requirement for process integration.",2015
Exploring System Space with Graph Theory,"Abstract As today's Cyber Physical Systems (CPS) become more and more complex they provide both incredible opportunity and risk. Model Based Systems Engineering (MBSE) provides organizations a timely opportunity to address the complexities of Cyber Physical Systems. MBSE tools, languages and methods are having a very positive impact but are still in a formative stage and continue to evolve. Moreover, the Systems Modeling Language (SysML) has proven to be a significant enabler to advance MBSE methods given its flexibility and expressiveness. Unfortunately the number of people who know SysML well is relatively small. To bring the full power of MBSE to the larger community, system models can be rendered in intuitive forms to support broad understanding of system models. More specifically, Graph Theory has proven to be very effective in the design, analysis, management, and integration of complex systems. Use of Graph Theory and dynamic visualization can help teams gain insights, build intuition and ultimately help speed the innovation process.",2016
Toward Systems Engineering Modeling Standards: Proposed System Architecture Core Model Elements and Composition,"Abstract Through successful employment of large scale Model Based Systems Engineering (MBSE) over many years, The Boeing Company has developed an elaborate data model and associated constraining business rules that form part of its MBSE tool suite specifications. The core elements of this data model and business rule set are presented in this paper as a set of UML 2.0 class diagrams. Advantages inherent in this core data model and business rule set are detailed. These core data model elements and business rules should be applicable to modeling efforts across engineering domains. It is proposed that these core data model elements and business rules be considered for incorporation into an omnibus data model standard and associated constraining business rule standard that reflects the modeling needs of the MBSE community at large. This modeling standard could serve as the basis of an MBSE ontology, as well as the basis of tool suite and data exchange specifications.",2017
Systems Engineering as a Data-Driven and Evidence-Based Discipline,"Abstract Data and information are considered today as the “new oil” or the “new gold” in almost all aspects of life and economic domains, such as industry, healthcare, education, entertainment and more. The so-called 4th Industrial Revolution1 is based on the digital transformation derived from the Big Data revolution, through the capability of storing huge amounts of data and performing very sophisticated analytics. In this paper, we present opportunities for Systems Engineering (SE) to evolve towards a data -driven and evidence -based discipline, thereby making better systems and engineering decisions. We discuss how systems engineers can apply data-driven characteristics through systems engineering processes and programs. The classical Model-Based Systems Engineering (MBSE) approaches are presented here as powerful tools to collect, generate, and analyze data on systems under development. In addition, the “Digital Twin” concept is presented here in the context of system design. We highlight the challenges for systems engineering to become an evidence-based discipline. Moreover, we empha-size research and development in systems engineering processes using statistical techniques in the design and analysis of systems testing, and Model-Based Systems Engineering (SE) as a source for evidence-based engineering decisions. The success of data driven SE in organizations depends on the information and data analytics infrastructure in these organizations. An information quality frame-work is proposed for evaluating organizational information infrastructure. In addition, it is proposed to assess the data analytics maturity level in organizations. The level of data analytics is the basis for planning implementation programs of data-driven and evidence-based systems engineering. The paper concludes with a case study based on a real-life complex project, and lessons learned for ef-fective data analytics implementation.",2020
Natural Language Understanding of Systems Engineering Artifacts,"Abstract This paper examines in close relation two fields of growing importance: model-based systems engineering (MBSE) and natural language processing (NLP). System models provide a structured description of engineering data, whose inherent semantics often remains hard to explore. Natural language understanding, (i.e., the machine analysis of texts produced by humans) an important field of NLP, focuses on semantic text comprehension but cannot directly account for structured information sources. In this paper, we investigate natural language understanding of MBSE artifacts as they appear in industrial scenarios. In this context, the wide and heterogeneous knowledge space and user base calls for novel techniques to facilitate information retrieval from complex system models. We thus propose to leverage domain-specific text generators to transform models into a descriptive text corpus on which we apply state-of-the-art semantic search and analysis techniques. We illustrate the approach on relevant MBSE examples by performing a qualitative evaluation of intuitive text search and comprehension in textual descriptions obtained from system models.",2022
Automated Optimization of Systems Architectures for Performance,"Abstract This paper provides a brief executive level description of Model Based Systems Engineering, (MBSE). It introduces the seven abstract core engineering steps that can be used to describe the engineering process and make the process tailorable. A representative set of tools is described that can span the engineering work. The MBSE process, with a tool set is described, as a means to automate the search of the application solution space for feasible or near optimal systems solutions. The approach applies to distributed and real-time systems. A by-product of the approach is an automated ability to reuse systems specifications and systems designs. A simple example is provided to show how the optimization works. It shows how modeling and automation augment inspired engineering but do not substitute for it. Substantial work is needed in information standards for systems, tools integration, and search procedures.",1993
Systems Architecting for a Retrofittable Subsea System Application,"Abstract This paper highlights a model-based systems engineering (MBSE) approach tailored to the unique complexities of developing a consistent functional and physical architecture for retrofittable subsea equipment used in offshore deepwater operations. A new architecture in this application must satisfy demanding requirements in safety, reliability, availability, maintainability, retrofittability, deployment timelines, and interface compatibility. Additionally, the new architecture must be defendable against the industry's decades-long established regulatory, cultural and technological legacies. To objectively design within these constraints, a system model was developed iteratively using both bottom-up and top-down analysis to define a complete functional and physical architecture. Inconsistencies between the functional and physical models encountered are resolved through detailed functional analysis and product realization process. The hybrid bottom-up, top-down approach employed, supports continuous stakeholder validation and requirements verification. The tailored MBSE approach and conceptual functional and physical models are presented.",2016
Model verification for system design of complex mechatronic products,"Abstract Increasing complexity of mechatronic products leads to more challenging designs. As the most important stage, system design determines the overall product architecture. Defects in this stage are difficult to rectify in future stages, thus requiring greater model accuracy. With the development of model-based systems engineering (MBSE), model verification can detect design defects, reduce development costs, improve development efficiency, and ensure system reliability. Currently, conventional verifications are performed only after design processes, which makes it difficult to make systematic modifications. To solve this problem, a model verification method implemented in the design stage is proposed in this study. Using this method, designers are able to detect defects earlier, thereby reducing modification costs. The proposed method is as follows: first, a language named Relation-based Modeling for Static Properties (RMSP) is proposed to formalize the static properties of requirements; second, the representation of “Conceptual Graphs” is extended to meet the needs of model verification of mechatronic products; finally, requirements in RMSP and system design in Systems Modeling Language (SysML) are transformed into the Extension of Conceptual Graphs. In this manner, the incorrectness and inconsistencies between requirements and system design can be found through projection in the system design stage. The omitted or improperly designed requirement items would be found and redesigned to fulfill the product requirements.",2019
"9.3.2 The Use of Models across the Contractual Boundary: Past, Present and Future","Abstract Model-Based Systems Engineering (MBSE) practices have been gathering momentum for over 20 years and are seen as the future of systems engineering. MBSE formalises the practice of systems engineering through the use of models and its aim is to overcome the limitations inherent in describing complex systems and their development and sustainment using documents. However, certain project practices, in particular the tendering and contracting processes, are still strongly tied to the use of documents. This paper identifies the challenges that need to be addressed to use MBSE across the contractual interface in a competitive tendering environment. The focus is on the transition of models created by the customer (acquirer) during the capability definition phase to the supplier both during the tendering process and through the systems architectural design and development phases. The paper unfolds with a literature survey and then progresses to surface key insights and challenges for the adoption of model-centric acquisition, looking into the past, present and future from the Australian and Norwegian defence perspectives. This is supplemented through case studies involving the utilisation of RDD-100 for model-centric acquisition of Frigates by the Royal Norwegian Navy and through ongoing research by the Australian Defence Science and Technology Organisation, and the Defence and Systems Innovation Centre. The paper concludes with a summary of the achievements to date and the challenges to be addressed in order to enable and foster the widespread adoption of model-centric tendering and equipment acquisition.",2014
From UAF to SysML: Transitioning from System of Systems to Systems Architecture,"Abstract The fourth industrial evolution, Internet of Things, and large-scale machine-to-machine interactions are driving digital transformation in the industry. Model-based Systems engineering (MBSE), as a new paradigm of capturing and analyzing knowledge about the system, is one of the core factors to drive this transformation. MBSE practices are more and more widely applied to system-of-systems (including enterprise and mission) engineering, which becomes a crucial part of the successful digital transformation. The core challenge today is how digital continuity can be maintained by connecting system models to system-of-systems models, especially when multiple parties are involved in their creation and exploration. This paper studies Systems Modeling Language (SysML) as the standard language to model systems, and Unified Architecture Framework (UAF) as the framework and Unified Architecture Framework Profile (UAFP) as the language to model system of systems and proposes an approach for transitioning from one to another in an integrated modeling environment.",2021
Validating a System Architecture Model (SAM) for a Department of Defense (DoD) Acquisition Program Using a Phased Approach,"Abstract One of the benefits of taking of Model-Based Systems Engineering (MBSE) approach to capturing information such as system design, requirements, and verification information within a digital, object-oriented System Architecture Model (SAM) is it eliminates the risk of manually creating a set of text-based documents that must be maintained separately for consistency. Digital definition of this information eases configuration management and allows reuse, so that engineers can focus more on the technical challenges of system development and less on the tedium of document management. To ensure the SAM accurately reflects system description, uses consistent terms, and content is not duplicated, the model must be validated. This paper recaps the journey taken by a legacy DoD Acquisition Program transition of safety critical functions from a document-centric to a model-based environment, but the focus will be on model validation.",2019
1.3.2 A Vision for Super-Model Driven Systems Engineering,"Abstract Model-Based Systems Engineering (MBSE) has been developing for some time, and has recently acquired new impetus with the completion of the Systems Modeling Language (SysML). This paper envisions taking MBSE much further, to a future of highly integrated and automated design and verification coupled with advances in simulation and domain linkage to allow the synthesis of complete systems from requirements into mathematical models and then into physical realizations. This would permit the application of three of the most successful approaches from agile software development, namely rapid, iterative development of the system starting with the highest value functions, facilitating continual reassessment of the future direction, and continual regression testing to ensure that system bugs are identified and removed rapidly. We envisage the requirements and the model evolving together from proto-requirements and proto-model in increasing detail until the point at which the model can be realized with real hardware and software. Taking this further, the MBSE engine can perform trade-offs and optimization on the design. Implementing this vision requires progress in a number of technologies, such as data exchange between domain tools. At this time, much engineering effort is consumed in people communicating and mediating information and translating it from one form to another (e.g. system design to mechanical design). If we can realize the vision proposed, we can remove much of the burden of information mediation and optimization, allowing engineers to focus on their expertise and larger issues. The potential savings in labour are huge.",2007
Top-down functional composition,"Abstract The functional decomposition methodology forms the basis for how to design system behavior in the systems engineering literature. Unfortunately, this design approach has inherent weaknesses that do not allow for requirement sets to be both complete and design agnostic, both of which are considered necessary characteristics for good requirement sets. In practice, it is also difficult to design the behavior of complicated systems using functional decomposition since a large portion of the design challenge must be handled up-front. This paper introduces a top-down functional composition methodology approach to behavioral design. The paper argues that the presented methodology does not have the shortcomings associated with functional decomposition and that it also enables early and continuous-, integration of design, test of design and validation of design. Therefore, this approach is more beneficial for engineering design of complicated systems, especially when model based systems engineering (MBSE) is applied.",2020
MODELING EMERGENCY PLANNING AND RECOVERY,"ABSTRACT The purpose of this paper is to establish the benefit of planning using model-based systems engineering (MBSE) techniques before a hazard that could affect critical assets and to identify the risks associated after an event has occurred to establish the means of recovery for critical assets. MBSE provides a systematic approach to developing executable plans through visualizing the processes; identifying resource limitations and gaps; identifying investment requirements for mitigating and recovery from disasters; and estimating the costs associated with the entire emergency planning, preparedness, and recovery. The scope of this paper includes the policies that have been set forth by domestic and international government and non-governmental organizations that cover the methods of planning and recovering from an event. We will also discuss the benefits of modeling and how to utilize systems engineering methods and tools to allocate resources, identify gaps, itemize cost schedules, develop timelines, and use simulation to aid in the planning process. The proper use of technology and protection of networks during an event allows the planning process to transition smartly into recovery. The background for this paper comes from applying MBSE to disaster management and recovery for the United States (US) government, which resulted in the development of the Assessment of Disaster Readiness Tool (ADRT). ADRT is a strategic concept and framework, which includes a measurable baseline assessment of a designated partner nation's disaster readiness / resiliency level, supported by a strategic disaster management (response) plan (DMP/DRP) for improvement. ADRT is free and can be used by planners worldwide.",2016
Extending the scope of configuration management for the development and life cycle support of systems of systems—An ontology-driven framework applied to the Enceladus Submarine Exploration Lander,"Abstract Increasingly complex systems of systems (SoS) have to be developed in ever shorter times-to-market at reduced costs and with high reliability. In addition, as the life cycle of such SoS frequently spans across several decades, customer expectations and market conditions will evolve. Systems engineering (SE)/model-based systems engineering (MBSE) and configuration management (CM) need to be ever more closely integrated to appropriately address this situation. CM as a discipline is essential for establishing traceability and controlling baseline evolutions between all the relevant pieces of information resulting from the related system life cycle processes of all constituent systems of such SoS; but for this to work, the scope of CM must be extended both throughout the entire life cycle and across all participating monolithic systems. New frameworks are needed to effectively and efficiently apply CM across SoS arrangements. This paper proposes an ontology-based, federative approach to managing the inherent complexity of CM in the context of SoS, with particular focus on a change management framework for SoS. Examples from a conceptual system that is concerned with the submarine exploration of Enceladus as part of the “Saturn exploration system” are used to demonstrate typical SE/MBSE artifacts and how CM needs to address them across the involved operational and enabling systems.",2020
Contribution to Nuclear Safety Demonstration Through System Modelling and Artificial Intelligence,"ABSTRACT Nuclear Power Plant (NPP) engineering projects become increasingly complex. For instance, a nuclear reactor includes more than 50 buildings, 500 km of piping, 500,000 components and 100 million units of data (requirements, reports, schemes …). However, nuclear safety demonstration of any nuclear facility is at the heart of the nuclear industry, being the most important and limiting factor for all requested engineering activities. Ensuring all these activities are performed considering safety demonstration is mandatory to get permission to license, build, operate, dismantle, and more. This article synthetizes an innovative method that mixes and takes advantages of artificial intelligence techniques and systems engineering principles, processes, and model-based systems engineering (MBSE) principles and usages. This method aims to guide and support engineers to improve their vision, their knowledge and vocabulary, and their capacities in terms of, first, safety requirements elicitation, and second of safety requirements demonstration.",2021
The Economic Benefits of Human Performance Models in Systems Engineering,"Abstract Human performance modeling (HPM) is a method of quantifying human behavior, cognition, physical performance, and processes used for the development of systems designed for optimal user experience and interaction (Seibok and Wickens, 2013). Human Performance Models (HPMs) are an effective tool for Model Based Systems Engineering (MBSE) (Steinberg et al, 2017), with high economic benefit. Human Engineering practitioners use HPMs to define crew design requirements including the number of operators needed, the benefits of automation, and distribution of member task responsibilities required to operate a system. The application of HPMs throughout the development process helps to influence the system design by integrating with MBSE processes and informing many aspects of system definition and development including performance trades of algorithms, hardware, command and control functions, automation, and the need for situation awareness to monitor the system. In addition to these design benefits, HPMs save development costs and for a described case study reduced costs \$4.3M demonstrating the economic benefits for systems engineering. This paper will outline the HPM process for a Command and Control (C2) system.",2022
1.3.3 Conceptual Model for Space Mission Systems Design,"Abstract Modelling tools and methodologies without concerns about human understanding may not be suitable for communicating with stakeholders, customers, or management. There are many factors that can increase understandability. Using a generic systems engineering modelling language certainly helps but is not always enough. The understandability of modelling can be improved by using better modelling techniques and strategies, which might be part of a coherent methodology with a deliberate emphasis on communicability. The paper describes the application of Systems Modeling Language (SysML) to the design of a JPL mission using the Object Oriented System Engineering Method (OOSEM). Complementary formal modelling using the Web ontology language (OWL) has also been investigated. Using only traditional means, under increased demands on productivity and decreased resources, system integration may become high risk, and lifecycle support is expensive and may result in rapidly outdated components. Model-based systems engineering (MBSE) is showing promise as a solution to this problem in addition to and enhancing more traditional approaches. The space mission systems models represent sciences and technologies including astrophysics, physics, electronics, mechanisms, hardware and software. Representations of system architecture specification, requirements, evaluation of alternative architectures and trade studies, including static simulation of the performance are grouped into views that represent different stakeholder viewpoints. The human understandability of the resulting models and how the modeling process can increase communication and understandability has also been addressed and observations are reported.",2009
Subsea Oil Production The Design Basis,"Abstract The origination of the Design Basis document for subsea production systems (SPS) in the oil industry is a challenging task. The completeness and correctness of the Design Basis is crucial for the successful execution of the project in safety, technical and commercial terms. This work aims to establish, through the use of Systems Engineering and specifically throughInformation Models (Model Based Systems Engineering), how the Subsea Production System Design Basis should be optimally developed. The MBSE is integrated in this work by the theory of Transactional Processing, which is implicit in the universal thought process when behavioural models are drafted but seldom explicitly referred to. The current industry practice for developing an SPS design basis is compared to the suggested optimal process. The work constitutes the foundation for the revised Design Basis issuing procedure and the Design Review practice for the Aker Solutions worldwide subsea business. This work is part of a PhD at the Norwegian Technology and Science University.",2014
The Oil and Gas Digital Engineering Journey,"Abstract Model-based systems engineering (MBSE) is the formalized application of modeling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later life cycle phases. The INCOSE Integrated Systems Engineering Vision 2025 [INCOSE, 2014] describes how future systems engineering tools will facilitate systems engineering practices as part of a fully integrated engineering environment. A shift towards an integrated, digital engineering environment enables rapid transformation of concepts and designs to digitalized virtual prototypes and then to physical prototypes through the application of additive manufacturing technologies, such as 3D printers and the digital twin in operations. This capability enables engineers to rapidly and continually assess and update their designs prior to committing costs to production hardware. Implementing this vision will require an integrated suite of tools, technologies, and standards to support the full systems engineering and product lifecycles from requirements to design to implementation and maintenance. MBSE models are digital and executable, and using an MBSE simulation engine, they can shift risk towards early stages of project development as the asset can be tested before it is built. In operations, IoT technologies enable companies to capture and leverage information about a product's performance during operation – with the potential to dramatically improve existing and future products. Service Lifecycle Management (SLM) solutions combine IoT platform technology with service solutions. This integrated closed loop systems engineering toolset applied to the Oil and Gas Industry will ensure success of the Digital Engineering Journey. This paper will describe this Digital Engineering Journey using a Coal Seam Gas example.",2018
Digital Collaborative Environments: A Digital Engineering Perspective,"Abstract The systems engineering discipline focuses on managing and coordinating many domains, specialties, and lines of business. It enables the successful creation of new complex systems using rigorous principles and concepts, scientific thinking, technological tools, and management methods. Engineering collaboration occurs when individuals unite in an effort too large or complex for any of them to perform independently. A digital collaborative environment facilitates the sharing, revision, storage, and publication of ideas, documents, and products through digital means. Until recently, efforts to assemble teams to solve the problems of large, complex systems focused primarily on infrastructure: co-locating teams, integrated modeling environments, efforts to connect tools, and model-based systems engineering (MBSE). Today new technologies offer opportunities to bring systems engineering collaboration into a new era, one which is cloud-based, interdisciplinary, secure, and efficient. This paper introduces a framework for understanding the modern digital collaborative environment as well as its current technical limitations.",2022
An Evaluation Ontology Applied to Connected Vehicle Security Assurance,"Abstract Connected vehicles have great potential to benefit society, yet create huge challenges. Vehicles, infrastructure and enterprise activities combine to form massively complex systems of systems (SoSs) that are vulnerable to cyber-attacks. Security is ill-defined, making it difficult to achieve a consistent, common understanding of security capabilities across the diverse industries that collaborate to develop connected vehicles. Rigorous evaluation is essential for developing strong security assurance cases. This paper contributes a model-based systems engineering (MBSE) ontology that enables integrated evaluation processes in enterprise SoSs. The Evaluation Ontology allows diverse types of evaluation to be captured in a single integrated model. A connected vehicle security story is presented to demonstrate the value of the approach. Benefits include enhanced business intelligence that can provide a quantifiable, reportable level of confidence in security-related processes and technologies. Further work will extend the ontology to develop a customisable suite of enabling patterns for security.",2019
CASE STUDY: APPLICATION OF EVOLVING ARCHITECTURE FRAMEWORKS FOR HEAVY RAIL ASSET MANAGEMENT AND SAFETY ASSURANCE,"ABSTRACT A heavy rail system is a complex system of systems that has specific challenges for asset management. The introduction of modern digital systems into existing rail systems adds further to this complexity. The Asset Standards Authority of Transport for New South Wales in Australia is introducing model-based systems engineering through the use of an architecture framework populated using the Systems Modeling Language (SysML), referred to hereafter as the Transport Network Architecture Framework (TNAF). The TNAF is intended initially to be used to act as a structure that will assist procurement through the depiction of the minimum standards to be met when specifying new systems to be acquired and integrated into the network. This article describes how architecture framework tools can be used for management of the various configurations.",2016
"3.5.1 Model as You Write, or Write as You Model – A Grammar-Based Approach to Modeling and Documentation","Abstract Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support activities necessary for development of systems and is expected to replace the document-centric approach that has been practiced by systems engineers. Many models of systems are being developed by many engineers, but most engineers still write documents in addition to developing models. This is because the semantics of the models is not embedded in the models and is usually provided in documents. This paper proposes a novel approach to development of documents and models at the same time. In this approach, technical information is encoded with an artificial language. The grammar of this language specifies how the semantics of situations should be encoded into sentences. Generated sentences can be converted to other forms such as diagrams, tables, and/or text in any natural language. Generated sentences can also be converted to electronic data, which can be used by any application program. With this approach, documents can be used as models, too, because documents are written according to strict syntactic and semantic rules. At the same time, models can be used as documents, too, because the semantic information necessary for interpreting models is embedded in the model. This approach can be applied to any technical information, which includes requirement specifications, design specifications, interface specifications, development plans, test plans, test procedures, and operation procedures.",2013
A model based system engineering approach to design Avionics systems: Present and Future prospect,"Abstract System complexity in Defense and Aerospace Industry is increasing day by day. Conventional System Engineering is document centric. Text based documents describe system specification, store the records, describe concept of operations and interfaces etc. There are numerous design challenges faced by system engineer while working on text based requirements. Programs are prone to errors during Requirements Definition phase. Also as designs grow and change, maintaining documents becomes an uphill task. Model based approach in System Engineering has ability to detect defect at much more early stage than conventional text based method. Model Based Systems Engineering (MBSE) uses various block diagrams, state machines, mathematical equations, functional flow diagrams, object-oriented models which help to understand the Data flow between various subsystems. This paper explains the advantages of model based system engineering over conventional text based approach, a seamless transition strategy from Document-based to model-based approach and its various applications in defense and Aerospace domain with future prospect.",2016
4.2.3 Network Centric Architectures:Are We Up To The Task?,"Abstract The emergence of network centric architectures and the achievement of information superiority is the new paradigm that is being embraced by the military's next generation of systems to be developed and deployed. The changes dictated in this new architecture are instigating revolutionary changes throughout the DoD. These changes should have an equally profound effect on system integrators in terms of integration practices and policies that will allow network centric architectures to be realized within budgetary and schedule time constraints. The purpose of this paper is to identify key issues currently limiting the effectiveness of system integrators in their efforts to architect network centric architectures and offer suggestions on how to strengthen the integration process through the application of model-based systems engineering, integrated information repositories, and teams that have both a vertical and horizontal architecture definition and integration responsibilities.",2005
4.2.3 The Impact of Understanding the Need and Available Products in COTS Selection,"Abstract Nowadays, more and more engineering solutions are built by integrating Commercial-Of-The-Shelf (COTS) products rather than building subsystems from scratch. The selection of COTS for defence acquisition and upgraded projects presents a great challenge to systems engineers due to the rapidly changing nature of electronic systems, particularly those related to sensors, combat and mission systems, weapons and countermeasures, avionics, and communications. This paper explores the issues associated with the selection of COTS subsystems to be integrated into a larger system. When the total number of COTS components of the same kind to be procured is very low, such as one unit, there are additional constraints impacting the selection and procurement process. A case study is presented based on the development of the Systems Integration Sandpit (SIS) for exploring systems integration issues, fostering model-based systems engineering and systems engineering education.",2010
5.6.2 Attribute-Oriented Modeling Approach and Its Application to Modeling of Spacecraft Functions,"Abstract Model-Based Systems Engineering (MBSE) uses models as a central and governing role in the specification, design, integration, validation, and operation of a system. If models are used in the development of a system, it can reduce ambiguity of information that exists in the document-based methodology and facilitate sharing of engineering information among different participants involved in the development of the system. There are standard languages like the Unified Modeling Language (UML) or the Systems Modeling Language (SysML) and software tools that facilitate developing of models. One of the problems in MBSE is that it is usually the case that different engineers come up with different models even if the same system is modeled and a standard language like UML or SysML is used. This is because there is no standard that specifies what kinds of components in the system should be represented with what kinds of standard modeling elements defined in UML or SysML. In order to solve this problem, this paper proposes a new approach to modeling of systems. This approach is called the “Attribute-Oriented Modeling (AOM)” approach. The AOM should be used with a standard modeling language like UML or SysML, not instead of them. The central concept of AOM is that types of model elements used in models of systems should be defined with a set of attributes that the system components to be modeled possess. By using this approach, a system is always modeled in the same way no matter who models the system. Furthermore, by using the fact that systems in a particular domain are always modeled in the same way, we can develop generic application programs that can process any model in that domain. This will further promote the utilization of MBSE.",2011
The Digital Twin Throughout the SE Lifecycle,"Abstract A digital twin is much as it sounds: a digital representation of a specific asset in the field, including current and past configuration states, considering serialized parts, software versions, options, and variants. Condition data is also represented including sensor readings, alerts, and operating environments. A digital twin has significant implications for service, operations, analysis, design, etc. especially when visualized as a Computer Aided Design (CAD)-sourced graphic in 3D virtual or augmented reality. Using this immersive and real-time information, engineers can inspect and verify the asset being serviced, designed or operated to get precise product information. However, the digital twin does not spring into life fully formed straight from the CAD model. It requires an informed system engineering approach to ensure that the integration between physical and digital is fit for purpose. Model-Based Systems Engineering (MBSE) models can be used in conjunction with the digital twin to improve operational models, predict and analyze faults, perform best-fit analysis and eliminate inappropriate system configurations, etc. This paper will look at various aspects of the digital twin and how it can be used in conjunction with MBSE.",2019
"Implementing a Model-Based, Digital Engineering Enterprise for a Defense Systems Integrator – an Ongoing Journey","Abstract As the aerospace and defense industry strives to embrace digital engineering transformation, organizations quickly realize that this transformation is much more than just tools or infrastructure. It requires comprehensive change that involves people, process, and technology, and that calls for organizational strategy and stakeholder commitment. This paper provides an overview of an on-going corporate initiative to develop an enterprise-wide, model-based systems engineering (MBSE) and model-based engineering (MBE) capabilities and to instantiate a transformation of legacy workforce and culture. Our vision is to apply digital engineering (DE) as an enabler to transform legacy, document-based development stovepipes into a product-centric, integrated, digital engineering enterprise. At the implementation level, however, it involves a multipronged investment strategy in technology, infrastructure, process, and people, as well as an incremental process of learning and experiments. This paper lays out the architectural vision, implementation approach, and the business rationales. It also attempts to reflect on the journey to date, discussing some of the early successes, hurdles and challenges in implementing the digital engineering initiative for a diverse defense services business.",2020
Systems Engineering and Object Technology,"Abstract This paper extends Systems Engineering methods to include object technology, which has been developing in modern software engineering, (Rumbaugh et. al. 1991). It applies the principles of Model Based Systems Engineering, MBSE, (Oliver 1993a), (Oliver 1993b) to the systems engineering process itself. This results in a layered process description which is tailorable and supports aerospace or commercial methodologies. Multiple phases of engineering - concept phase, requirements analysis phase, and systems architecture and design phase - are supported with a single core set of engineering steps. The additions of semantics and notations from object technology provides a capability to describe the choices of components and the mapping of behavior to components that lead to alternative architectures. Strong emphasis is placed on the systems engineering traditions of trade-off analysis and sequential build and test which have been weak in software engineering methodologies. The joining of systems engineering with object technology provides a seamless engineering path for projects which will implement software in an object-oriented fashion. Integration with existing methodologies is straight forward because existing methodologies can be defined by selecting among the core MBSE steps.",1994
11.5.2 A NASA Space Communications and Navigation SysML Profile Adaptation,"Abstract The NASA Space Communications and Navigation (SCaN) Office has been conducting trade studies to investigate integrating its three independent space networks into an integrated space network. SCaN has also chosen to use a model-based systems engineering approach for the trade studies. SysML, being a general-purpose modeling language for systems engineering, was chosen to model the Operational Process Flow for each of the three, independent space networks, as well as for a common, integrated network. This paper describes how the base SysML profile was modified to meet the purposes of the trade study investigating network monitoring and control. Though the methodology described in this paper, neither completely adheres to, nor completely deviates from, standard SysML usage, a working form of SysML modeling has been developed for the network monitoring and control trade study and future anticipated trade studies.",2012
System Verification and Validation Approach Using the MagicGrid Framework,"Abstract The ongoing transformation in the industry from a document-based systems engineering to a model-based systems engineering approach reveals a need for new methods of verifying and validating systems. Traditional methods of testing the actual system are getting more and more expensive. A model-based environment could significantly reduce testing and, most importantly, verification and validation processes costs. It allows testing on the system model by applying various techniques, such as simulation, analysis, review, mock-ups, etc. There are, however, very few approaches today detailing how verification and validation of the entire system (taking into count its components and subsystems) could be performed. This paper proposes an approach to perform verification and validation of a system using system models developed with Systems Modeling Language (SysML) and in accordance with the MagicGrid (formerly known as MBSE Grid) framework. The approach covers system testing activities beginning with verification of the lowest modeled system elements against system requirements and finishing with validation of the system as a whole, against stakeholder needs.",2022
System Verification and Validation Approach Using the MagicGrid Framework,"ABSTRACT The ongoing transformation in the industry from a document-based systems engineering to a model-based systems engineering approach reveals a need for new methods of verifying and validating systems. Traditional methods of testing the actual system are getting more and more expensive. A model-based environment could significantly reduce testing and, most importantly, verification and validation processes costs. It allows testing on the system model by applying various techniques, such as simulation, analysis, review, mock-ups, etc. There are, however, very few approaches today detailing how verification and validation of the entire system (taking into count its components and subsystems) could be performed. This paper proposes an approach to perform verification and validation of a system using system models developed with Systems Modeling Language (SysML) and in accordance with the MagicGrid (formerly known as MBSE Grid) framework. The approach covers system testing activities beginning with verification of the lowest modeled system elements against system requirements and finishing with validation of the system as a whole, against stakeholder needs.",2023
Engaging Mechanical Engineers in System Modeling,"Abstract In Model Based Systems Engineering (MBSE) the system model is used to capture and share Systems Engineering (SE) data and artifacts. Using the model to communicate with the project engineers is found to be more successful with software (SW) engineers than with other domains. As a result, the system model is developed unevenly. This article reports on how a company, whose system model is decisively more detailed in its description of SW sub-systems, might better involve mechanical (and other) engineers in system modeling. Case-based research is applied to understand the company's challenges. The conclusion is that the challenges originate from failing to consider the differences in how these domains view and relate to a system under development. The research determined that the models developed in the company-specific tool implementation were incapable of producing useful deliverables for non-software engineers. In the absence of a plan for how a mechanical engineer could access information from the model, the authors recommend defining a modeling environment to ensure the necessary contributions from both systems engineers and mechanical engineers.",2020
Set-based design: The state-of-practice and research opportunities,"Abstract Increasing system complexity has provided the impetus to develop new and novel systems engineering methodologies. One of these methodologies is set-based design (SBD), a concurrent design methodology well suited for complex systems subject to significant uncertainty. Since the 1990s, numerous private, public, and defense sector design programs have successfully implemented SBD. However, concerns regarding SBD's complexity, tendency toward qualitative methods, and lack of quantitative tools have limited its use. To address these issues, our research surveys 122 refereed journal articles and conference papers to assess SBD's state-of-practice and identify relevant research opportunities. To accomplish these tasks, we perform a structured literature review to identify and assess relevant and influential research. We found that SBD's state-of-practice relies heavily upon decision and tradespace analysis with increasing emphasis on uncertainty modeling and MBSE. We found that the majority of SBD research consists of quantitative methodologies focusing on component and small system applications. We also found that complex system applications used mostly qualitative methodologies. We identify SBD research opportunities for requirements development, MBSE, uncertainty modeling, multiresolution modeling, adversarial analysis, and program management. Finally, we recommend the development of a comprehensive SBD methodology and toolkit, suited for complex system design across all stages of the product development life cycle.",2020
2.1.1 Model-Based operational analysis for complex systems - A case study for electric vehicles,"Abstract We present in this paper an operational analysis of a complex system following a Model Based Systems Engineering approach, illustrated by a case study on electric vehicles. We explain some strategic issues and reasons that make electric vehicles important and complex systems, and how these vehicles can significantly contribute to the European policies for sustainable development. We explain why it is necessary to apply a Systems Engineering approach to deal with the complexity of such systems, and we give an overview of the architectural design framework we follow. We present a model of the system of interest and of its environment built from the analysis of public documents and literature reviews. This allowed us to identify the key stakeholders, external interfaces, needs, use cases and operational scenarios. Based on this operational analysis, we present ways to pursue functional and trade-off analyses.",2014
Minimum SysML Representations to Enable Rapid Evaluation using Agent-Based Simulation,"Abstract The changing operational requirements and demands for new capabilities, often makes it necessary for systems architects to make substantial changes in a system's architecture. However, the traditional systems engineering processes advocate finalization of architecture at early stages of the design process with little or no change at the later stages of the design. The simulation development is often done towards the end of the design phase and thus, the traditional systems engineering approaches do not support a rapid architecture evolution. In this paper, we propose a Model-Based Systems Engineering (MBSE) process to facilitate rapid evaluation of changes in a system architecture and/or design artifact for complex systems. This process specifies the minimum set of information that needs to be included in system architecture using SysML diagrams with traceability between the diagrams and agent-based simulation (ABS) models of a complex system. We demonstrate this SysML-driven analysis approach to perform a rapid evaluation of evolving system architectures using a NASA-sponsored project to analyze ab initio architectures for the National Airspace System. We also demonstrate how the proposed approach enables early-on investigation during the architecture development whether an architecture will yield the desired operational benefit.",2018
2.5.0 MBSE,"Abstract The INCOSE MBSE Initiative was established to help enable the Systems Engineering Vision 2020. MBSE was one of 5 components of the SE Vision. This webinar will highlight the MBSE vision, along with the MBSE roadmap and some of the key challenge team and related MBSE activities that the MBSE Initiative has been pursuing. The webinar will also highlight other industry related MBSE efforts, and some general observations about the state of practice.",2011
A Data-Centric System Architecture Model Development Process Emphasizing Rapid Tempo and Quality,"Abstract For years the system engineering community has been armed with Model Based Systems Engineering (MBSE) using the Systems Modeling Language (SysML) and a host of vendor provided tools to facilitate requirements, architecture and design development. Nonetheless, teams repeatedly struggle to apply MBSE in part because they do not have a method to complement the language and the tools. This paper seeks to offer elements of method focusing on process, a powerful style to enable teamwork in a model, and set of flexible approaches to guide work which is consistent with that style. This paper focuses on an easy to use process for building a System Architecture Model (SAM), allowing for tailoring to meet program-specific needs. The paper identifies and encourages the use of a variety of SAM development approaches which are focused on the themes of data centricity, consistency, commonality in style, and efficiently creating content that will answer most engineering questions related to architecture. This process is implemented in SysML as a “One Page Process”, and made openly available for download. Furthermore, automated validation via a rules-based engine is leveraged to catch and correct defects nearly as quickly as they are generated as well as scale SAM development across a large diverse team of contributors. By leveraging and tailoring this process to meet program needs, one may improve the quality, development tempo, and rigor of their SAM.",2022
Microreactor Testbed Automation through Digital Engineering and Digital Twins,"Abstract Digital engineering is the practice of creating repeatable frameworks to bring the power of automation and information technologies to complex systems. Model-based systems engineering (MBSE) is an essential part of digital engineering by providing a roadmap for digitalization. Digital engineering and MBSE can be applied in a myriad of situations, one of which is for the development of digital twins for autonomous and remote control. Autonomous and remote operation of physical assets can provide numerous benefits to organizations and industries that deal with complex and distributed systems. The automation of the operation of a physical asset can be achieved through a digital twin, connected to the inputs and outputs of the asset and using machine learning (ML) and artificial intelligence (AI). Development of the digital twin requires understanding of systems interfaces and incorporating this understanding in digital systems. The effort described herein aims to determine the feasibility and benefit of such a process through the development and evaluation of a digital twin connected to a heat-pipe test-bed environment. Many challenges need to ultimately be addressed by a digital twin including data quality, infrastructure, privacy and security, and more. However, the focus of this paper will be on the application and use of digital engineering for the development of autonomous digital twins through a repeatable framework that can be applied across various domains and assets.",2022
ASSESSING INTEROPERABILITY REQUIREMENTS IN NETWORKED ENTERPRISES: A MODEL-BASED SYSTEM ENGINEERING APPROACH,"ABSTRACT When two or more systems work together, it is crucial to verify interoperability. Systems engineers should be working to continuously improve the ability to interoperate for maintaining a sustainable and efficient collaboration among the networked systems. Systems could benefit from the use of interoperability assessments for identifying their strengths and weakness as well as their compatibility with potential collaborative peer systems. However, the current assessment approaches do not explicitly define the interoperability requirements and their interdependencies. Acknowledging the different requirement dependencies supports the identification of impacts on the overall system, for example implications within a network caused by changes in the collaboration strategy or the introduction of a new information technology tool. Thus, based on model-based systems engineering, this paper defines a networked enterprise as a system of systems (SoS) and proposes to use the SoS characteristics for identifying interoperability requirements and their dependencies. Further, we formalise and utilise inputs for an assessment tool.",2017
Automatic Text Classification of PDF Documents using NLP Techniques,"Abstract One of the regular activities performed by engineers during the design and development of the technical systems is to determine which sentences in a PDF specification document represent a requirement, functional architecture, design solution, variability, or other types of systems engineering (SE) data. Extracting such data from these PDF documents and transferring it into system model elements is still performed manually, requires high effort, and is error prone. Hereby, automatic extraction and classification of such SE data has a great potential, but it is still relatively scarce and a challenging task for engineers working with large PDF specification documents. One solution is to follow a suitable writing formulation which provide an immediate and easy way to classify and analyze the PDF documents. However, such formulations are not always followed strictly. As part of our work towards adopting Artificial Intelligence (AI) for Model-Based Systems Engineering (MBSE), we have been researching the data extraction and data classification topics from PDF files in order to transfer it to system models elements. In this paper, we present the early status of a solution based on AI that uses Natural Language Processing (NLP) techniques to label the SE data existing in PDF files, extract them, and classify them into predefined classes.",2022
Integrating SysML and Agent-Based Modeling for Rapid Architecture Evaluation,"ABSTRACT In the face of the changing operational requirements and demands for new capabilities, it often is necessary for systems architects to make substantial changes in a system's architecture. However, traditional systems engineering processes, where architects finalized architecture during the initial concept development stages and engineers develop system simulations during later lifecycle phases, do not support a rapid architecture evolution. In this article, we propose a model-based systems engineering (MBSE) process to facilitate the rapid evaluation of changes in systems architecture and/or design artifacts for complex systems. This process specifies the minimum set of information that engineers need to include in systems architecture using SysML diagrams with traceability between the diagrams and the agent-based simulation (ABS) models of a complex system. By integrating SysML and ABS models early in the development lifecycle, teams can readily trace any future evolution of systems architecture represented by the SysML diagrams to changes in an ABS model and hence can rapidly evaluate the impact of architectural evolution. We demonstrate the application of the proposed process using a NASA-sponsored case study for developing ab initio architectures of the National Airspace System (NAS) where we achieved significant time savings in developing an ABS model of evolving NAS architecture based on SysML-ABS integration.",2018
Toward a property based requirements theory: System requirements structured as a semilattice,"Abstract In this paper, we outline a property-based requirement (PBR) theory. After introducing the mathematical notion of semilattice, we express the ontological and epistemological assumptions on which our theory is built. We provide a definition of a “well formed (wf-)requirement,” based on the property concept, distinguished from that of an “expectation.” Then, we introduce two relationships between wf-requirements called respectively “conjunction” operation and “stringency” relationship. So, we state that a set of wf-requirements, assigned to a system, is structured as a semilattice and that the maximum element of this semilattice matches the system specification. The network including all the expectations and wf-requirements related to a system are linked together through two very unlike categories of relationships. “De dicto” relationships are linguistic dependencies while “de re” relationships among requirements are extralinguistic dependencies among material properties refereed by wf-requirements. We highlight two types of “de re” relationship among wf-requirements. The first one is the well known “derivation” relationship that links together a “parent” requirement with its “child” requirements during the system design process. We introduce a second one, called “coupling” relationship. Wf-requirements are coupled when the change of one of them collides with others. We claim that our PBR theory belongs to the same paradigm as the model-based systems engineering (MBSE) approaches whereas TBR belongs to the same field as empirical design approaches. Then, we relate our requirements formulation to features of the OMG SysMLTM language. We conclude on our prospects for research, which connect our requirement theory with reflections carried out on the bodies of knowledge and their specification, i.e. ontologies. © 2008 Wiley Periodicals, Inc. Syst Eng",2008
Towards an Automated UAF-based Trade Study Process for System of Systems Architecture,"Abstract The major driver for the Model-based systems engineering adoption in industry is the ability for an engineer to develop systems with traceability to requirements, using one integrated architecture model that enables all types of automated analysis, e.g. impact analysis, gap analysis, trade studies, and simulations. Today, complex real-life problems require the application of MBSE practices, where evolving systems communicate independently, both operationally and managerially, to achieve a common goal. This is the level of system of systems. At this level the major concern is an architecture assessment and trade study analysis, which can lead to different criteria and techniques for identification and comparison of alternatives to keep architecture in line with budgets and timelines. Although there are multiple process that provide step-by-step descriptions of trade study analyses, there are none that detail how trade study analyses could be automated in the model-based environment in combination with existing architecture frameworks, languages, and tools. The goal of this research is to propose an automated trade study analysis process for the System of systems architecture developed in the Unified Architecture Framework models. It is a part of the larger research of trade study analysis automation, including modeling guidance, model quality checks, and automation scripts.",2020
Integration of Parametric Cost Estimation with System Architecture – It's a dirty job but someone has to do it!,"Abstract The rapid adoption and advancement of Model Based Systems Engineering (MBSE) methods and tools opens up new avenues of systems engineering practices. One of them is cost estimation. As a key enabler for affordability analysis and budgetary decision making, cost estimation is an essential component for all system development and sustainment efforts. However, cost estimation is typically a separate endeavor from the design and development effort, creating a professional “chasm” between the worlds of systems designers and of cost analysts, causing a disconnect between the system as designed and the cost and effort required to build it. This paper describes an approach to “tightly” integrate the existing practice of parametric cost estimation with the system architecture development process by leveraging MBSE and SysML to enable repeatable and efficient estimation of system development cost, and to allow system cost and affordability to be incorporated into the “digital thread” of the design while improving the efficiency and effectiveness of the cost estimation process. By expanding our previous work (Papke, Wang and Pavalkis 2017), this paper describes a new concept of operation (CONOP) for system development, enabled by the integrated SysML and COSYSMO modeling environment, that effectively connects the cost baselines to the technical baselines throughout the project life cycle. This new CONOP presents another step towards “pulling the digital thread” by making affordability and economic analysis an integral part of the system architecture.",2018
Systems Engineering Challenges in Simulation Based Aviation Training: A Few Insights,"Abstract Simulation based training means using simulated environment to create training lessons, more focused towards interactive learning by simulating real world scenarios. Simulation based training has been used extensively in the field of aviation for many years. Flight simulator as a product is quite complex and all the lifecycle phases such as requirements, analysis, design, development, integration, verification and validation are not very well interconnected or centralized, which adds to complexity in producing an artefact in a complex system of systems environment. Moreover, the lack of integrated method for ensuring the traceability of requirements and customization, acquisition of knowledge and data, integration and changes in hardware, and the design and testing of software creates massive challenges for simulation companies developing system of systems products. The current paper provides insights into such challenges that typically exist in the Flight Simulation industry. Methods and techniques inspired from the Knowledge Based Engineering (KBE) and Model Based Systems Engineering (MBSE) aspects of Systems Engineering are proposed to evolve existing Systems Engineering practices for more efficient Requirements Management, Interface \& Change propagation management and Hardware and Software integration solutions. Towards the end, results of an industry-wide survey have been summarized, which was initiated to gather feedback from industry experts on various systems engineering practices challenges.",2016
1.1.3 Need for Robust Systems Engineering in a Time of Budget Austerity,"Abstract Today's larger, more complex systems are riskier than before, with dire consequences if they fail. This paper makes the case that systems engineering is needed now more than in the past, and it would be a mistake to reduce funding for systems engineering at the same time that national security programs in general are being reduced. Systems engineering helps improve decision making under conditions of uncertainty and complexity, using a combination of proven and new tools. Systems engineering orchestrates integration among disciplines and subsystems using collaborative tools such as integrative review. Systems engineering supports new acquisition models such as incremental commitment by implementing enterprise architecture roadmaps and recommending new technology to improve capability. Model-based systems engineering leads to lower cost, improved capability, lower risks, and improved defenses against attack. Systems engineers are learning techniques from complexity science such as hierarchical and modular design, prevention of failures from unintended consequences, and analysis of power law characteristics in complex systems. The paper discusses these concepts to show the importance of maintaining systems engineering in the face of budget austerity.",2012
Engineering Lifecycle Management. What A Bunch Of Rhetoric,"Abstract Paraphrasing Charlton and Adras, management is a process by which managers reflectively model and share a representation of their own processes to enable themselves to perform their eponymous information-processing activities of monitoring, evaluating, predicting, and controlling their enterprise and its systems. (Charlton \& Andras, 2003) Furthermore, managers manage for particular purposes. Purpose-driven, they acquire systems to address the needs of the enterprise and they manage their stakeholders, engineering lifecycle tools, and artifacts during the acquisition processes to attain certain goals. Modern model-based systems engineering tools are effective for modeling a single time the adequately stable compositions of sufficiently static units of structure and behavior. However, today, systems engineers and managers struggle to use these tools to specify, analyse, present, and manage these models as stakeholders and architects incrementally evolve those models over time and across space. Therefore, the management of engineering lifecycle models involves more than reliably storing and retrieving in a timely manner the usual collections of related, versioned artifacts. Rather, because all selections and deployments of the enterprise depend on some responsible actor making a choice, management includes the more formidable service of providing to decision-making stakeholders arguments that demonstrate the adequacy of contextually-specific solutions to the enterprise's problems. These decision-making stakeholders need dialectical (i.e. logical) arguments for a proposed system's satisfaction of constraints such as those that are available from adequately formal modeling notations, solvers, and practices. In addition, they need rhetorical (i.e. persuasive) arguments that convince those stakeholders of the aptness of proposals through trust of the proponents and through warrants which appeal to generally accepted grounds.",2016
Employing SysML to model and explore levels-of-service: The case of passenger comfort in railway transportation systems,"Abstract The concept of Level of Service (LoS) is not inherently supported by Systems Modeling Language (SysML), the standard modeling notation for model-based systems engineering. This paper describes and demonstrates an approach that enhances SysML to enable LoS modeling and evaluation. A SysML profile enables the definition and visual verification of LoS during system operation, via LoS specific requirements, inside the system model, and the association of these requirements with specific system components. Hence, static and dynamic aspects of the system model are used for the LoS verification, while specific design alternatives are automatically proposed, in case the desired LoS is not achieved. As a proof of concept, the proposed approach was applied to explore passenger comfort, a key LoS metric, indicating space available to passenger in Railway Transportation Systems (RTSs). A specific case study on passenger comfort for the Athens Metro was conducted to derive insights regarding the practical aspects of the proposed approach.",2020
9.4.1 Why avoiding how when defining what? Towards an OSLC-based approach to support Model-Driven Requirements Engineering,"Abstract The present paper debates the concept of requirement in the contexts of software and systems engineering. Requirements are usually extracted from documents, stakeholders and existing systems generating a natural language specification. On the other hand system models are designed to define system behavior and to validate and verify the system against a specification. That is why requirements, as a basic unit of specification, must be aligned and linked to a model with the aim of supporting the whole development lifecycle of any product or service. Although some Model-based systems engineering (MBSE) methodologies have tried to bridge the gap between natural language and models moving from document-centric to model or requirement-based approaches, there is still a lack of interoperability and integration between requirements and models that prevent a proper (re) use of requirements in the whole lifecycle. Furthermore this situation is becoming a major challenge in critical systems since a complete verification and validation must be ensured. In this light the Open Services for Lifecycle Collaboration (OSLC) initiative pursues the creation of specifications to unify under a common and shared data model (the Resource Description Framework-RDF) all pieces of information and data involved in the development of a system. This initiative applies the principles of Semantic Web and the Linked Data initiative to provide a web standards-based environment for systems development. More specifically, OSLC defines the Requirements Management specification to deliver a common environment for managing and exchanging requirements. In this sense the on-going work implementing this specification and an example of modeling a controlled vocabulary for requirements management under the principles of the Linked Data and OSLC specifications is provided to demonstrate the capabilities and intentions of both initiatives. Finally some discussion, conclusions and future directions are also presented.",2014
4.2.3 A Systems Approach to Medical Device Compliance with IEC 60601–1:2005,"Abstract The development of electrical medical devices requires compliance with a host of regulations and standards to help ensure their safety and effectiveness. One of the most notable additions in recent years is the 3rd Edition of IEC 60601-1 (IEC 60601–1, 2005), “Medical electrical equipment – General requirements for basic safety and essential performance.” Medical devices sold to the European Community and Canada must comply with the standard in 2012, and devices in the U.S. and other countries must follow shortly thereafter. This standard represents a sea change in the way medical devices are typically developed, and includes a heavy reliance on safety risk management and usability engineering processes. This paper presents the systems engineer as the ideal candidate to lead these activities and facilitate device development; the standard impacts many areas (e.g., engineering, regulatory, human factors, and project management) and requires a methodical approach to implement in a cost-effective manner while ensuring safety and effectiveness of the device. This paper details techniques developed to efficiently comply with the standard, leveraging existing systems engineering practices and emerging methods such as Model Based Systems Engineering.",2012
A Representative Application of a Layered Interface Modeling Pattern,"Abstract Model-based systems engineering (MBSE) is intended to improve how systems engineering is performed compared with a more traditional document-based approach by effectively using models to analyze, specify, design, and verify systems. The OMG Systems Modeling Language (OMG SysML™) enables the practice of MBSE by providing a robust and expressive language for representing systems. Several MBSE methods are available [3], and have continued to mature over the last several years which include model-based practices for requirements flow-down, architecture-design, trade-off analysis, verification planning, and others. One of the critical systems engineering practices is interface modeling. This paper describes a layered interface pattern for modeling data and communications interfaces using SysML. The pattern spans logical to physical interface definition, and includes software and electrical interfaces. Each layer in a stack describes a portion of the interface functionality. The concept of a layered interface is borrowed from computer networking [8] [10]. The layered interface pattern described in this paper enables the specification and design of connections and behavior between interfacing systems at a given layer, and between the adjacent layers of a single system. This pattern may also be applied recursively. That is, communication within a single layer may itself be realized by a multi-layer stack. The level of detail of the model to describe a layered interface should be adapted to the need, and can vary from highly abstract logical flows across a system to highly detailed protocol specifications and message structures. This paper builds on work that was documented in a previous paper entitled “A modeling pattern for layered system interfaces” [5]. Aspects of this pattern have been demonstrated in various project applications including Exploration Flight Test 1 (EFT-1), Space Communication and Navigation (SCaN) Trade Studies, and the SCaN Network Integration Project (SNIP).",2016
Model-Based Product Line Engineering to Plan and Track Submarine Configuration,"ABSTRACT One can measure the life of a class of submarines in decades. As such, the operational demands and expectations change both strategically and tactically over its lifetime. Coupling this adaptability with the length of time submarines take to design, build, and maintain, no two as-built submarines in a class will ever be the same, even when constructed/maintained to the same build-to design. Traditionally, we have accepted this as the standard, and in most cases the configuration management team managed the full information set at a class or batch level, but not at an individual submarine level. The team managed the configuration of an individual submarine in terms of agreed changes against the class or batch baseline. Advances in technology (hardware performance, software tools, and standards) now give us the opportunity to not only manage the full information set related to individual submarine system configuration baselines as they change over time, but also undertake rigorous model-based trade-off studies to plan the manner in which we can modify a class, a batch, an individual submarine (variant), or any combination thereof over time. This paper will explore the use of model-based systems engineering (MBSE) coupled with recent developments of product line engineering (PLE)/orthogonal variability modelling (OVM) to provide a means to plan, track, manage, and evaluate an individual submarine's configuration over time in the context of the class, whilst simultaneously highlighting the wider application in the submarine enterprise and beyond.",2019
MB-PLE to Plan and Track Submarine Configurations,"Abstract The life of a class of submarines can be measured in decades. As such the operational demands and expectations change both strategically and tactically over its lifetime. Coupling this adaptability with the length of time submarines take to design, build, and maintain, no two “as built” submarines in a class will ever be the same even when constructed/maintained to the same “build to” design. Traditionally this has been accepted as the case and in most cases the full information set has been managed via the configuration management team at a class or batch level but not at an individual submarine level. The configuration of an individual submarine has been managed in terms of agreed changes against the class or batch baseline. Advances in technology (hardware performance, software tools and standards) now give us the opportunity to not only manage the full information set related to individual submarine system configuration baselines as they change over time but also undertake rigorous model based trade-off studies to plan the manner in which a class, a batch, an individual submarine (variant), or any combination thereof can be modified over time. This paper will explore the use of Model-Based Systems Engineering (MBSE) coupled with recent developments of Product Line Engineering (PLE) / Orthogonal Variability Modelling (OVM) to provide a means to plan, track, manage and evaluate an individual submarine's configuration over time in the context of the class, whilst simultaneously highlighting the wider application in the submarine enterprise and beyond.",2016
An Alenia Aermacchi study and experience on MBSE application,"Abstract This paper describes how traditional systems engineering activities conducted in Concept and Configuration Development phases of Aeronautical Product Life Cycle have evolved for the design of Unmanned Aerial System (UAS) for Intelligence Surveillance Reconnaissance mission, by applying Model Based System Engineering (MBSE) approach. This methodology will make easier the support to other phases of the process, like the Product Development. It has been considered the system modelling language (SysML) as reference model based language. The design process and the findings about the modelling and simulation that has been considered by Alenia Aermacchi are described in the paper.",2012
AN MBSE APPROACH TO SUPPORT ORGANISATIONAL REFORM OF THE ROYAL AUSTRALIAN NAVY,"ABSTRACT This paper presents a unique MBSE approach to enterprise modelling using a combination of IDEF0 functional modelling method. We applied this approach to the modelling of the engineering and administrative processes of the Royal Australian Navy (RAN). We developed the model named Materiel Seaworthiness Functional Master Set (MS FMS). Importantly, the MS FMS initiative drive comes from the top-down by the Head of Navy Engineering, Rear Admiral Mick Uzzell AM. He wants assurance that all organisational entities in the large and complex environment of Navy, Defence Groups, and Industry are performing the right functions in a coordinated way to continuously deliver seaworthy materiel (ships, submarines and support items). We are piloting an analytical capability using the well-established Multi-attribute Value Analysis (MVA) method named the FMS Traffic Light System that aims to facilitate “what if ” analysis, ascertain functional health status, and inform high-level organisational resource allocation and strategic planning to further the quest to balance efficient delivery with efficient resource allocation.",2017
3.6.1 Rapid prototyping and validation of Human factors model in a Model Based Naval Systems Engineering Application,"Abstract The Model Based System Engineering (MBSE) approach focuses on building an architecture model which is portable to different platforms, re-usable and interoperable among different domain models. This allows integrating the Human Machine Interface (HMI) model or the Human Factors domain model with the System architecture model seamlessly. MBSE ensures the separation of user specifications from the way the system utilises the capabilities/technologies of the target application platform. Thus a Platform Independent Model (PIM) of the HMI is developed, mapping the end-user/operator specifications. This model is then transformed to Platform Specific Model (PSM) meeting the requirements/technologies of the specific platform using rapid prototyping. This paper discusses the generation of HMI Prototype from a PIM for a Naval Combat Management System (CMS) using the application codenamed ModVis. It also addresses the advantages of an early Verification and Validation (V\&V) of the system model and visualisation of a preliminary prototype of the system early in the project life cycle.",2012
Analyzing Human Machine Interaction and Interfaces through Model Based System Engineering Practices,"Abstract As systems continue to grow in scale and complexity, human machine interactions and the human machine interface (HMI) become a crucial consideration in overall system design. In complex systems, humans are often part of the complex system as opposed to being just users of the system. The human mental model, work instructions, and procedures are key attributes that a system architect needs to analyze to ensure the success of the overall human-machine system. Model Based System Engineering (MBSE) techniques potentially offer new ways for system architects and engineers to conceptualize and analyze HMI requirements and use the findings to specify its design.",2012
A generic conceptual model and actual systems of IC-Card system for model-based systems engineering,"In this paper, a generic conceptual model and actual systems of Japan's IC-Card system for model-based systems engineering are presented and discussed. First, a generic conceptual model of the IC-Card system is discussed. Then Japans various actual IC-Card systems (Electronic Money, Traffic IC-Card, and Mobile IC-Card) are studied using the generic conceptual model of the IC-Card system. This paper also specifies how Japans various actual IC-Card systems differ from the generic conceptual model using the model-based approach to systems engineering.",1970
Model-Based Systems Engineering Implementation Considerations,"As organizations strive to implement Model-Based Systems Engineering (MBSE), there are significant discussions about model-based languages, tools, and the potential benefits of MBSE. However, discussions not occurring, but should be, are the implementation challenges. Issues such as: (i) a comprehensive understanding or the organization's vision and goals for the MBSE environment; (ii) establishing a comprehensive model - the proverbial “single source of technical truth;” (iii) the governance and management of the MBSE environment; (iv) establishing an infrastructure and support environment that allows for collaboration and communication across stakeholders; and, (v) realizing the need, and establishing a plan, for organizational culture change. This paper discusses implementation challenges, associated with those five issues, that must be overcome to transition to a true MBSE environment. This narrative is important because the successful realization of a MBSE environment requires a well-planned implementation to fundamentally change the way organizations perform systems engineering.",1970
A Model-Based Systems Engineering Approach to Obtain Fault Trees for Failure Analysis Using SysML,"Industries are constantly being challenged with project and system complexity and the different processes and approaches these convey. In addition, there may be a different number of stakeholders, areas of interest, and ambiguous communication among each of the interested shareholders. When new projects and systems are under development, there are decisions that need to be made related to the reliability of it that may rise issues and it is essential to be able to reduce and mitigate risks in the early stages before the cost of fixing them increases. As systems continue to grow in scale, Model-Based Systems Engineering (MBSE) has become the main approach to manage complexity and maintain consistency in system development. MBSE is an approach that is becoming particularly popular because it allows the generation of system models that help formally establish specification, system requirements, analysis, design, and verification and validation (V&V) activities throughout the development of the system life cycle while ensuring traceability. In this paper, a detailed review of an Automated Teller Machine (ATM) System design process implementation as a use case is presented using Systems Modeling Language (SysML) to support system semantics through an MBSE approach, and later develop a reliability analysis - Fault Tree Analysis (FTA) to help in system improvements and facilitate decision-making in the development of the system.",1970
Transitioning Systems Thinking to Model-Based Systems Engineering: Systemigrams to SysML Models,"A fundamental challenge for system engineers is to capture a problem with an effective model or framework and then facilitate transferring the information of that captured problem to practical systems engineering tools and methods. The early problem definition phase requires an application of systems thinking with adequate modeling tools and methods. Then, the later problem definition phase and early system architecting phase requires transferring the captured problem to systems engineering tools and methods through emerging techniques such as model-based systems engineering (MBSE) using SysML (MBSE is the practice of using a modeling tools to capture systems engineering diagrams). This paper presents a method for capturing a problem through systemigrams and the Boardman soft systems methodology and then directly translating the systemigrams into SysML diagrams. With MBSE increasing in usage, this method could provide a time savings opportunity during model development along with the possibility of lowering information distortion or loss that can occur during transformation of systems thinking to systems engineering activities. This paper includes a case study which demonstrates how the proposed approach was applied on a problem being considered by the U.S. Army-Contingency Basing for Small Combat Units. Finally, this paper will provide the conclusion on the development of the method and describe future research directions that can allow systems thinking and MBSE to function in a congruent methodology.",1970
Enhancing model-based systems engineering with the Lifecycle Modeling Language,"As systems become more complex, the systems engineering community must find new and more efficient ways of dealing with complexity throughout the system's lifecycle. Model-Based Systems Engineering (MBSE) has proven to be effective at managing complexity through the development of systems in a virtual environment. Several languages have been developed in the spirit of MBSE; however, these languages often do not include the full spectrum of information needed for holistic system solutions. The Lifecycle Modeling Language (LML) has been developed to provide extensible language that contains both visualization models and an ontology. When LML is coupled with the Systems Modeling Language (SysML), the result is a modeling constructs that better supports systems engineering processes across the entire spectrum of lifecycle concerns. This coupling will not only be beneficial today, but could serve as a catalyst for a future MBSE environment.",1970
"Combining Model-Based Systems Engineering, Simulation and Domain Engineering in the Development of Industrial Automation Systems: Industrial Case Study","Due to increasing complexity, the design of Industrial Automation Systems are becoming more challenging. In that sense, efforts have been driven to develop Model-Based Systems Engineering tools and methods. Despite recent progress, there are still doubts in terms of the practical use and benefits. The main concerns are related to integration among tools and exchange of information between multidisciplinary artifacts. This paper compares Document-Centric Engineering (CAx tools) and Model-Based Systems Engineering (MBSE) in light of Industrial Automation Systems using a real domain. Therefore, a MBSE compliant method was developed and tested. Commercial tools such as the Eclipse platform and the ModelicaML language were used to perform abstract modeling while COMOS® from Siemens® was used to develop the multidisciplinary artifacts for project documentation. A Java application was developed to integrate component information between the selected environments. The OpenModelica Compiler was integrated to the platform to allow system and component behavior simulation. Tests have shown that the tools involved on this investigation still need further development concerning maturity and exchange of information from abstract models down to domain specific models. On the other hand, MBSE has proven to be an important tool to match different team approaches and concerns, improving team communication using conceptual-wide and abstract symbols. Connecting abstract ModelicaML models to a simulation environment using Modelica led to a better understanding of systems behavior prior to realization and provided an analysis environment for early detection of project errors and operational failures.",1970
Applying Social Constructivism in Model-based Systems Engineering Online Instructional Module for Engineering Professionals,"This research-to-practice WIP (Work In Progress) presents the design and assessment of online Model-Based Systems Engineering (MBSE) modules for practicing engineers using social constructivism as a theoretical framework. Despite many advantages of MBSE, experts in this field are still scarce in the current engineering workforce. To address this need, an online module that will be deployed in the summer of 2020 targets practicing engineers as its learners to equip them with MBSE-related knowledge and skills. In industry, teams working on MBSE-related projects usually collaborate across multidisciplinary units. Therefore, social interaction plays an integral role in MBSE training programs. To understand how group interaction could foster learning in online engineering modules, we apply social constructivism as a theoretical framework to engage learners in meaningful interactions and facilitate the acquisition and application of knowledge. The modules will utilize deep-level, student-centered, small-group discussions, and peer review between student groups as forms of social learning in authentic engineering assignments. The assessment of the modules will focus on the effectiveness of social learning in promoting the mastery and application of content knowledge.",1970
Integrating Real-Time Modeling and Assessment into a MOOC Environment for Teaching Model-Based Systems Engineering,"We have designed, developed and deployed a unique edX massive open online course (MOOC) environment for teaching Model-Based Systems Engineering (MBSE) with Object-Process Methodology (OPM) ISO 19450. In this environment, OPCloud, an OPM cloud-based conceptual modeling environment, has been embedded in the edX environment. This has enabled us, as the course instructors, to teach MBSE with an industrial-strength tool that students can experience first-hand. Students received real-time feedback on their performance, along with guidance on what they missed and the option to resubmit. We describe the architecture of this combined MOOC-modeling environment and report on preliminary performance results.",1970
D-REQs: Determination of security & safety requirements in workshops based on the use of model-based systems engineering,"Cyber-physical systems, like autonomous vehicles, are intelligent and networked. The development of such systems requires cooperation between different stakeholders. A lack of system understanding can lead to unidentified (safety relevant) security requirements (SRSR) in early engineering. This can increase product development costs or compromise system safety compliance. Model-based systems engineering (MBSE) improves the system understanding by using models. Conducting workshops in the context of MBSE promotes interaction between stakeholders so that confusion regarding SRSR can be resolved already in the workshop. Using the models created, requirements can be derived in the workshop. However, established security & safety approaches are not specifically designed to be used in conjunction with MBSE and requirements engineering. In this paper, we present an extension of our previously developed SAVE approach. This extension supports a team of stakeholders in workshops to derive SRSR using MBSE. We illustrate our approach with an example from the automotive domain and present an initial field study of the application of our approach, based on a 2-month student project.",1970
Online Model-based Systems Engineering (MBSE) Bootcamp: A Report on Two Day Workforce Development Workshop,"Academia or workforce development workshops can both increase the plausibility of a streamlined transition from a document-centric approach to MBSE frameworks, and aid the integration of Model-Based Systems Engineering (MBSE) within the current industry and the challenges faced, introducing MBSE concepts, tools, and languages. This paper reports on an online model-based system engineering Bootcamp conducted in collaboration with The University of Texas Rio Grande Valley and The University of Texas at El Paso. The importance of MBSE is emphasized throughout the online Bootcamp to a diverse group of audience i.e., students, faculty, and industry professionals unfamiliar with systems engineering. A set of predefined questions through pre and post Bootcamp surveys aided in determining the perceptions of MBSE and the effectiveness of the Bootcamp in increasing the knowledge of MBSE amongst participants. A positive knowledge gain was observed on the importance of systems modeling and MBSE across students, faculty, and industry personnel participants indicating the effectiveness of the online Bootcamp. A set of open-ended questions were targeted specifically for industry professionals from manufacturing, aerospace, healthcare, transportation, and software domains attending the Bootcamp for capturing the perceived challenges and obstacles according to them for implementing Model-Based Systems Engineering in their organizations.",1970
A model-based systems engineering approach to capturing disaster management systems,"The purpose of this paper is to initiate the design of a framework for defining and capturing disaster management systems (DMS). Recognizing the management of disasters as complex adaptive systems (CAS), whose performance cannot be improved through the isolated optimization of their constituents, this paper proposes the adoption of model-based systems engineering (MBSE) to capturing the behavior of such systems, as well as the structure responsible for their behaviors. Using a domain-independent language such as the systems modeling language (SysML) to implement MBSE, the holistic approach proposed here effectively introduces a new paradigm in disaster management studies that is aimed at reducing the aforementioned complexity. By enforcing traceability between the DMS subsystems, and by leveraging artifacts such as viewpoints to develop perspectives that are tailored to specific stakeholders and users, it is anticipated that a MBSE-based holistic approach such as the one presented in this paper will promote proper use of the scientific method for the design, verification, validation and improvement of disaster management systems.",1970
Applying Model-Based Systems Engineering to the Development of a Test and Evaluation Tool for Unmanned Autonomous Systems,"In this paper, we apply the Model-Based Systems Engineering (MBSE) concepts and approaches to the early phases of the development of a Test & Evaluation (T&E) tool for Unmanned Autonomous Systems (UASs). This helps meet the design requirements and maintain traceability (of design requirements and decisions for satisfying stakeholder's needs). UAS development is driving toward increasing levels of autonomy for unmanned systems. The dynamic, non-deterministic behavior of intelligent autonomous systems presents the testers with a significant challenge. The ability to predict the behavior and evaluate performance of increasingly intelligent systems, especially those that employ vision-based behaviors, is seen as a critical T&E shortfall. To address this challenge, we propose, in this paper, to use a high-fidelity simulation environment. This can significantly aid in the evaluation of UAS behaviors and their perception mechanisms. Such a high-fidelity simulator enables the testes to safely conduct a wide variety of mission scenarios to test an autonomous system by providing truth data to compare with the UAS's perceptions. A major challenge here is to manage the system modeling complexity and maintain traceability of design decisions made at each level of the development to meet stakeholder's needs. In this paper, we follow MBSE methodology and use Systems Modeling Language (SysML - a domain-specific modeling language for systems engineering used to specify, analyze, design, optimize, and verify systems) to establish a systematic framework for designing a T&E tool for UASs and to transform stakeholder's needs into design requirements to maintain traceability.",1970
Attribute-oriented modeling — Another dimension for Model-Based Systems Engineering,"This paper presents a new approach to Model-Based Systems Engineering (MBSE) called “Attribute-Oriented Modeling.” This approach is used with a modeling language such as UML. The central concept of this approach is that model elements used in models of systems in a particular domain should be defined with a set of attributes that the system components to be modeled possess. The model of a system is created by specifying, for each component in the system, the values of the attributes that the model element that represents the component has.",1970
Software and Methodological Toolkit for the Design and Development of Technical Devices in the Model-Based Systems Engineering Paradigm,"Model-based systems engineering (MBSE) and its' tool the Systems Modelling Language (SysML) are recognized to serve as the fundament for design and development (D&D) of system models and digital twins. But the existing MBSE software (SW) tools based on SysML are complex and expensive. The paper raises the question: “Is it possible to make usage of MBSE software and methodological tools during space instruments design and development (SIDD) available to a wide audience of potential users?” To answer this question, for SIDD lifecycle phases (LPs) were developed methodological tools (MTs) based on improvements of such MBSE tools as Quality Function Deployment (QFD), House of Quality (HoQ); SysML, and their synthesis with systems engineering (SE) tools. MTs were implemented in the widely available SW tools. Proposed MTs allow to reduce time required for SysML requirements diagram development and update from several days to minutes; for LPs realization from 5 to 10%.",1970
Design Method of Radar Human-Computer Interaction Software Based on MBSE,"Aiming at the shortcomings of the traditional development mode of radar human-computer interaction (HCI) software in terms of design efficiency and design quality, through the study of model-based systems engineering (MBSE), a model-based radar HCI software development mode is proposed. Discusses the purpose and importance of introducing prototype design into MBSE, gives the method of encapsulating various interactive elements required in the process of prototype design into radar HCI domain model library to realize rapid reuse, and the method associated with MBSE's requirements management tool DOORS, and also gives the method of automatically generating code based on prototype, combined with examples, the process of integrating the model to construct a HCI virtual prototype is given. Practice has shown that the design method of radar HCI software based on MBSE can effectively improve the work efficiency and work quality of designers, and is of great significance to improving the professionalism, standardization and advancement of radar HCI design.",1970
Enabling Assurance in the MBSE Environment,"Model Based Engineering (MBE) is emerging in the aerospace sector as an important contributor to improved development from concept to production. Indeed, Model Based Systems Engineering (MBSE) is leading the way in moving from a document centric development process to the digitally enabled modeling environment. In NASA, selected major projects have moved forward with MSBE enabled development. Examples include NASA's Europa Clipper project led by the Jet Propulsion Laboratory (JPL) in which systems modeling effort has been at the forefront from the beginning, and NASA's Orion in which modeling has enabled more effective development of the guidance and navigation (GN&C) software [1, 4]. These examples are relevant as they define the state of the art in implementation of model based concepts.",1970
Model-Based Systems Engineering Using Structure-Behavior Coalescence Modeling Language,"The core matter of Model-Based Systems Engineering (MBSE) is a consistent modeling language that includes an abstract syntax called metamodel and a concrete syntax called user model. The MBSE modeling language used is to certify model consistency among various use model diagrams. Unfortunately, most current MBSE metamodels cannot project every individual concrete syntax diagram as a metamode view. This research proposes the Structure-Behavior Coalescence (SBC) modeling language, which uses the SBC Process Algebra (SBC-PA) as the MBSE metamodel and the SBC Architecture Description Language (SBC-ADL) as the MBSE user model. In the SBC modeling language, each diagram in SBC-ADL is projected as a view of SBC-PA. That is, when we conduct SBC modeling construction, the inconsistent problems of the MBSE model will be avoided entirely.",1970
A Model Based Systems Engineering Approach for Behavioral Responses to Advanced Quantitative Precipitation Information,"Atmospheric rivers (AR) contribute a significant portion of the precipitation for the United States’ west coast. Flooding events caused by ARs can create millions of dollars in damages. Identifying probable ARs and early warning of potential flooding events can provide state and local agencies the time to prepare for such events. The Bay Area Advanced Quantitative Precipitation Information (AQPI) system links users with varied meteorological data ranging from weather radar observations, short term forecasts (Nowcast), 12-hour forecasts, and coastal inundation modeling data. The range of data types presents an opportunity for proactive responses by the users; however, it also presents the challenge of ensuring the correct data is available to the appropriate user. Through Model Based Systems Engineering (MBSE) Behavioral Analysis, the AQPI team analyzes the appropriate requirements for each of the different types of AQPI users. MBSE behavioral analysis leads to the development of a system that services the broad user community’s needs while giving each user group a specific interface tailored for them. This engineering approach also allows for the separation of the processing and weather model execution from the user interface. This separation allows for development and advancements in processing without being tied to the user interfaces.",1970
Identifying the Thematic Trends of Model Based Systems Engineering in Manufacturing and Production Engineering Domains,"Manufacturing and production systems have become increasingly complex in the past decade to meet the competitive demand in a growing industry. As these systems grow in complexity and flexibility, there is a need for efficient management and analysis of these systems. Model-based systems engineering (MBSE) addresses the complexity inherent with systems development with a model-centric approach that supported tailored modeling languages, methods and tools. This paper identifies the thematic evolution and trends and relationships found in the use and application of MBSE specifically in the manufacturing and production engineering domain. A collection of 471 published article from Institute of Electrical and Electronics Engineers (IEEE) and Science Direct over the past decade were used for the analysis using text mining techniques. Due to the limitation on the access to full text information of all the articles identified, only abstracts were considered for analysis. This effort helps the researchers across the domain to explore the reason behind and understand the change of the thematic perspectives of MBSE application over the last decade. In addition, the finding of the growing interest in addressing the aspects of complexity and systems requirements, and on the aspects of the use of MBSE for identifying and addressing the challenges related to Cyber Physical Systems help in paving a path for future research.",1970
Model based systems engineering high level design of a sustainable electric vehicle charging and swapping station using discrete event simulation,"In line with the spate of technological advances, the transportation industry has also witnessed an increase in the adoption of Electric Vehicles (E.Vs). However, there has been and are still some underlying negating factors to the wide spread acceptance of these electric vehicles; one of note is the unavailability and inaccessibility of adequate charging infrastructure, long charging times, limited driving ranges, costs of the vehicles etc. These and many more characteristics lead to a trend popularly known as ""range anxiety"". One of the major strengths of electric vehicles are their ability to be powered by electric energy via stored chemical energy in rechargeable batteries. Some electric vehicles run solely on batteries (Battery Electric Vehicle - BEVs), while others are a hybrid of the electric vehicles and the internal combustion engines (Plug-in Hybrid Electric Vehicles - PHEVs, and Hybrid Electric Vehicles - HEVs). However, since these electric vehicles lean towards reducing atmospheric pollution (Carbon monoxide, hydrocarbons etc.) caused by internal combustion engines, it also follows that the means of recharging these electric vehicles should also be geared towards reducing pollution to some degree. Hence, the concept of renewable energy sources powered recharging stations. However, before a lot of resources are committed into building such an infrastructure, a model should be developed which will take into account certain key factors such as storage capacity, type and size of the renewable sources, facility layout, policies and other identified stakeholders requirements which are evaluated and used in trade-off and decision analysis. However, the status-quo involves around a document-centric methodology of system development. This methodology carries with it challenging characteristics such as poor communication of data between and within interested parties, inability to contain complexities inherent in today's projects, stored data becoming prone to damage as a result of storage or usage and sometimes, inaccessibility of data. In line with current systems engineering practice, we propose a model-centric approach of the system development life-cycle, which will negate some of the drawbacks of the document-centric approach. In this work, a two-level approach is proposed: First, the model based systems engineering (MBSE) framework approach is implemented utilizing the systems modeling language (SysML) to formulate and show different views and architecture of the system in question. The objectives of this MBSE approach in addition to offering different views of the model are also to aid in real-time communication and collaboration of designs which links to understanding change configurations and impact, requirements verification, and traceability. In the second approach, a discrete-event simulation (Arena) tool is used as the reference simulation optimization tool for the model's architectural analysis. The discrete-event simulation (DES) models a hypothetical renewable-energy powered charging and swapping station with the objective of maximizing the electric vehicle's throughput (amount of EVs successfully recharging and swapping batteries in the facility). Certain constraints such as the allowable area for the solar panels, operating budget, amount of energy to purchase from the main grid etc., are included to account for a realistic adaptation of the facility, which is in line with the concept of the renewable energy sources powered recharging stations previously mentioned. Statistical analysis are performed on the optimized architectures to evaluate and compare the design configurations based on the stakeholder's requirements. The optimized parameters are then used to verify and validate the requirements. These categorization of events support the application of MBSE and simulation to the early stages of the system life cycle development of the high level design of an electric vehicle charging and swapping station.",1970
A Model-based Systems Engineering Methodology for Aircraft Air-ground Status Management,"A modern civil aircraft is a mega system that includes complicated sub-systems with intricate wire connections and signal exchanges. Air-ground status as a crucial operating parameter for various on-board systems is long discovered to have lacked consistency and incurred a series of coordination problems. In aviation industry, Model-Based Systems Engineering (MBSE) method has been extensively applied so as to manage comprehensive projects, but little research has targeted on using MBSE to improve air-ground status management. This article introduces air-ground status concept, provides air-ground signal design guidelines and proposes a novel MBSE air-ground status management method. Using SysML, the approach is capable of depicting signal propagation and system composition, setting up a universal standard for system designers to follow, rendering easy access to error tracing and problem solving and spurring reliability and stability of signal related aircraft architecture design.",1970
Enabling design of agile security in the IOT with MBSE,"Design for system security within the IOT is a critical issue for Systems Engineering. The threat is agile and always evolving. One promising approach is the application of agile systems architecture to the design of system security. However, to be successful, systems engineers and security engineers will require a design process and framework that supports the definition of a system combining both resilience and continuous evolution of security capability. This paper presents an overview of the agile systems architecture, along with an approach to model and describe the specific elements of the agile architecture through application of model-based systems engineering and use of enterprise architecture frameworks to address features of the architecture that reside in both the design time and operating time domains.",1970
A Bibliometric Analysis on Model-based Systems Engineering,"Model-based systems engineering (MBSE) has been accepted as an extremely important approach to understanding the multi-domain research field comprehensively. In this paper, a bibliometric analysis is used to conduct a comprehensive survey of model-based systems engineering literature of the last five years. The VOSViewer is used to implement visual network analysis for co-authorship, citation, and co-occurrence of the MBSE related papers. The results of the bibliometric study, firstly, reveal the influential research teams and sources. Secondly, research hotspots in the current MBSE domain are identified. The findings of this study aim to help researchers to gain a faster and deeper understanding of the current literature on MBSE.",1970
Cabin pressurization control system design of civil aircraft by model based systems engineering,"This paper introduces the application of model based systems engineering (MBSE) method in designing cabin pressurization control system (PCS) for civil aircraft. Rhapsody and Simulink are used as the design and simulation tools. Use cases, functions flow, and state-machines of the system are built by corresponding models in three MBSE design phases, i.e. requirements analysis, function analysis and design synthesis. System models are verified by SysML and Simulink collaborative simulation.",1970
Civil Aircraft Auto Brake System Development Using Model-Based Systems Engineering,"Civil aircraft auto brake system development based on Model-Based Systems Engineering(MBSE) technology is proposed in this paper. After requirements analysis, functional analysis and architecture synthesis three phases, use case model, function analysis model, tradeoff model and logical architecture of system are established in Rhapsody using Systems Modeling Language(SysML). Then a collaborative simulation mechanism combining Rhapsody/Simulink model is proposed to solve the defect that SysML can’t describe the continuous behavior of system. Collaborative simulation enables system designers to carry out comprehensive and timely verification of dynamic behavior and correctness of modeling by simulating the overall composition which greatly improves the efficiency and accuracy of development.",1970
Model-Based Systems Engineering for Aircraft Design With Dynamic Landing Constraints Using Object-Process Methodology,"We present a model-based systems engineering (MBSE) framework using object-process methodology (OPM, ISO 19450) for civil transport aircraft design with dynamic landing constraints. The framework integrates the aircraft system development life cycle processes into a holistic MBSE model, incorporating into it the specific aircraft dynamic loads model-based design (MBD) domain. Using this framework, we also perform model-based requirements analysis, validation, and verification. The model parameter set is governed by a unified format used for both the MBSE and MBD domains. The resulting model enables aircraft design processes to start being formalized at the early conceptual design stage and carry on to detailed design, adding value to system lifecycle processes by integrating and streamlining the MBSE and MBD domains into a more holistic framework with seamless transition between these two major stages.",1970
Finite Degradation Structures: a Formal Framework to Support the Interface between MBSE and MBSA,"In this article, we propose to use finite degradation structures to support the interface between model-based systems engineering (MBSE) and model-based safety assessment (MBSA). Finite degradation structures are an algebraic framework, recently introduced by the authors, that captures the essential notion of degradation order between the states of a system. They make it possible to describe in a formal way under which conditions a safety model is an abstraction of another one. For this reason, they provide the mathematical ground on which methods to synchronize models designed by systems architects and those designed by safety analysts can be built. We illustrate the proposed approach by means of an example stemmed from industrial practice.",1970
LITHE: An Agile Methodology for Human-Centric Model-Based Systems Engineering,"This paper proposes an agile model-based systems engineering (SE) methodology (LITHE methodology) to engineer the contemporary large, complex, and interdisciplinary systems of systems. The methodology relates the processes, the methods, and the tools in order to support an effective model-based development context. The LITHE uses a universal and intuitive SE base process, reducing the complexity and intricacy of the base methods, emphasizing the agile principles such as continuous communication, feedback and stakeholders' involvement, short iterations, and rapid response, and rousing the utilization of a coherent system model developed through the benchmark systems graphical modeling languages. Aiming to support the development of successful systems, which satisfy the stakeholders' expectations, the methodology is particularly concerned with human systems integration, so the related fundamental aspects are considered throughout the engineering process. The LITHE methodology also includes a supporting graphical tool that aims to be an agile instrument to be used by systems engineers in a model-based development environment. To illustrate the effectiveness of the proposed methodology and to provide some validation, an empirical case study related with the development of a real large and complex system (the Guiding Urban Intelligent Traffic and Environment system) is also described.",1970
A Model-Based Systems Engineering Approach for the Efficient Specification of Test Rig Architectures for Flight Control Computers,"The validation, verification, and integration of flight control computers (FCC) for today's increasingly complex flight control systems are generally on the critical path in aircraft development programs. Therefore, the test rig for the FCC, being a complex system itself, needs to be developed in a very short timeframe, starting the specification with many uncertainties about the system under test. This article presents a model-based system engineering (MBSE) methodology for the efficient specification of test rigs for FCCs. A systematic analysis of the prevailing common elements and variability in test rigs is presented. This analysis translates into a generic and reusable specification framework allowing the efficient and effective specification of new test rigs. The proposed MBSE approach covers operational and functional needs analysis and generic logical and physical architecture modeling at two levels of detail. A variant management capability is implemented to manage the different types and configurations of test rigs. This article closes a gap in the literature about test rig specification for modern FCC and contributes to the maturation of MBSE approaches and their practical implementation in the industry context.",1970
Bioanalytical Device Design With Model-Based Systems Engineering Tools,"Development of bioanalytical devices requires a multidisciplinary team working together. In the current article, the model-based systems engineering (MBSE) methodology is applied for the design of a bioanalytical device, in order to create a unique system model with consistency of model elements and relations. This allows a multidisciplinary team to work together in order to define and develop the overall system, from bio/chemical processes to software, hardware, and mechanics; for example, scientists may express bio/chemical events in the system model in a way that the design engineers understand the process and requirements, learn the constraints, and develop the system accordingly. In the article, a tailored version of the object-oriented systems engineering method modeling method was used together with systems modeling language. The major steps of the modeling method utilized include define problem, define context level, define technical requirements, define logical level, and define physical level. The modeling method developed for the article may be used as a base for the development of bioanalytical devices. There is a market push to develop new bioanalytical devices, such as point of care sensors. It is believed that the transformation of the product lifecycle process from document centric to MBSE will provide a competitive advantage to the life sciences industry.",1970
Design Ontology Supporting Model-Based Systems Engineering Formalisms,"Model-based systems engineering (MBSE) provides an important capability for managing the complexities of system development. MBSE empowers the formalism of system architectures for supporting model-based requirement elicitation, specification, design, development, testing, fielding, etc. However, the modeling languages and techniques are heterogeneous, even within the same enterprise system, which leads to difficulties for data interoperability. The discrepancies among data structures and language syntaxes make information exchange among MBSE models more difficult, resulting in considerable information deviations when connecting data flows across the enterprise. Therefore, this article presents an ontology based upon graphs, objects, points, properties, roles, and relationships with extensions (GOPPRRE), providing metamodels that support the various MBSE formalisms across lifecycle stages. In particular, knowledge graph models are developed to support unified model representations to further implement ontological data integration based on GOPPRRE throughout the entire lifecycle. The applicability of the MBSE formalism is verified using quantitative and qualitative approaches. Moreover, the GOPPRRE ontologies are used to create the MBSE formalisms in a domain-specific modeling tool, MetaGraph, for evaluating its availability. The results demonstrate that the proposed ontology supports the formal structures and descriptive logic of the systems engineering lifecycle.",1970
Potentials of Design Thinking for knowledge transfer of Model-Based Systems Engineering,"Industrial products are becoming increasingly complex due to the use and development of mechatronic systems. This increasing complexity is addressed by virtual representations of the systems in the form of interdisciplinary models. Model-Based Systems Engineering (MBSE) supports product development from the early development phase through validation, verification and integration up to later life cycle phases of the product by means of system modeling.Typical drivers for innovations in the industrial environment are business viability, technology driven feasibility and human driven desirability. While business viability and feasibility are considered in most product development processes and innovation driven projects, the human factor is often neglected in this context. This is addressed by a MBSE Capability and Maturation Matrix (CMM), which consists of capabilities for the acquisition and mastering of the MBSE competencies. The authors have considered Design Thinking as a feasible approach to transfer MBSE knowledge and thus support this acquisition MBSE competencies. This publication shall present the first findings on the application of Design Thinking for the creation of a user-centered MBSE introduction event. This event shall be used in further iterative steps to teach non-experts in the MBSE field the required competencies for their work and thus support the CMM development capability.",1970
A Cross-disciplinary Model-Based Systems Engineering Workflow of Automated Production Systems Leveraging Socio-technical Aspects,"With the increasing integration of multiple disciplines, Model-Based Systems Engineering (MBSE) has become more beneficial for the development of automated production systems. However, even though discipline- specific models can be connected via a system model, how to apply MBSE in a cross-disciplinary context in the industry remains challenging due to complex organization, inefficient communication and limited knowledge of the staff. In this paper, a workflow of automated production system development combining MBSE, sociology and team collaboration is proposed and leveraged against the traditional workflow. BPMN+I is applied for modeling cross-disciplinary collaborations and assessing team and organizational factors.",1970
Applying Model-Based Systems Engineering for Product Engineering Management concepts for industrial application,"Model-Based Systems Engineering (MBSE) is regarded as the key to face the challenges of tomorrow's product engineering. Core of the MBSE is the so called system model, enabling a consistent specification of the product from different points of view. Nevertheless, we fear that the MBSE vision of INCOSE is not realistically achievable: There is much focus on the technical issues of MBSE, e.g. automatic code generation. But classical Systems Engineering (SE) issues and concerns driven by stakeholders as product managers or project management closely working together with the systems engineer are neglected. This is critical, as SE is a holistic approach, the mentioned stakeholders definitely gain benefits of the MBSE and they furthermore have the possibility to accelerate MBSE introduction due to budget concerns. Thus, there is a critical need to connect SE activities to the MBSE domain providing more acceptance to the approach. We present a concept to integrate SE and MBSE and exemplarily connect a stakeholder analysis as presentative method for SE and product management issues to the system model. The foundation for this approach is the comprehension of the distinction of model and view, e.g. proposed by ISO/IEC 42010.",1970
An MBSE Framework to Identify Regulatory Gaps for Electrified Transport Aircraft,"A typical aircraft certification process consists of obtaining a type, production, airworthiness, and continued airworthiness certificates. During this process, a type certification plan is created that includes the intended regulatory operating environment, the proposed certification basis, means of compliance, and a list of documentation to show compliance. Earlier work by the authors demonstrated a model-based framework for the management of these certification artifacts for normal category airplanes. Presently, it is expanded and adapted to consider certification for transport category airplanes regulated under 14 CFR Part 25, providing clear transparency and traceability between the text of the regulations and imposed requirements, contextual information, and specified test activities. In particular, a capability to identify potential gaps in the applicability of regulations for novel architectures such as electrified aircraft is proposed. This capability, based on mismatches between the functional intent and the corresponding prescribed physical implementation, is developed. A sample implementation of the proposed capability is presented for a notional electrified powertrain aircraft architecture.",1970
Integrated model-based systems engineering (MBSE) applied to the Simulation of a CubeSat mission,"Small satellite missions are becoming increasingly complex as scientists and engineers propose to utilize them to accomplish more ambitious science and technology goals. Small satellites such as CubeSats are challenging to design because they have limited resources, coupled subsystems, and must operate in dynamic environments. Model Based Systems Engineering (MBSE) is a key practice to advance systems engineering that can benefit CubeSat missions. MBSE creates a system model that helps integrate other discipline specific engineering models and simulations. The system level model is initiated at the start of a project and evolves throughout development. It provides a cohesive and consistent source of system requirements, design, analysis, and verification. This paper describes an integrated, executable MBSE representation of the Radio Aurora Explorer (RAX) CubeSat mission. The purpose of the RAX mission is to study the formation of magnetic field-aligned electron density irregularities in the Earth's ionosphere, which are known to disrupt tracking and communication between Earth and orbiting spacecraft. The RAX CubeSat model describes the configuration and properties for various systems and subsystems, and is capable of executing behavior and parametric models for analyzing subsystem functions and states of the spacecraft. It is comprised of a SysML model created with MagicDraw®, a set of analytical models developed in MATLAB®, and a high fidelity space system simulation model created in STK®. ModelCenter was used to integrate the analytical and simulation models. The integrated analyses were linked to the SysML model using MBSE Analyzer, a bridge between SysML tools and ModelCenter. Behavioral models were executed for a representative RAX mission to study energy state and data collection capabilities. This work was undertaken to demonstrate the power, scalability, and utility of MBSE tools and methods that are available to help meet the challenge of designing spacecraft missions of ever-increasing complexity. The RAX CubeSat model will be made available to the academic community for further study and potential extension for more complex missions.",1970
Design Ontology in a Case Study for Cosimulation in a Model-Based Systems Engineering Tool-Chain,"Cosimulation is an important system-level verification approach aimed at integrating multidomain and multi-physics models during complex system development. Currently, the lack of integrating system development process with cosimulations leads to gaps between them, decreasing the effectiveness and efficiency of system development. Model-based systems engineering (MBSE) tool-chains have been proposed to facilitate the integration of complex system development and automated verification using a model-based approach. However, due to the lack of formal and structured specifications, development information sharing is difficult for supporting MBSE facilitating automated cosimulations. In order to formalize cosimulation in an MBSE tool-chain, a scenario-based ontology is developed in this paper, using formal web ontology language (OWL). Ontology refers to a specification expressing the cosimulation implementations as well as the development information represented in the models supporting the MBSE. It is illustrated by a case study of a cosimulation based on Simulink. Protocol and resource description framework (RDF) query language (SPARQL) and semantic query-enhanced web rule language queries are proposed for evaluating the ontology's completeness and logic for supporting cosimulations. The result demonstrates that the scenario-based ontology formalizes the information related to automated cosimulation development and configurations while using the proposed MBSE tool-chain.",1970
Investigating the Flexibility of the MBSE Approach to the Biomass Mission,"Model-based systems engineering (MBSE) represents a move away from the traditional approach of document-based systems engineering (DBSE), and is used to promote consistency, communication, clarity, and maintainability within systems engineering projects. MBSE offers approaches that can address issues associated with cost, complexity, and safety. One way that this can be achieved is by performing early functional validation of the high-level spacecraft functional avionics system. The use case discussed in this article focusses on the Biomass model, a systems modeling language-based representation of the Biomass Earth-observation mission. The MBSE approach is used to calculate the required size of the data handling unit onboard the Biomass spacecraft. The functional response of the system in terms of the onboard memory usage throughout the mission is simulated. Traditionally, this level of analysis would not be available at this early stage. The approach aims to replace ad hoc, spreadsheet-based calculations with a formal representation of the system that can be executed, interrogated and quantified. The flexibility of this MBSE approach is demonstrated by applying changes to the Biomass project and assessing the time required to implement these changes in the Biomass model and propagate them through to the results of the simulation. The changes have been made independently of each other and include: changes to the logical architecture, changes to the functional definition, changes to the mission profile, and changes to the requirements. Potential areas for improvement regarding the structure of the Biomass model are highlighted and discussed.",1970
MBSE and the Concept Model of the Internet of Things-Based Data Link System Designing Method,"In view of the problems faced by the traditional data link system design, such as insufficient theoretical basis, nonstandard design process, and weak guidance for system implementation, a new data link system design method is proposed based on model-based systems engineering (MBSE) and the conceptual model of the Internet of things. This method refers to the idea of MBSE to refine the design flow models, which generates system architecture by requirements analysis, and then generates the system composition and interface description by using the concept model of the internet of things, so it can guide the subsequent detailed design and the development better. This method provides a specific and normative design flow, which is beneficial of reducing workload, improving work efficiency and making the outcome more intuitive and complete.",1970
Architecting Success in Model Based Systems Engineering Pilot Projects,"Model-Based Systems Engineering (MBSE) is an emerging paradigm for improving the effectiveness and efficiency of the practice of systems engineering that infuses integrated descriptive representations of a system to capture knowledge about the system and serve as a medium of communication of that knowledge for the benefit of all stakeholders. This paper describes some of the key lessons learned over the course of several MBSE pilot projects over the past several years and extracts recommended best practices based on those experiences, focused primarily on the proper application of system architecting and engineering principles and methods to improve the planning and execution of pilot implementations of MBSE.",1970
Use of Patterns for Know-How Reuse in a Model-Based Systems Engineering Framework,"The increasing complexity of systems being developed requires engineers to review their practices to improve engineering efficiency and meet the needs of a competitive market. To answer these challenges, engineers have always reused their know-how. However, facing today's rising complexity, reuse has to be much more performant. That is why models supported by formal or semiformal languages are preferred to avoid the variability of natural languages interpretation. In this context, model-based systems engineering (MBSE) made it possible to change the engineering paradigm by proposing a unique, shared system model. To promote and ease MBSE adoption, reuse should be fostered to respect the engineer's working method. A promising method for reusing models is based on the pattern concept. Thus, this article aims to review and evaluate the pattern concept as a means of transferring know-how and fostering reuse in an MBSE approach.",1970
Applications in Model Based Systems Engineering for Supportability of Fielded Assets,"Supportability elements represent a majority of a system's total Life Cycle Cost during the Operation and Support phase. The Model-Based System Engineering (MBSE) approach is an exceptional opportunity for new design products in the System Acquisition phase of the lifecycle. However, there are ways to utilize the MBSE process within existing products that are fielded. These approaches within MBSE are important because many systems in the Department of Defense are in the operation and support phase (a system's service life can reach as far as 90 years as in the Boeing B-52 Stratofortress [1]). The intent of this paper is to discuss repeatable approaches to modeling existing systems that assist in analyzing fielded systems and do not require tedious MBSE skills to build the model.",1970
Multi-Paradigm Modelling For Model Based Systems Engineering: Extending The FTG + PM,"Model Based Systems Engineering (MBSE) supports Cyber-Physical Systems (CPS) design, by experts from various domains, through complex workflows, manipulating models in different formalisms, each with their own methods, techniques and tools. We refer to often-used combinations of workflow and formalism patterns as modelling paradigms. The Formalism Transformation Graph (FTG) and Process Model (PM) are key components in Multi-Paradigm Modelling (MPM) based MBSE, which combines multiple modelling paradigms. This paper extends the FTG + PM framework: a Process Trace (PT) records all start/end events of engineering activities as well as all versions of all artifacts consumed/produced by them. A PT results from the enactment of a PM. The artifacts and activities in the PT are “virtual”: though referred to in a technology-agnostic manner, they are realized using various technologies. Adapters translate between both, making the FTG + PM federated. An Automated Guided Vehicle (AGV) example is used.",1970
A Model Based Systems Engineering Approach to Automated Music Arrangement,"MBSE (Model Based Systems Engineering) is considered a valuable and effective approach not only in engineering domains, although it appears to bring a potential assistance to artistic visions and initiatives. The cross-domain capitalization is the key to further innovation and advances in technology. This paper describes an MBSE approach, applied to the development of a complex multi-component arrangement system, to generate an automated music arrangement for any melody, with a harmonically correct result. The user introduces the melody in the form of a MIDI file. The system analyzes the melody, detects the scale, then follows algorithms based on thorough theoretical and harmonic studies, to finally generate the arrangement based on the selected music genre (classical, jazz, pop, etc.). Compared to other existing systems in the market, the developed system largely reduces the dissonance between the melody and the arrangement, which makes the final arrangement a good accompaniment to the melody.",1970
Perceptions and the extent of Model-Based Systems Engineering (MBSE) use – An industry survey,"Model-Based Systems Engineering (MBSE) supports the development of complex systems through capturing, communicating, and managing system specifications with an emphasis on the use of modeling languages, tools, and methods. It is a well-known fact that varying levels of effort are required to implement MBSE in industries based on the complexity of the systems a given industry is associated with. This paper shares the results of a survey to industry professionals from Defense, Aerospace, Automotive, Consultancy, Software, and IT industry clusters. The research goal is to understand the current state of perception on what MBSE is and the use of MBSE among different industry clusters. The survey analysis includes a comparison of how MBSE is defined, advantages on the use of MBSE, project types, specific life cycle stage when MBSE is applied, and adoption challenges, as reported by the survey participants. The researchers also aim to trigger discussions in the MBSE community for identifying strategies to address MBSE related challenges tailored to a specific industry type.",1970
Examples of AI-based Assistance Systems in context of Model-Based Systems Engineering,"Digitization is changing many fields of our society. Technical systems in particular are undergoing major changes. Tomorrow’s systems are characterized by their autonomy, high level of interconnection, and socio-technical interfaces. These systems can no longer be developed by one engineering discipline alone, but require interdisciplinary development teams. This type of development requires a high degree of collaboration, communication, and orchestration. Model-Based Systems Engineering (MBSE) supports engineers in the interdisciplinary development of future systems. MBSE uses models to generate a unified and complete view of the system. This allows changes to be easily tracked and the visualization helps to understand the system discipline-independent. The creation of these models still requires high effort. New AI technologies can be used to derive potential assistant systems in the context of MBSE. This paper shows realized examples of AI-based assistance systems. They are motivated by the experience of using MBSE in research and development projects with high complexity and inter-disciplinarity. The presented results are defined and first prototypically realized assistance within student projects.",1970
A Model-Based Systems Engineering Approach to Trade Space Exploration of Implanted Wireless Biotelemetry Communication Systems,"This paper summarizes the application of model-based systems engineering (MBSE) to the development of a system trade study and decision-making tool for implantable ultra-wideband (UWB) wireless biotelemetry communications systems. The systems modeling language (SysML) is used to develop graphical representations, called descriptive models, of the system architecture, parameters, and interdependencies along with leveraging various analytical tools to produce performance and safety assessments of various system configurations. Both descriptive and analytical models are linked together to enable system designers the ability to rapidly run a wide range of system configurations such that the results can be visualized, analyzed, and pruned to meet system safety and performance requirements. This integrated system approach is more effective than typical standalone or disparate analysis since it enables system designers the ability to consider multivariate scenarios in the system simulation as compared to only a few. The modeling framework is also consistent and easily verified and validated at the component, sub-system, and system levels. An ultra-wideband communication system with an implanted transmitter sub-system is the exemplary case considered in this paper.",1970
Interaction between capabilities of Model Based Systems Engineering on sensor models,"In modern product development, models are often used for different purposes, e.g., system synthesis, trade-off analysis of system parameters or visualization and creation of design concepts. For some models, this purpose as well as the model itself might change over time. New interactions with the target system can occur and new details are added over time. Both have to be integrated immediately into the development procedure. When models are not maintained up to date and not used by different stakeholders, the benefits of the model-based approach are lessened due to the effort for generation and maintenance. The five development capabilities of MBSE, comprising Systems Environment Analytics (SEA), Systems Definition and Derivation (SDD), Systems Interaction Modeling (SIM), Systems Lifecycle Engineering (SLE) and the MBSE Capability and Maturation Matrix (CMM) address this topic on a capability level.In this article, the authors point out the interaction between these development capabilities on the example of a Pedestrian Emergency Braking System (PEBS) development in automotive industry, with a focus on sensor models. It will be shown exemplary how one development capability might influence another and how this interaction supports the development of complex systems.",1970
A Model-Based Systems Engineering Approach to Support Continuous Validation in PGE - Product Generation Engineering,"Increasing customer demands, especially regarding functionality, safety and environmental sustainability, are major drivers of nowadays product development processes. Those increasing demands as well as today’s product development context of distributed interdisciplinary development teams lead to an increasing complexity of systems as well as their respective development processes. MBSE - Model-Based Systems Engineering is regarded as a promising approach to cope with this complexity. MBSE aims at supporting during the whole product lifecycle in system analysis, requirements management, design as well as verification and validation. Especially validation plays a central role in product development as it is the only activity that can ensure customer satisfaction and thus a successful product on the market. However, comprehensive MBSE-approaches to support validation in product development seem to be missing. This paper describes such a MBSE approach to support validation in product development. The approach includes an ontology of terms and their interrelations in the context of validation. The ontology is used to construct viewpoints, views and a modeling framework to structure a system model in the understanding of MBSE. In addition, a modeling method interacting with the constructed views is developed and presented. The presented approach aims at enabling a continuous validation concept, starting in the early phase of PGE - Product Generation Engineering and continuing throughout the entire lifecycle. Furthermore, the approach should support in integrating the development of products and appropriate validation systems, creating a consistent traceability of information throughout the created models. Finally, a specific focus of the approach lies on usability in order to guarantee individual and organizational acceptance. This acceptance is of particular importance to realize a human centered development as it is envisioned in approaches such as ASE - Advanced Systems Engineering.",1970
The Niftiness of Executable MBSE Black Box Models: A Satellite Subsystem Exemplar,"Black box descriptions created using a model-based systems engineering approach provide an excellent way to communicate a complex system concept. Furthermore, it enables the early analysis of the system’s desired emergent behavior before embarking on a detailed system design. In this paper, an exemplar executable Black box system model is developed for the “Provide Full Duplex Data Relay Service” Use Case for a communication subsystem used for intersatellite communication. Behavioral and parametric diagrams are created and used to analyze the black box system model behavior and properties. The resulting model portrays that the utility and efficacy of an executable black box model goes beyond being just an abstract representation of a System of Interest to demonstrating how it fosters the development of a complete and more robust requirement baseline.",1970
TES-SAVi AWESUM™ model-based systems engineering (MBSE) for FACETM applications,"This paper presents an industry-unique approach and improved model-based engineering practices for software reliant aircraft systems aligned with the Future Airborne Capability Environment (FACE™) open system technical reference architecture. A lifecycle toolset is described which fuses systems and software modeling and simulation (M&S) capabilities, modular open system architectures (MOSA), and device and sensor integration techniques into a single package to enable rapid design, development, verification, certification, and deployment of interoperable, platform portable, embedded mission-critical safety-critical avionic systems. TES' MBSE lifecycle toolset, AWESUM™, supports system architecture and virtual integration (SAVI) of cyber-physical system (CPS) assets, and evaluation of these platform assets through simulated mission rehearsals in a network-centric collaborative virtual environment. The result is improved systems product. The toolset has been demonstrated to several aviation-focused communities including the American Helicopter Society International (AHS), the Association of Old Crows (AOC), the FACE Consortium, and the US Army's Aviation and Missile Research Development and Engineering Center (AMRDEC), with favorable response. TES demonstrated a virtual simulation of realistically modeled and simulated multiple dissimilar aircraft platform systems conducting network centric operations (NCO). With the goal of improving flight-safety and enhancing the situational awareness (SA) of the battle-space, virtual missions were executed showing the inter-operations of cyber-physical system (CPS) assets and capabilities from reusable FACE-aligned applications. The simulated battle-space was composed of device-configured simulated flight models of both manned and unmanned rotorcraft platforms operating within a virtual environment of real-world terrain data. The environment included simulated threats and obstacles used to stimulate platform devices that report detections and produce alerts for own-ship flight mishap avoidance. These detections were then packaged into communications messages (VMF) and shared off-platform via NCO to the common operating picture (COP) to enhance the SA operations of the battle space flight group. After a decade of development and use supporting US Army military common software programs for the PM-AME and AMRDEC, TES is now making its industry-unique approach and model-based airworthy systems/software lifecycle product line available to industry. The MBSE lifecycle toolset product suite, referred to as AWESUM™ for AirWorthy Engineering Systems Unified Modeling, is a comprehensive model-based environment aligned to DO-178C, DO-331, AC 20-148, AR 7062, and FACE™. The AWESUM™ tool suite is currently supporting the US Army's Joint Common Architecture project, a model-based avionics architecture for the Joint Multi-Role family of future vertical lift platforms, and two other FACE-aligned US Army Aviation programs within the military communications and aircraft survivability domains. This is TES-SAVi's first publication and presentation to the IEEE. While we have applied our capabilities to the Military Aviation domain, these capabilities can be effectively applied to Aerospace and other domains.",1970
Guidelines for systematic functional decomposition in model-based systems engineering,"The increasing complexity in today’s products require an ever more systematic product development process in which the use of model-based systems engineering (MBSE) plays an increasingly decisive role, especially against the background of cross-disciplinary collaboration. Having evaluated the actual state of the art, many companies still have true difficulties when modeling the functional architecture with the help of actual approaches. Thus, a new procedure with concrete guiding rules and control criteria to strategically define and decompose functions for the two perspectives a greenfield and brownfield environment is theoretically introduced and partly applied to a practical example.",1970
Model-based Systems Engineering methodology for defining multi-physics simulation models,"Due to the increasing complexity of the systems to be developed, it is necessary to proceed to an ever more precise modeling. The design of products delivered to customer are driven by industrial criteria grouped under the acronym SWaP-C (Size, Weight and Power and Cost). They must be the smallest, lightest, most energy-efficient, least expensive and most efficient as possible, with even shorter lead times and limited budgets. We identified two main problems in the design of complex systems, the need of a clear interface between Systems Engineering and Model Providers, and an adequate consideration of multi-physics and multi-component interactions. This paper suggests a methodology developed to ensure a consistency between the system architecture and models of physics simulation. This methodology creates a bridge between MBSE and physical simulation discipline by implementing an additional diagram/viewpoint on the ARCADIA method. This viewpoint will specify the models, organize model building and give stakeholders a common document on which they can exchange. It also allows being exhaustive on the interfaces and the physics involved. MBSE allows the understanding of customer needs, an exhaustive definition of system functionalities and setting up a physical architecture that serves as a reference for the construction of the physical simulation model architecture.",1970
Digital Twin: Toward the Integration Between System Design and RAMS Assessment Through the Model-Based Systems Engineering,"The design of a safety-critical system requires an effective prediction of its reliability, availability, maintainability, and safety (RAMS). Anticipating the RAMS analysis at the concept design helps the designer in the tradeoff of the system architecture and technologies, reduces the cost of product development and the time to market. This action is rather difficult, because the RAMS analysis deals with the hazard assessment of system components, whose abstraction at concept level is never simple. Therefore, to integrate the system design and RAMS assessment, a clear path to follow is required. This article investigates how the model-based systems engineering supports this task and drives the system reliability allocation, through the functional and dysfunctional analyses. The implementation of the proposed approach needs to set up the tool chain. In the industrial context, it must be compatible with practices, standards, and tools currently used in product development. Defining a suitable process of integration of tools used for the system design and the safety engineering is a need of the industry. Therefore, this task is also discussed, in this article, dealing with some examples of industrial test cases.",1970
MBSE driven approach for defining problem domain,"This paper continues introduction of the MBSE Grid framework. As the name reveals, the framework is intended for model-based systems engineering (MBSE). MBSE is an emerging approach that applies modeling to support complex system requirements, design, analysis, and verification and validation activities. Being a synthesis of widely known MBSE methodologies (IBM Harmony, OOSEM, etc.) and frameworks (DoDAF, NAF, etc.), the MBSE Grid proposes an unambiguous workflow for modeling systems by iterations going from the highest to the lowest layers of abstraction. This paper mainly focuses on the Concept and Problem definition layers, describing in detail each step of the workflow in the range of these two layers and revealing presentation artifacts each step produces, also, giving clues for elements traceability. The case study demonstrates and proves adaptability of the MBSE Grid on a real-world problem domain using MagicDraw CASE tool.",1970
Strategies and Best Practices for Model-Based Systems Engineering Adoption in Embedded Systems Industry,"[Context] Model-based Systems Engineering (MBSE) advocates the integrated use of models throughout all development phases of a system development life-cycle. It is also often suggested as a solution to cope with the challenges of engineering complex systems. However, MBSE adoption is no trivial task and companies, especially large ones, struggle to achieve it in a timely and effective way. [Goal] We aim to discover what are the best practices and strategies to implement MBSE in companies that develop embedded software systems. [Method] Using an inductive-deductive research approach, we conducted 14 semi-structured interviews with experts from 10 companies. Further, we analyzed the data and drew some conclusions which were validated by an on-line questionnaire in a triangulation fashion. [Results] Our findings are summarized in an empirically validated list of 18 best practices for MBSE adoption and through a prioritized list of the 5 most important best practices. [Conclusions] Raising engineers' awareness regarding MBSE advantages and acquiring experience through small projects are considered the most important practices to increase the success of MBSE adoption.",1970
A Model-Based Systems Engineering (MBSE) approach for defining the behaviors of CubeSats,"This paper describes an eight-step approach for defining the behaviors of CubeSats that begins with mission requirements and ends with a functional architecture modeled as an activity hierarchy using the Object Management Group's (OMG) Systems Modeling Language (SysML). This approach could be applied to other satellite development efforts but the emphasis here is on CubeSats because of their historically high mission failure rate and the rapid growth in the number of these missions over the last few years. In addition, this approach complements the International Council on Systems Engineering's (INCOSE) Space Systems Working Group's (SSWG) efforts to develop a CubeSat Reference Model. This approach provides a repeatable, generalized method for CubeSat development teams to follow that incorporates standard systems engineering practices such as: a top-down approach, requirements analysis, use case development, and functional analysis. This effort uses a Model-Based Systems Engineering (MBSE) approach. Some of the benefits of using an MBSE approach over a traditional document-based approach are: enhanced communications, reduced development risk, improved quality, and enhanced knowledge transfer [1]. Systems engineering artifacts produced using this approach, such as definitions of the mission domain elements, requirements, use cases, and activities, are captured in a system model which serves as a single-source-of-truth for members of the CubeSat development team. Examples are provided throughout the paper which illustrates the application of this approach to a CubeSat development effort. Since most space missions are concerned with the generation or flow of information, the examples focus on requirements to collect and distribute mission data ending with a definition of the required system functionality to satisfy those requirements.",1970
A systems engineering approach for a dynamic co-simulation of a SysML tool and Matlab,"Industry is in a debate about the potential of the Systems Modeling Language (SysML). One part sees the advantage in development and project planning. The other part argues that the employment of SysML results in unnecessary additional work. The description of systems is still largely managed by the widely-used Microsoft Office software like Excel or PowerPoint. Indeed, this software has its limitations, especially when it comes to complex systems. Regarding SysML, the aim of this publication is to show the practical benefit and to open a further field of application. The cyclic coupling of SysML with a calculation software enables periodic data exchange in a flexible toolchain. This is a fundamental step, which leads to a new approach of systems development and domain collaboration. The SysML tool is intended to be the highest instance in the toolchain. A calculation software translates all the instructions coming from the highest instance into physical behavior, which can be simultaneously displayed with the aid of a visualization tool. As a significant result, an early validation of the behavior of a system under development can be performed with the aid of the overall model. In order to demonstrate this concept, a high-level simulation of a ""Traffic Alert and Collision Avoidance System (TCAS)"" serves as an example. Tests show that the SysML controlled TCAS simulation is a proper application to demonstrate the execution of important decisions. By means of the visualization, the TCAS behavior becomes transparent. The advantages of the dynamic co-simulation are particularly in the application of Model-Based Systems Engineering (MBSE) to heterogeneous complex systems.",1970
A Conceptual Model-based Systems Engineering (MBSE) approach to develop Digital Twins,"A digital twin (DT) is an interactive, real-time digital representation of a system or a service utilizing onboard sensor data and Internet of Things (IoT) technology to gain a better insight into the physical world. With the increasing complexity of systems and products across many sectors, there is an increasing demand for complex systems optimization. Digital twins vary in complexity and are used for managing the performance, health, and status of a physical system by virtualizing it. The creation of digital twins enabled by Modelbased Systems Engineering (MBSE) has aided in increasing system interconnectivity and simplifying the system optimization process. More specifically, the combination of MBSE languages, tools, and methods has served as a starting point in developing digital twins. This article discusses how MBSE has previously facilitated the development of digital twins across various domains, emphasizing both the benefits and disadvantages of adopting an MBSE enabled digital twin creation. Further, the article expands on how various levels of digital twins were generated via the use of MBSE. An MBSE enabled conceptual framework for developing digital twins is identified that can be used as a research testbed for developing digital twins and optimizing systems and system of systems.",1970
Model-Based Systems Engineering: An Emerging Approach for Modern Systems,"To engineer the modern large, complex, interdisciplinary systems-of-systems (SoS), the collaborative world teams must “speak” the same language and must work on the same “matter.” The “matter” is the system model and the communication mechanisms must be supported by standard, flexible, and friendly modeling languages. The evolving model-based systems engineering (MBSE) approach is leading the way and is expected to become a standard practice in the field of systems engineering (SE) in the next decade. As an emerging paradigm for the systems of the 21st century, it seems useful to overview its current state of the art concerning the developing standards, the embryonic formalisms, the available modeling languages, the methodologies, and the major applications.",1970
Toward a MBSE Research Testbed: Prototype Implementation and Lessons Learned,"As Model Based Systems Engineering (MBSE) continues to advance in terms of system life cycle coverage, modeling languages, methods, and tools, there is a growing need of an overarching framework for organizing MBSE artifacts that facilitates their rapid retrieval and use by MBSE researchers. At the same time, researchers must have an environment supportive of exploring, experimenting with, and collecting performance data when using potentially heterogenous modeling constructs and algorithms over broad ranges of conditions and assumptions. These requirements jointly imply the need for a MBSE research testbed that enables experimentation with diverse modeling, analysis, simulation, verification, and validation approaches under nominal and off-nominal conditions, collect and analyze data to uncover patterns and trends, reuse models and components as applicable, and serve as a repository for scenarios, models, case studies, and lessons learned. This paper presents progress to date and lessons learned from the prototype MBSE testbed implementation.",1970
"Model-based Systems Engineering of an Active, Oleo-Pneumatic Damper for a CS-23 General Aviation Aircraft Landing Gear","Model-based systems engineering (MBSE) is combining product development and project management with a focus on cross-domain, multidisciplinary projects in product development. In many application domains the engineering process and the quality gates are standardized and well defined in respective regulations. The goal of this contribution is to present a project design and engineering process which is compliant with aerospace regulations. As a case study, this paper deals with a detailed development process related to an active, oleo-pneumatic damper for a CS-23 general aviation aircraft landing gear (The CS-23 document is a construction and certification requirement for light weight powered aircraft published by the EASA). It is shown how system requirements are generated from use cases, environmental influences, failure conditions and stakeholder requirements, which finally result in the system architecture and shows how these work products are managed, especially when people from different domains are involved. Based on this, the domain-specific work products are generated, resulting in a list of hardware components, a software architecture and technical drawings for production. Furthermore, the approach illustrates how MBSE is used to incorporate safety assessment into product development.",1970
A Meta-Model to Connect Model-based Systems Engineering with Product Data Management by Dint of the Blockchain,"Complexity in automotive electrics/electronics development increases steadily due to new technologies, e.g. autonomous driving. Knowledge and hence development is more distributed among equal engineering partners and suppliers who become more and might join ad hoc, e.g. a start-up provides a new software faster and cheaper. Development artifacts have to be reconciled and traceability between E/E systems and their components has to be ensured to avoid errors, incompatibilities, and high coordination effort. Model-based systems engineering (MBSE) starts early in the development process by defining formal models which link and trace all system elements. However, there still is a gap between MBSE and later product data and lifecycle management (PDM/PLM) because these disciplines have different meta models. This paper presents a framework, methodologically and technologically, to bridge this gap. Therefore, the Blockchain technology provides valuable mechanisms for engineering collaboration. MBSE methodologies are assessed, aligned with PDM/PLM, and prototypically implemented.",1970
Analysis of political and trade decisions in international gas markets: A model-based systems engineering framework,"By taking a model-based systems engineering (MBSE) approach, a framework can be developed for long-term exploration of a complex adaptive system in multiple contexts. The framework uses MBSE tools to define the complex system architecture and modern internet state transfer and structured data format standards to integrate natural language descriptions, datasets, and models. These can constitute a knowledge architecture that can be used as a long-term research tool. The long-term goal is a framework that captures conceptual models of the complex system, data sets and relationships, dynamic models and simulations, and decision analytics within a common environment. This paper presents a scenario in which we evaluate links between transformations of complex natural gas systems and analyze political intervention into the Russian-European natural gas markets. In this example, we specifically examine geographical, physical (cross-border infrastructure), and commercial value streams through the prism of network analyses. This is one context of a more general model of international gas relationships and flows at multiple levels. The resulting framework provides insight into dynamic behaviors at multiple levels of the system, such as the emergence of infrastructure network and intricate relationships of strong corporate ties and knowledge networks, along with possible strategies for political and economic intervention. The primary goal of an MBSE approach is to capture interrelationships in the complex system at varying levels of abstraction, which enables a common reference for diverse models and datasets.",1970
Model-Based Systems Engineering as the Catalyst for a Rapid Acquisition Process (RAP),"In the current Department of Defense (DoD) Acquisition environment, applications of rapid development and acquisition processes will need to be formulated because enemies are rapidly adapting to the United States' military capabilities and are altering their technologies, tactics, techniques and procedures to overcome the United States' military advantages. This paper focuses on how the Johns Hopkins Applied Physics Laboratory can assist our Government sponsors to apply analytical techniques tied to state-of-the-art systems engineering analysis methods to successfully implement rapid development, acquisition and deployment methodologies to stay ahead of the threat.",1970
Implementing Cyber Resilient Designs through Graph Analytics Assisted Model Based Systems Engineering,"Model Based Systems Engineering (MBSE) adds efficiency during all phases of the design lifecycle. MBSE tools enforce design policies and rules to capture the design elements, inter-element relationships, and their attributes in a consistent manner. The system elements, and attributes are captured and stored in a centralized MBSE database for future retrieval. Systems that depend on computer networks can be designed using MBSE to meet cybersecurity and resilience requirements. At each step of a structured systems engineering methodology, decisions need to be made regarding the selection of architecture and designs that mitigate cyber risk and enhance cyber resilience. Detailed risk and decision analysis methods involve complex models and computations which are often characterized as a Big Data analytic problem. In this paper, we argue in favor of using graph analytic methods with model based systems engineering to support risk and decision analyses when engineering cyber resilient systems.",1970
Model-based systems engineering to design collaborative robotics applications,"Novel robot technologies are becoming available to automate more complex tasks, more flexibly, and collaborating with humans. Methods and tools are needed in the automation and robotics industry to develop and integrate this new breed of robotic systems. In this paper, the ISE&PPOOA methodology for Model-Based Systems Engineering is applied for the development of robotic systems. The methodology is described through its application to reengineer a state-of-the-art collaborative robot application. The challenges that robotic systems present to model-based systems engineering are discussed, together with the benefits of MBSE methodologies.",1970
Model-based Systems Engineering Papers Analysis based on Word Cloud Visualization,"With the continuous improvement of system scale and complexity, model-based system engineering (MBSE) is of great importance in the practice of system engineering (SE). MBSE has been widely concerned in industry, especially in the field of complex equipment. At the same time, in academia, research articles about MBSE come into being and grow rapidly. In this paper, keywords and full-texts of 143 high quality articles related to MBSE field are extracted from relevant journals of IEEE and INCOSE communities, and the research contents of MBSE field are visualized and analyzed by using a thirdparty Python WordCloud library. The research focuses on: (a) identifying related concepts of MBSE; (b) exploring research contents of MBSE; (c) analyzing three pillars of MBSE: modeling languages, methods and tools based on articles. The results show that MBSE plays an important role in realizing system architecture design and developing system architecture models by applying modeling technology to support system requirements, design, analysis and evaluation, verification and validation in the whole life cycle of product development. SysML and OPM are the most popular modeling languages and modeling methods in MBSE research field respectively. This paper provides a technical route reference for exploring the current research field of MBSE by using WordCloud text analysis which is helpful to predict the future research of MBSE.",1970
Applying Model Based Systems Engineering (MBSE) to a standard CubeSat,"Model Based Systems Engineering (MBSE) is an emerging technology that is providing the next advance in modeling and systems engineering. MBSE uses Systems Modeling Language (SysML) as its modeling language. SysML is a domain-specific modeling language for systems engineering used to specify, analyze, design, optimize, and verify systems. An MBSE Challenge project was established to model a hypothetical FireSat satellite system to evaluate the suitability of SysML for describing space systems. Although much was learned regarding modeling of this system, the fictional nature of the FireSat system precluded anyone from actually building the satellite. Thus, the practical use of the model could not be demonstrated or verified. This paper reports on using MBSE and SysML to model a standard CubeSat and applying that model to an actual CubeSat mission, the Radio Aurora Explorer (RAX) mission, developed by the Michigan Exploration Lab (MXL) and SRI International.",1970
Comparative Analysis of Model-Based and Traditional Systems Engineering Approaches for Architecting a Robotic Space System Through Automatic Information Transfer,"This study seeks to compare the quantity of information that is automatically transferred through the associations generated using a model-based systems engineering (MBSE) approach versus a traditional systems engineering approach to measure the benefits of MBSE in architecting a robotic space system. Both an MBSE approach and non-MBSE approach were applied to architecting an orbiting sample Capture and Orient Module (COM) system concept for a Capture, Containment, and Return System (CCRS) payload concept for Mars Sample Return (MSR). These approaches were applied in parallel to provide a side-by-side comparison of the approaches. The approaches were analyzed using design structure matrices (DSM) and evaluated based on the amount of information transferred between process tasks manually (e.g., elements physically typed into text boxes in a presentation slide) vs automatically (e.g., elements automatically filled out within a block in a model view due to explicitly defined element associations). A total of 4,819 information element transfers were traced in DSMs and used to quantitatively compare the two approaches. The non-MBSE approach required manual transfer for all 4,819 information elements. The MBSE approach required manual transfer for 4,189 information elements and automatic transfer for 630 information elements, providing a minor increase in the automation of information transfer relative to the non-MBSE approach. By incorporating the use of additional MBSE artifacts into the trade study and peer review tasks, manual transfer could potentially be reduced to 931 information elements, and automatic transfer increased to 3,888 information elements.",1970
Model-Based Systems Engineering Tool-Chain for Automated Parameter Value Selection,"Cyber-physical systems (CPSs) integrate heterogeneous systems and process sensor data using digital services. As the complexity of CPS increases, it becomes more challenging to efficiently formalize the integrated multidomain views with flexible automated verification across the entire lifecycle. This article illustrates a model-based systems engineering tool-chain to support CPS development with an emphasis on automated parameter value selection for co-simulation. First, a domain-specific modeling approach is introduced to support the formalizations of CPS artifacts, development processes, and simulation configurations. The domain-specific models are used as the basis to generate a Web-based process management system for automated parameter value selections, which coordinates Open Services for Lifecycle Collaboration services of development information and technical resources (models, data, and tools) in order to support automated co-simulation. The services are deployed by a service orchestrator based on a decision-making algorithm for parameter value selection. Finally, developers make use of the WPMS to implement simulations and to select system parameter values for co-simulation automatically. The approach is illustrated by a case study on auto-braking system development and we evaluate the efficiency of this tool-chain by both qualitative and quantitative methods. The results show that parameter values are selected more efficiently and effectively when implementing co-simulations using our tool-chain.",1970
Model-Based Systems Engineering Approaches for the integrated development of product and production systems in the context of Industry 4.0,"Ever-increasing individualization of products with a constantly increasing range of functions and, at the same time, ever shorter product life cycles characterize product development processes nowadays. This increases the complexity of product development and places new demands on the development of suitable production systems. At the same time, digitization and Industry 4.0 open up new possibilities for collecting and processing information in production processes, which can be used to optimize products. In order to bring products to market in a short time and in high quality, it is necessary to consider both the product and the production system together. This paper describes Model-Based Systems Engineering approaches for the integration of product and production system development in the context of Industry 4.0. Therefore, we first analyze which information is relevant for defined use cases and how this information is interconnected. Subsequently, we describe approaches for the modeling of this information and interdependencies with the help of the modeling language SysML. We then apply the developed approaches for modeling an example system and discuss gained results and insights.",1970
An MBSE conceptual design phase model for inter-satellite communication,"Inter-Satellite Communication (ISC) is a relatively new and emerging technology for small satellite systems. The level of complexity associated with an inter-satellite communication system necessitates a Model-Based Systems Engineering (MBSE) approach towards the system design concept. Applying MBSE concepts in the early life-cycle phases of the ISC system development, will lead to a well-defined set of system requirements. In this direction, we present a model-based Concept of Operation (ConOps) for an ISC system using visible light communication (VLC). The ConOps model captures the scope definition process and the allocation of stakeholder requirements to stakeholder use cases. Also captured is the Operation Concept (OpsCon) and operational scenarios necessary for defining the system requirements.",1970
Semantic design space refinement for model-based systems engineering,"This paper describes a process developed to utilize information within an ontology, a form of a component model library, for design space refinement in conceptual design through the use of an Interactive Reconfigurable Matrix of Alternatives (IRMA). An ontological approach is proposed, as it enhances the capabilities of component model libraries that are already being constructed for use in model-based systems engineering (MBSE) programs. By defining a common vocabulary across multiple design domains, an ontology is capable of driving information consistency and reducing errors that occur due to misinterpretation of common vernacular. Within an ontology, a functional decomposition of any complex system can be represented as a hierarchy of ""classes"", where a class defines any concept within a given domain. The functions that each system must perform, along with the system components that achieve each function and the design alternatives for each component, are related to the system as properties of the system. This functional decomposition structure of the ontology may be identical to the decomposition that is used in an IRMA, which can use information exported from the ontology to perform design space refinement during conceptual design. The result of this study is a process which is capable of extracting information from an ontology, organizing it, and importing it directly to an IRMA which is fully functional and ready to be used. Such a process becomes a powerful capability when similar systems are designed, as the process can be reused, serving as a starting point for concept selection in conceptual design, resulting in reductions in both development time and cost.",1970
Lessons Learned from developing Industrial Applications according to RAMI 4.0 by applying Model Based Systems Engineering,"The transformation from original production line manufacturing towards complex value creation networks causes new challenges for manufacturing companies to stay in touch with or even delimit from the competition. This new trend, resulting from the emergence of the Industrial Internet of Things (IIoT), offers new automation possibilities by interconnecting all system components with each other. However, as those components, mainly known as Cyber-physical Systems (CPS) are usually systems themselves, the complexity of such a manufacturing system continously rises, which even has to be classified as a complex System of Systems (SoS). Having recognized the issue of the upcoming difficulties when engineering such a system, several German institutes introduced the Reference Architecture Industrie 4.0 (RAMI 4.0), a three-dimensional framework that offers standards or methods for developing system architectures on basis of different views. Nevertheless, at the current point of view, this approach though looks good on paper, but almost none practical applications are existing yet. Thus, this paper focuses on the model-based development of system architectures according to the specifications of RAMI 4.0 in order to evaluate the practical applicability of this reference architecture for usage in actual industrial projects. This is done by utilizing two actual industrial case studies, whose models are created with the help of a specifically designed software tool, the so-called RAMI Toolbox. Based on the outcome of this work, the usage of RAMI 4.0 for application in the industrial area could be sustainably consolidated.",1970
Research on satellite Modeling and Real-time Simulation Monitoring Based on MBSE,"The problems existing in the text-based systems engineering method include heavy workload for change management, poor readability of design documents, low reuse rate, inability to simulate and so on. This paper firstly draws on the Magic Grid methodology, which is suitable for complex product development, and comprehensively describes complex systems from multiple views, forming a set of model-based systems engineering modeling methods(MBSE)with strong traceability and logicality;Secondly, the method is applied to the power subsystem, and the models under different views are created using the system modeling language SysML (systems modeling language); Finally, based on the model, real-time simulation monitoring is carried out for the behavior activity graph, and the model simulation process can be traced back. It is verified that the modeling method can better design the system and meet the requirements of complex system design.e system and meet the requirements of complex system design.",1970
Systems engineering challenges and MBSE opportunities for automotive system design,"Many industries are facing rapid growth in the complexity of the systems they develop. In the automotive domain, vehicles are essentially becoming high performance computing platforms, comprised of dozens of electronic control systems (ECUs) that process over 100 million of lines of software code. In addition, Tens of thousands of vehicle product variants must be managed. One of the primary ways problems associated with increased system complexity can be mitigated so that products are delivered on time, on budget, and with minimal quality issues, is for engineering organizations to utilize the most effective systems engineering methodologies. Model based systems engineering (MBSE), implemented using languages like SysML, is one such methodology that has gained a foothold over the past 10-15 years and continues to be refined and improved today. This paper provides an overview of the general challenges systems engineering faces today including those associated with the automotive industry. Approaches based on MBSE are considered to address these challenges. Next, an enterprise-wide model-based engineering (MBE) strategy proposed by the aerospace and defense industry that could also be effectively utilized by automotive OEMs is discussed. Finally, a set of specific automotive applications of MBSE is described.",1970
Reliability Analysis of Tree-Structured Systems Using Characteristic Function,"This paper provides an efficient algorithm for computing the reliability of both tree-structured and hierarchical array systems with k-out-of-n failure criteria. The algorithm utilizes characteristic functions and avoids working directly with probability mass functions. A case study is investigated to illustrate the efficiency of the proposed algorithm. Compared with conventional analysis methods, the proposed algorithm shows superiorities in both efficiency and feasibility. It may significantly help system designers facilitate the reliability analysis and optimization of large-scale tree-structured and hierarchical array systems, especially in model-based systems engineering (MB SE).",1970
A Framework for Descriptive Models Quality Assessment,"Numerous systems engineering projects use descriptive models structured by standard metamodels such as SysML, UML, or NAF. Model-based systems engineering is now so well established in the world of systems engineering that there is no longer questions about the usefulness of such modeling activities. However, it is still difficult to determine what is the current level of quality and how far the models are from the expected project objectives. This paper proposes a framework which reduces the pain of elaborating a quality process aside of the main systems engineering tasks so that a project manager can quickly be aware of the modeling progress statuses. The proposed framework is based on a modeling method which is itself modeled so that to allow a predefined set of modeling artefacts self-learning the quality aspects, and generating the appropriate dashboards at different levels of details.",1970
Intersatellite Communication: An MBSE Operational Concept for a Multiorbit Disaggregated System,"Operational concept (OpsCon) development is a key activity performed during the conceptual phase of system development. Presently, most OpsCon documentation captures the system operations in a text-based format. Applying model-based systems engineering (MBSE) principles to OpsCon development will accomplish the goal of having a model serve as the single source of truth, enabling traceability of the system design back to stakeholder needs and goals. Presented in this work is an MBSE OpsCon for an intersatellite communication (ISC) system utilizing visible light, deployed in a multiorbit disaggregated system. The OpsCon model provides a high-level visualization of the operational capability of the ISC system. We specify use cases, operational scenarios, system context, high-level behavior, and measurements of effectiveness in a system model using systems modeling language.",1970
MBSE Driven IoT for Smarter Cities,"The future of the Internet of Things (IoT) success, including technology advancements and revenue generating potential across the business spectrum, is dependent on the application of robust Systems Engineering processes, methods, and tools. Without Model Based Systems Engineering (MBSE), the complexity involved in the design, development, and deployment of IoT systems would require more system and operational providers' resources. Regardless of any industry standards, IoT systems cannot be built in a vacuum. Technology advancements in consumer products will continue to evolve to facilitate connection to IoT networks. This will be the catalyst for driving entire infrastructures changes to: federal, state, city, and local authorities and governments; product development companies; utility and service providers; and even to consumers. The infrastructure and management setup needs to be adopted prior to create smart systems. Such smart system will be shown in this paper by a traffic management system and its connected systems, as well as how a MBSE approach can help.",1970
Presenting Model-Based Systems Engineering Information to Non-Modelers,"NASA's Human Research Program's (HRP) Exploration Medical Capability (ExMC) Element adopted Systems Engineering (SE) principles and Model Based Systems Engineering (MBSE) tools to capture the system functions, system architecture, requirements, interfaces, and clinical capabilities for a future exploration medical system. There are many different stakeholders who may use the information in the model: systems engineers, clinicians (physicians, nurses, and pharmacists), scientists, and program managers. Many of these individuals do not have access to MBSE modeling tools or have never used these tools. Many of these individuals (clinicians, scientists, even program managers) may have no experience with SE in general let alone interpreting a systems model. The challenge faced by ExMC was how to present the content in the model to non-modelers in a way they could understand with limited to no training in MBSE or the Systems Modeling Language (SysML) without using the modeling tool. Therefore, from the model, ExMC created an HTML report that is accessible to anyone with a browser. When creating the HTML report, the ExMC SE team talked to stakeholders and received their feedback on what content they wanted and how to display this content. Factoring in feedback, the report arranges the content in a way that not only directs readers through the SE process taken to derive the requirements, but also helps them to understand the fundamental steps in an SE approach. The report includes links to source information (i.e., NASA documentation that describes levels of care) and other SE deliverables (e.g., Concept of Operations). These links were provided to aid in the understanding of how the team created this content through a methodical SE approach. This paper outlines the process used to develop the model, the data chosen to share with stakeholders, many of the model elements used in the report, the review process stakeholders followed, the comments received from the stakeholders, and the lessons ExMC learned through producing this HTML report.",1970
Toward FMEA and MBSE Integration,"This paper explores the FMEA and Model Based Systems Engineering (MBSE) integration by generating Failure Mode and Effects Analysis (FMEA) as a model, named Model Based FMEA (MBFMEA) then discusses the possibility of integrating MBFMEA with MBSE using the tools such as System Modeling Language (SysML). The paper focuses on design FMEA. It first overviews the current FMEA approach widely used by Reliability Engineering community, then analyzes key FMEA elements imposed by some widely used FMEA standards such as US Department of Defense (DOD) and NASA's, and explore the modeling possibility for the key FMEA elements. The capability and applicability of SysML with its nine diagrams are reviewed and their relevance and usages are mapped to support MBFMEA creation. The usefulness and benefits of MBFMEA and its integration with MBSE/SysML are discussed. With the MBFMEA and its integration with MBSE/SysML, FMEA will become a much more effective and efficient reliability process to support Design-for-Reliability (DFR), Model-Based Systems Engineering, and Model-Based Mission Assurance (MBMA) activities.",1970
Designing a control system using SysML and Simulink,"The Systems Modeling Language (SysML) has been under development since 2001 by the International Council and the Object Management Group (OMG) organizations, as a standard modeling language for model-based systems engineering (MBSE). SysML supports the specification, analysis, design, and verification of a broad range of complex systems such as control systems. The authors describe a tool that integrates a Simulink model from relevant parts of a SysML model so users can perform systems engineering processes using SysML, and simulate parts of the model using Simulink. The authors also show systems engineering processes for designing a Dual Clutch Transmission (DCT) as an example of control systems.",1970
Adopting MBSE in Construction Equipment Industry: An Experience Report,"This paper is an experience report about introducing Model-based Systems Engineering (MBSE) at Volvo (Construction Equipment) and describes lessons learned. The recent growth in technologies such as electromobility, automation etc. in heavy construction machinery such as loaders, haulers, excavators etc. leads to increased complexity being addressed within embedded systems and software. Hence there is an increasing need for model-based development methodologies to facilitate flexible and distributed development scenarios, enhance communication among cross-functional teams, more importantly, traceability from requirements to system and software architectures. In this paper, we describe how the MBSE methodology was initially conceived, applied in an ongoing project, the challenges faced, and lessons learned. The paper also points to related works and future directions towards a holistic Model-Driven Development (MDD) framework.",1970
Integration of agility in a MBSE methodology for multidisciplinary systems design,"The multidisciplinary collaboration can be efficiently supported by the Model-Based Systems Engineering (MBSE) approach. However, even if the MBSE approach presents a brilliant method of development of complete architectures, this approach does not avoid system defects during or after the development process. In this paper, we describe the benefits to integrate agile methods into MBSE approaches and we propose in particular to introduce the Agile Scrum method in a MBSE design methodology for multidisciplinary systems.",1970
A MBSE Approach to Satellite Clock Time and Frequency Adjustment in Highly Elliptical Orbit,"This paper presents a Model Based Systems Engineering (MBSE) approach to the algorithm used for time and frequency adjustments to satellite clocks in Highly Elliptical Orbit (HEO). This algorithm can be considered as a system composed of a number of subsystems described by mathematical functions and therefore benefits from the use of MBSE. Systems Modeling Language (SysML) diagrams are used to describe the algorithm's structure and behavior. Presented first is the algorithm's role in the communications scenario, followed by its internal functioning and data flows. The advantages of using a MBSE approach over a document-based approach are discussed.",1970
Using a Model Based Systems Engineering Approach for Aerospace System Requirements Management,"Since systems engineering encompasses the entire scope of a system, successful systems engineering should embody efficient requirements management through a collaborative and interdisciplinary approach. Model Based Systems Engineering (MBSE) is an emerging field, which applies a model-based framework to the elements of a system comprised of requirements, system functions, analysis results, validation and verification artifacts. The effective comprehension of a complex system is more easily visualized through a model-based approach than a document centric one. The representative models and the inherent traceability which one receives through visual associations provides more effective requirements traceability and analysis; and, thus leading to fewer technical risks, earlier detection and resolution of issues, and helps keep schedules and costs in check. This approach yields better, clearer, and more concise requirements and in turn aids in more effective verification and validation processes as well as more expedient impact analyses of unforeseen changes. This paper describes MBSE through SysML (System Modelling Language) by application on a complex aerospace system. The study qualitatively and quantitatively discusses the value addition of such an implementation using commercially available tools that equip SysML to achieve MBSE in systems. SysML is a domain-specific modeling language developed for systems engineering to specify, analyze, design, optimize, and verify systems. From a practitioner's standpoint, this MBSE approach can be used to engineer any complex system from satellite programs to transport networks.",1970
Creating SysML views from an OPM model,"Conceptual modeling is key to model-based systems engineering (MBSE) approaches. OPM - object-process methodology and SysML - OMG systems modeling language are two state-of-the-art conceptual modeling languages. While both languages aim at the same purpose of providing a means for general-purpose systems engineering, these languages take different approaches in realizing this goal. As each of the languages has its relative strengths and vweaknesses, ways to create synergies between them are considered in this work. We propose combining advantages of each language through automatic generation of SysML views from an OPM model. To this end, we developed a new algorithm and software application implementing the OPM-to-SysML views generation. Our approach can benefit various stakeholders by promoting better system understanding, standardization, and improved interoperability.",1970
Best Practice Patterns for Variant Modeling of Activities in Model-Based Systems Engineering,"Product line development practices have emerged in recent years as methods to increase variety in a family of products while also keeping development costs down. However, with higher complexity comes complex system models that are error-prone and time consuming to maintain. This article proposes two variant modeling patterns which, when used in the right context, can reduce complexity, eliminate many opportunities for error, and minimize development costs and maintenance effort. The 150% pattern, already commonly used in industry, capitalizes on commonality among variants. The encapsulation pattern promotes model organization and understandability. This article also introduces four comparison criteria-number of variation points, number of shared model elements, human readability, and model maintainability-that a system architect can use to determine which pattern is best suited to model a certain product family. The 150% pattern is found to be best to be used for product lines with high commonality among variants, whereas product lines whose variants exhibit much variety and are managed by multiple development teams are best modeled using the encapsulation pattern. A parking brake product family is used to illustrate each modeling pattern and provides a sample context against which to use the comparison criteria.",1970
Tailoring Model-Based Systems Engineering concepts for industrial application,"Model-Based Systems Engineering (MBSE) gained momentum within the last years and is regarded as the key to face the challenges of product engineering. Nevertheless, numerous barriers exist that inhibit the implementation of MBSE in industrial application. One is about what constitutes MBSE - up to now there is no single view on this topic. This is due to the numerous disciplines involved in the enhancements of MBSE - only recently there had been efforts to create new MBSE approaches and even languages. We state that similar to classical Systems Engineering there will not be one specific MBSE - current trends in product engineering as well as literature support this thesis. By the help of a consistency analysis evaluating relevant features of MBSE as degree of language formalization and tool support consistent combinations of these features are clustered. As a result possible MBSE concepts are suggested. These concepts enable a better understanding of the different objectives of this interdisciplinary approach. The existence of the concepts is shown based on known pilot projects.",1970
Considering Functional Safety - supporting the development of automated driving vehicles by the use of Model-Based Systems Engineering,"Starting from the first electric functions in vehicles like the braking function realized with the anti-lock braking system (ABS), some of today’s vehicles have over 100 control units to increase functionality. Functions realize multiple use cases and depend on hardware and software components. This multiple domains development leads to an increase in the complexity of the overall development process. In order to cope with this functional complexity in automated vehicles, new methods for validation are necessary. In order to cope with this functional complexity in automated vehicles, new methods for validation are necessary. These new methods need to identify intended and unintended relationships of and within systems and consider safety elements like hazards. The following contribution shows a new method with an example of distributed test benches for automated trailer transport. The method supports validating safety aspects of stakeholder needs through use cases, scenarios, functions, and components. Possibilities for automated generation and parameterization of test cases are presented. In order to validate the automated driving functions regarding safety, the IPEK-X-in-the-Loop approach for distributed validation environments is used. Hereby, the automated vehicle systems, as well as the geographically distributed test benches, are considered as System of Systems (SoS). Hence, SoS characteristics are taken into account by validation methods in the context of functional safety.",1970
A model-based systems engineering approach for technical measurement with application to a CubeSat,"While much has been written about technical measurement and Model-Based Systems Engineering (MBSE), very little literature exists that ties the two together. What does exist treats the topic in a general manner and is void of details. Given the vital role that technical measurement plays in the systems engineering process, and the ever increasing adoption of the MBSE approach, there is a growing need to define how technical measurement would be implemented as part of a MBSE approach. The purpose of this paper is to address that need. Technical measurement is defined as the set of measurement activities used to provide insight into the progress made in the definition and development of the technical solution and the associated risks and issues [1]. Technical measures are used to: determine if the technical solution will meet stakeholder needs, provide early indications if the development effort is not progressing as needed to meet key milestones, predict the likelihood of the delivered solution to meet performance requirements, monitor high risk items, and assess the effectiveness of risk mitigation actions. MBSE is defined as the formalized application of modeling to support system requirements, design, analysis, verification, and validation activities beginning in the conceptual design phase and continuing throughout development and later life cycle phases [2]. The benefits of using an MBSE approach over a traditional document-based systems engineering approach are: enhanced communications, reduced development risk, improved quality, and enhanced knowledge transfer. This paper defines a MBSE approach for technical measurement that begins with a set of mission objectives derived from stakeholder concerns. The objectives and concerns are represented as elements captured in the system model. Next, Measures of Effectiveness (MOEs) are derived from the mission objectives. Initially, these MOEs are captured in a special model element that allows for the MOEs to be described in a natural language format that stakeholders will understand. Those initial MOEs are then quantified and captured as value properties of the Enterprise block. The MOEs are traced back to their originating source in the mission objectives. Next, Measures of Performance (MOPs) are derived from the enterprise-level MOEs and captured as value properties of the System block. The derivation of the MOPs is captured through the development of constraint blocks and parametric diagrams. This provides for traceability between MOPs and MOEs and supports performance analysis of the MOPs to predict if the MOEs will be met. MOPs are also traced to system requirements captured in the system model. Next, the process steps at the system-level are repeated at the subsystem-level to derive Technical Performance Measures (TPMs). These TPMs are traced back to MOPs and subsystem requirements in the same manner as described for MOPs. Examples are provided throughout the paper which illustrate the application of this approach to a CubeSat. Using a CubeSat example is appropriate given the historically high failure rate and rapid growth of these missions and the role technical measurement could play in increasing their success.",1970
Increasing the productivity of an MBSE development team throughout the system design lifecycle,"Increasing the productivity of a Model Based Systems Engineering (MBSE) development team and improving first time quality of its end product requires maintaining coordination and synchronization of the information needed between multi-discipline environments. Developing complex systems is not the sole province of a single tool or flow. This calls for a real time digital thread built upon industry standards and providing a linkage between the tools used in that environment; a linkage that reflects the work flow and provides this necessary information in a way that is easily and intuitively accessible to each member of the engineering team as they work. In this paper, we discuss an innovative solution to this problem based on the capture and implementation of work flow metamodels, linking current tools and working within an existing set of activities or flows, such as to enable linked sharing of relevant information between all participants. The Open Services for Lifecycle Collaboration (OSLC) [1] standard provides an enabling technology, extended by a configurable metamodel-based approach to incorporate a central organizing structure for data tracking, history and analysis that spans all the domains and stages from concept, requirement, functional and logical design through implementation and test. Additionally, the metamodel extends upon the standard domain capabilities by augmenting each connected tool with communication, GUI and data access that enables direct participation in the lifecycle without the discontinuities and losses usually experienced with separate tools and flows.",1970
MBSE and FMEA Integration Using GENESYS,"Since the concept of MBSE was formally proposed as a part of the Systems Engineering Vision 2020 at INCOSE 2007, MBSE has been gaining more and more visibility and has begun to be implemented into many engineering application areas, including that of Reliability, Maintainability, Safety and Mission Assurance (RMS&MA). As we have observed, the theoretical foundation of MBSE has been well established, but industry-wide adaptations of MBSE are still largely lacking across multidisciplinary engineering areas, including RMS&MA, as evidenced by the fact that there are very few MBSE and RMS&MA integrated analyses being conducted by major US defense and aerospace companies as part of their deliverable artifacts. One of the reasons for this lagging is that the inter-relationships and linkages between RMS&MA analyses and other product design and development disciplines including Systems Engineering requirement analyses (requirement decomposition, requirement and functional flow analysis), product definition data (drawings, specifications), and mission assurance data sets (verification and validation data, qualification, certification and acceptance test data) are not well modeled. As such, some key benefits from MBSE and RMS&MA integration are not fully recognized and realized, which leads to lack of motivation for implementing MBSE with RMS&MA analyses.This paper proposes an MBSE and FMEA Integrated approach using the Vitech GENESYS® tool as a way to overcome the aforementioned weakness. A brief introduction of GENESYS will be given. Comparisons of GENESYS and SysML as implemented by Cameo will be discussed. A pilot case using GENESYS to model FMEA will be presented that illustrates some unique benefits of GENESYS based FMEA.",1970
Verification of embedded system's specification using collaborative simulation of SysML and simulink models,"The authors propose an extension of SysML which enables description of continuous-time behavior. The authors also develop its execution tool integrated on Eclipse-based platform by exploiting co-simulation of SysML and MATLAB / Simulink. To demonstrate the effectiveness of the tool and the extension to SysML in verifying specifications of an embedded system, we create a sample model and analyze its execution results by checking constraints under a test case.",1970
Scheduling appointments via fluids control,In this research a fluid based appointment book is designed to be used for managing appointment systems. We propose a deterministic fluid control approach for modeling a stochastic single server appointment system with several types of customers. Optimal control functions for the minimum average waiting time objective are presented and used to suggest a scheduling heuristic. The heuristic is then used for constructing our appointment book for scheduling customers in the original stochastic system. We demonstrate the performance of the obtained schedule using simulations.,1970
Review on Domain Specific Systems Engineering,"The ongoing integration of connectivity and automation in cyber-physical systems (CPS) drives the need for innovative engineering concepts. Especially the aspect of dependability by design comes into focus. A suitable approach for this task can be found in the concepts of Model Based Systems Engineering (MBSE). In practical application, however, utilization of MBSE does not meet expectations. One of the main barriers identified is the little stakeholder acceptance for common concepts such as object modelling. This aspect has been addressed in the recent past by the Domain Specific Systems Engineering (DSSE) approach. In context of DSSE, plenty of research has been conducted and different aspects were studied. To gain a holistic picture of this approach, the paper at hands contributes a review on DSSE as a whole. In a first step, the main concepts of Domain Specific Systems Engineering are summarized and the application of this approach is discussed. Subsequently, research outcomes achieved so far are consolidated and discussed in detail. On this basis, remaining issues are identified and the future agenda for research in DSSE is outlined.",1970
Challenges in the modelling of SoS design alternatives with MBSE,"A central promise of Model-Based Systems Engineering (MBSE) is to decrease the volume of information produced during the system design lifecycle through improved structure and smarter reuse across the numerous perspectives and architectural levels. The study of variants is a core challenge within MBSE due to associated exponential information growth, and the complexity created by this extra dimensionality. Variant management has been discussed extensively for the physical layer, but lacks research focusing on functional and logical layers, particularly relevant to concept phase engineering. In System of Systems (SoS) problems, the physical choices are typically constrained by the fact that the interacting systems already exist. This paper therefore studies the implications of variant modelling for the behaviour of the SoS. It explores the possibility of developing a functional architecture that can be extended to accommodate changes due to decisions made in the logical layer. It investigates the formal aspects of including variant modelling into the Systems Modelling Language (SysML) and discusses the potential need for a language extension.",1970
The Design of University Staff Data Management System Based on MBSE,"This paper introduces the application of Model-Based Systems Engineering (MBSE) methodology in the normal conceptual design stage of data management system. With the university personnel data management system as an example, it establishes the model diagram on Rhapsody platform through Systems Modeling Language (SysML), and defines the forward design process of the key functional architecture of MBSE. From the system top-level model building to the user fuzzy demand acquisition, finally, taking data audit as an example, the activity diagram and sequence diagram models are built, which provide direct reference for software development. Because of the replacement of text description by models, this methodology realizes the full decoupling of system functions, ensuring a consistent understanding of system description by all stakeholders and accordingly the effective reduction of the system iterative cost.",1970
Model Based Systems Engineering (MBSE) Applied to Fault Detection Analysis of Vehicle Subsystems,"As the field of Model Based Systems Engineering (MBSE) continues to advance in the aerospace industry and far beyond, company executives in all aspects of the program lifecycle now have the opportunity to investigate and begin implementing meaningful applications of the digital thread to ideally realize time and cost savings for both current and future company efforts. One such portion of the product lifecycle often overlooked when allocating resources for digital thread implementation is the logistics and sustainment phase, which in many cases can account for the majority of the total program cost over the lifespan of the product. This paper in particular examines, as a case study, an opportunity for program sustainment to benefit directly from the digital thread by focusing on modeling subsystem block diagrams in SysML, and using those models to assess, verify, and ultimately generate deliverables assessing the Built-In-Test (BIT) capability of a given system. This information in the form of system models or paper deliverables can greatly expedite routine maintenance procedures for example by allowing technicians to quickly locate faulty cable harnesses in the field, or by enabling reliability engineers to verifiably and instantly ensure that BIT faults have complete coverage over all possible failures, including new ones resulting from costly lessons learned in operational usage. The goal of this effort is to outline a specific concept under which BIT behaviors may be modeled in SysML and how they relate to already established subsystem models, but the broader idea of the paper is to present an argument for the very tangible benefits of investing in and establishing a digital thread not just in the design phase of a program, but also across typical company silos and into the product support and sustainment organizations as well.",1970
Creating a Digital Twin of an Insider Threat Detection Enterprise Using Model-Based Systems Engineering,"Inference Enterprise Modeling (IEM) is a methodology developed to address test and evaluation limitations that insider threat detection enterprises face due to a lack of ground truth and/or missing data. IEM uses a collection of statistical, data processing, analysis, and machine learning techniques to estimate and forecast the performance of these enterprises. As part of developing the IEM method, models satisfying various detection system evaluation requirements were created. In this work, we extend IEM as a digital twin generation technique by representing modeled processes as executable UML Activity Diagrams and tracing solution processes to problem requirements using ontologies. Using the proposed framework, we can rapidly prototype a digital twin of a detection system that can also be imported and executed in systems engineering simulation software tools such as Cameo Enterprise Architecture Simulation Toolkit. Cyber security and threat detection is a continuous process that requires regular maintenance and testing throughout its lifecycle, but there often exists access issues for sensitive and private data and proprietary detection model details to perform adequate test and evaluation activities in the live production environment. To solve this issue, organizations can use a digital twin technique to create a real-time virtual counterpart of the physical system. We describe a method for creating digital twins of live and/or hypothetical insider threat detection enterprises for the purpose of performing test and evaluation activities on continuous monitoring systems that are sensitive to disruptions. In this work, we use UML Activity Diagrams to leverage the integrated simulation capabilities of Model-Based Systems Engineering (MBSE).",1970
Streamlining the development of complex systems through model-based systems engineering,"Delivering complex systems requires the development of optimal designs on time, within budget and with the right level of quality. But even the best detailed design cannot compensate for poor system architecture. Systems engineering is not just a technical activity in the lifecycle - it determines the commercial viability of the entire project. The state-of the art answer to these challenges is Model-based Systems Engineering. This article introduces IBM Rational® Best Practices for Model-based Systems Engineering. Using the UML/SysML as a paradigm-independent modeling language, these practices support the elaboration and verification/validation of system requirements as well as design synthesis through model execution. But modeling is not the solution alone. The key for a successful application of the MbSE paradigm is the up-front defining of the underlying workflow; that is where systems engineering stops and where artifacts are handed off to the hardware, software and test engineers. From these pre- and post-conditions the necessary intermediate artifacts and supporting best practices - that are needed to elaborate the agreed upon hand-off - are derived. This article describes an exemplary systems engineering workflow covering the requirements analysis, system functional analysis, and design synthesis phases plus the essential tasks, associated work products and supporting best practices. Collaborative aspects of the systems engineering lifecycle: requirements engineering and change management, will also be addressed.",1970
Integrating Reliability Engineering with Model Based Systems Engineering,"Summary & ConclusionsAs fully digital programs become commonplace, it is imperative that Reliability Engineering (RE) adapt to take advantage of all the benefits that Model-Based Systems Engineering (MBSE) offers. At the same time, integrating RE with MBSE cannot result in a loss of modeling and prediction fidelity, nor should it drive significant learning on reliability engineers of new tools and programming languages. The approach should, however, consider the particular nuances of the modeling being performed. This paper describes two distinct techniques for this integration effort adopted by two program areas within the same company. Both approaches contain unique advantages, and it is shown that there is no single best way to perform RE within an MBSE framework.The first approach described performs the reliability analysis in a Microsoft Excel based model. The important properties of the system hardware are captured in a table in Cameo. This table is then exported to Excel and compared to the hardware in the Excel reliability model. Once any hardware changes have been updated, the table can be exported back to Cameo to include the updated reliability properties.The second approach described integrates MATLAB with Cameo. The reliability analysis is either performed in MATLAB or another tool then integrated into MATLAB. Then, through a series of scripts, Cameo connects with the MATLAB analysis to fully integrate the system model with the reliability model.Each of these approaches can be used by a wide variety of programs in diverse industries. The appeal of these approaches is that it allows Reliability Engineers to continue using their current tools while ensuring that their models always align with the current system architecture.",1970
A Novel Approach to Behavior Design for Model Based Systems Engineering Application Using Design Structure Matrix,"Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support various system evolving stages starting from the conceptual design phase to all the life cycle phases that follow. To facilitate in an efficient system behavior design process, in this paper, a Design Structure Matrix (DSM) based approach is developed and illustrated for determining the operational sequence of activities relevant to requirements of the system and in identifying the concurrent activities as well. A triangularization algorithm method is extended especially for application on activity diagrams to determine knowledge activities in an interaction graph to identify groups of activities and arrange them concurrently. The findings through the DSM based approach are validated by a system engineering expert and are implemented to construct the MBSE activity diagram to facilitate an enhanced behavior design of the system. This paper illustrates the use of Design Structure Matrix to facilitate modeling interdependencies between activities and the approach to aggregate the resulted sequential and concurrent activities with the activity diagram, applied to a case study of Execute Hohmann Transfer based on DellSat-77 Satellite System. In addition, the potentials benefits of using a Design Structure Matrix methodology for assisting Model Based Systems Engineering activities for enhanced systems behavior design is portrayed.",1970
Using MBSE for Operational Analysis of Power Converter for Electric Traction,"Electric vehicles are a more environment friendly technology than internal combustion engine vehicles. However, EVs are still less mature technology compared to ICE vehicles (higher cost, lower power density, lower range rating, and longer charging time, connection to the grid⋯). In order to commercialize more EVs in the near future to make another step for replacing ICE vehicles, many researches have been conducted. The main three fields of interest are: electric motors, energy storage, and power electronics. EVs are considered as complex systems and need to be addressed with modern methodologies and approaches. This paper presents a first step towards designing a power converter for electric traction system with onboard energy storage system (ESS), using model-based systems engineering (MBSE) and systems modelling language (SysML), by adapting CESAM Systems Architecting Method as framework. Using this approach an operational point of view architecture of the power converter is presented in this paper.",1970
Obtaining Fault Trees Through SysML Diagrams: A MBSE Approach for Reliability Analysis,"Reliability analysis provides fundamental results for the decision-making process regarding systems design, operation, and maintenance plans, but the growing complexity of systems has motivated the search for automated methods of reliability analysis. Although Fault Tree Analysis (FTA) is an effective and highly utilized technique for reliability analysis, it is very labor intensive and can become very complex to apply, to the point of needing automation. The goal of this paper is to develop a method of automated reliability analysis based on FTA, which fault trees are obtained by mapping SysML (System Modelling Language) diagrams in a novel structured procedure. SysML is a modeling language used in MBSE (Model-based Systems Engineering) to gather all the information about a system in a consistent and complete way, which is why it is used in this paper to develop the fault trees. The method is applied to a bearing lubrication system of a hydrogenerator and the obtained fault tree is presented.",1970
Application of MBSE as a support to the definition of the port informer service in the Italian ports,"This paper describes an application of the Model Based Systems Engineering (MBSE) approach in a study performed on behalf of the Italian Port Informers Association, with the purpose to provide a solid technical background to the definition of the Port Informer Service (also referred in this paper simply as Service), and to its future evolution. The current Italian legislation does not include such Service neither among the “public utility services” ruled by the Maritime Authority (Coast Guard), nor among the “general interest services” ruled by the Port Authority. The lack of a clear definition of the Service is the source of an uncertain situation, in which the activities of the Port Informers derive from local ordinances issued by the single Harbor Master's Offices (Capitanerie di Porto, local office of the Coast Guard). From a different point of view, the continuous evolution in the technological equipment of the authorities involved in port operations, with systems such as Vessel Traffic Services (VTS), Automatic Identification System (AIS), Port Management and Information System (PMIS) and so on, urges the Port Informers to share a common process of migration, in order to be fully integrated in the exploitation of the opportunities made available by the new technologies. A strong need was thus felt for a new regulation of the services provided by the Port Informers at national level, in order to promote a necessary uniformity in the provision of the Service, and to better support the management of port security, maritime traffic monitoring and navigation security.",1970
The Design of Integrated Navigation System Based on MBSE,"This paper proposes a schema for the design of an integrated navigation system including two inertial navigators, two Global Position System (GPS) receivers and a Doppler velocity sensor(DVS) with applications of Model Based Systems Engineering (MBSE). First, requirement analysis and function analysis are accomplished with Rhapsody. Then the architecture of the system is designed to identify the subsystems and allocate the use case to the subsystems. Finally, the results of simulation show that the design of the system can satisfy the system requirements proposed previously.",1970
Model-Based Systems Engineering of Process Control for Energy Installations,"Design of process automation control for energy installations is considered as MBSE, i.e. the basic means of UML are used to describe main functionality, structure and behavior of a target system. The rules of IEC 61131-3 international standard are used for implementation of the control. UML component diagrams of the control system are mapped into configuration of PAC. The behavior is refined by conversion of UML activity diagrams into SFC programming language. A control system for hydro power unit is described to demonstrate the approach.",1970
A Model-Based Approach for Requirements Engineering for Systems of Systems,"Model-based systems engineering (MBSE) is a discipline of systems engineering in which the model forms the heart of all the systems engineering activities and is the basis of many of the project artefacts. Systems modeling is no longer viewed as simply a “good idea” but is becoming an increasingly important part of any systems engineering project. The application of MBSE is becoming well understood at the systems level; however, there is a lack of research and subsequent industrial application at the system of systems (SoS) level. This paper presents a model-based approach to requirements engineering for SoSs. The approach is derived from an MBSE approach to requirements engineering and therefore represents current best practice in SoSs in terms of established standards and research. This paper builds upon and is an evolution of the initial foundations for model-based requirements engineering for systems of systems that were published in an earlier paper.",1970
Role of SysML in Integrating an Interdisciplinary Team,"Most engineering projects require a team of various disciplines to work together. Although with different disciples there can be issues in communication between disciplines due to jargon and a lack of understanding each role’s capabilities. [1] This is especially true during the early stages of the project. Systems engineers have used SysML as a model-based systems engineering tool to compose and articulate tasks as well as display the collaboration of each discipline towards a goal unifying communication and setting a clearly defined purpose. This paper shows how SysML and UML is used in organizing and articulating the tasks of an interdisciplinary research team, consisting of: robotics, communication, and system engineers toward the goal of fire detection.",1970
Model-Based Systems Engineering Applied to the Detection and Correction of Object Slippage within a Dexterous Robotic Hand,"Slip detection and correction plays a very important role in robotic manipulation tasks, and it has long been a challenging problem in the robotic community. Further, the advantage of using systems engineering tools and framework to approach a solution and/or modeling of robotic tasks is not often pursued. In this paper, we use Model-Based Systems Engineering techniques to verify system requirements and validate stakeholder requirements for the problem of detecting and correcting for object slippage within a dexterous five-fingered robotic hand. We will discuss how the work accomplished in our laboratory was transferred to a simulated environment and how this simulated environment built in CoppeliaSim was connected to a systems engineering software, Cameo Systems Modeler. Measures of effectiveness were created from the stakeholder requirements for the slippage problem which allowed us to validate the robotic simulation that was built. Structural diagrams of the robotic system and environment were built along with behavioral diagrams of the simulation. Further, we used the connection of Cameo Systems Modeler and CoppeliaSim to track the measures of effectiveness for our robotic task which provided us with a complete systems engineering framework for the problem from the requirements phase through the implementation phase. Our main goal is to show the advantages of following a systems engineering framework to complete a robotic task through the connection of Cameo Systems Modeler and CoppeliaSim.",1970
A bi-directional Interface enabling cross-disciplinary Engineering with RAMI 4.0 and AutomationML,"The Reference Architecture Model Industrie 4.0 (RAMI 4.0) has been proposed to faciliate the discussion and contribute to the standardization of future industrial systems, especially in the area of basic engineering. In order to provide the resulting system model to the heterogeneous detailed engineering disciplines, AutomationML appears to be one of the technology drivers, giving the possibility to exchange respective engineering artifacts. Concluding, the utilization of this standard after applying the theoretical engineering concepts of RAMI 4.0 would strongly enhance the interoperability between industrial systems aligned to the reference architecture on the one hand and provide a practical implementation of its theoretical concepts on the other hand. Therefore, this work-in-progress Paper introduces the first implementation of a bi-directional interface, which interconnects basic engineering with detailed engineering of such systems. As model-based systems engineering (MBSE) with either RAMI 4.0 or AutomationML is currently under broad investigation, already established approaches are used to verify the application of the developed interface. An initial real-world example is taken for use to validate the research goals or challenges of the resulting engineering tool-chain, which can strongly contribute to engineering practitioners of flexible production systems by maxing out the heterogeneous tool-landscape.",1970
Using model based systems engineering to increase the robustness of monitoring systems in railways,"Model based systems engineering (MBSE) has gained popularity in disciplines such as computer science and aerospace engineering as a tool to better manage the increasing complexity of human made systems. In contrast to the traditional document-centric paradigm, MBSE applies modelling techniques to support all stages of system development such as design, verification and validation. One of the key advantages of a model-centric approach is the traceability between models in all levels of abstraction, which significantly enhances the adaptability of the system within its life-cycle. In this paper, we apply the MBSE approach to the development of monitoring units in railways, drawing inspiration from primary node controllers found in the automotive industry. The system in question is based on a distributed network of embedded processing units using an automotive architecture and communications backbone. To do so, we consider case studies that focus on: passenger comfort-matching environmental controls to occupancy; operational efficiency — correlating over occupancy to dwell times, for example; and reporting / investigation — identification and logging of signal aspects the vehicle passes to reduce investigation times for SPADs. As a result, we contend that the use of model based systems engineering can provide an extra level of verification that considerably increases the robustness of monitoring systems and efficiency in their development.",1970
A Model-Based Systems Engineering Journey to Developing a Concept of Operations (ConOps),"In 2017, NASA's Human Research Program (HRP) Exploration Medical Capability (ExMC) Element began a transition from a traditional document-centric to a model-centric Systems Engineering approach when defining its foundation medical systems. These foundation medical systems define Concepts of Operations (ConOps) and identify generic requirements for medical systems based on generic crew and mission environment assumptions and guidance from NASA standards (e.g., medical “Levels of Care”). By making the transition, ExMC intends to improve communication with stakeholders regarding foundation medical system requirements and content. This, in turn, will translate into user-centric medical system development for mission-specific medical systems and result in more robust systems that will lead to better communication with stakeholders to identify gaps in diagnostic and treatment capabilities, thereby lowering crew treatment risks. ExMC's Model-based Systems Engineering (MBSE) paradigm facilitates stakeholder's understanding of the system, more frequent updates of project content, and a centralized “source of truth” for the project. For this current foundation medical system development effort, ExMC has expanded its use of MBSE to include all ConOps content within the model. Previously, the ConOps content primarily resided within a published document, with only select content being incorporated into the model. This effort required structural and organizational workflow changes, including showing stakeholders how the information they require would be presented in the model and gaining their acceptance of this approach. This paper documents key lessons learned during the transformation of the Medical System ConOps from a document- to model-centric system, focusing on how the resultant model represents information, the agile workflows used by Systems Engineers when developing the model, how the model integrates into project plans, how ExMC leadership influenced key users to accept the proposed transformation, and, finally, how the users interact with the newly developed model and its available information.",1970
MBSE approach to support and formalize mission alternatives generation and selection processes for hypersonic and suborbital transportation systems,"This paper deals with the application of a Model Based Systems Engineering (MBSE) approach to support and formalize mission alternatives generation and selection processes aimed at developing operative hypersonic and suborbital transportation systems. Due to the high-level of complexity of these ultimate aerospace initiatives, a MBSE approach demonstrates to be very effective to allow reduction of risk of inconsistencies, of unappropriated or incompatible design choices, reducing the overall time and effort spent in design and development phases. After a brief introductory section aimed at providing some details about these kinds of vehicles, both in terms of enabling technologies and missions, a step-by-step innovative methodology based on a MBSE approach to carry out mission analysis is proposed. All along the methodology description, the application to a specific reference case study of a suborbital single-stage vehicle aimed at performing commercial parabolic flight services is proposed. Eventually, the selected mission baseline is detailed and the major benefits and further application of this innovative integrated methodology are reported and discussed.",1970
"Using MBSE With SysML to Analyze Change Impacts, Including Efforts, in Technical Systems","Technical systems are subject to increasing complexity. Together with shortened product development cycles, frequency and importance of engineering changes (ECs) are increased. Due to change propagation (CP), ECs can have multiple side effects that are hard or even impossible to evaluate manually, making software-based support necessary. To deal with the increasing complexity and interconnectedness of technical systems, model-based systems engineering (MBSE) can be used. Systems are often modeled using the Systems Modeling Language (SysML). In this paper, an analysis approach is developed that enables the modeling of system element dependencies and change efforts with SysML. This enables the application of the approach inside MBSE environments. The approach can be used to conduct change impact analyses, including efforts and with consideration of CP. The developed approach is implemented prototypically in the MBSE tool Enterprise Architect. For validation, a case study is conducted, and the results are discussed.",1970
Capitalization and reuse with patterns in a Model-Based Systems Engineering (MBSE) framework,"In order to promote capitalization and reuse within a Model-Based System Engineering (MBSE) framework, this paper proposes a methodological approach that relies on the concept of pattern in order to encapsulate the know-how to be capitalized and reused. Indeed, formalizing and maintaining know-how within a company is essential in order to have a common base of ""good practices"" available to all engineering teams. To do this, it is necessary to undertake a capitalization process in order to encapsulate these practices. However, it is equally important to make this know-how available and to facilitate its reuse so that engineers can adapt it to their needs. The flexibility of patterns during reuse is an advantage that will contribute to the efficiency of MBSE and where engineering teams are able to rely on the company's know-how.",1970
MBSE-assisted FMEA approach — Challenges and opportunities,"This paper presents an “MBSE-Assisted FMEA” approach. The approach is evolutionary in nature and accommodates the current NASA and Air Force FMEA procedures and practices required for many of their contracts; therefore, it can be implemented immediately. The approach considers current MBSE philosophy, methods, and tools, introducing them gradually to evolve the current FMEA process to a model-based failure modes, causes, and effects generation process. To assist the implementation of this transitioning process from current FMEA to the Model-Based FMEA, the paper discusses challenges and opportunities/benefits that can help establish a feasible and viable near term and long term implementation plan. With the MBSE-Assisted FMEA as a near term approach and Model-Based FMEA as a longer term implementation goal, FMEA will become a more effective and cost efficient reliability process that is integrated with MBSE to support Design-for-Reliability and Model-Based Mission Assurance activities.",1970
Digital Twin-enabled MBSE Testbed for Prototyping and Evaluating Aerospace Systems: Lessons Learned,"With increasing interconnectedness and complexity of aerospace systems and system-of-systems, it no longer suffices to perform experimentation and integration without an overarching framework to organize modeling, simulation, and analysis artifacts. With recent advances in Model Based Systems Engineering (MBSE), several key building blocks for such a framework are already in place. However, important challenges remain. No longer isolated MBSE tools can suffice without a flexible infrastructure to support model integration, tool interoperability, experimentation, and data collection. This recognition provides the impetus for developing a MBSE research testbed for prototyping and evaluating aerospace systems and system-of-systems. This paper presents progress made and lessons learned in the development of a MBSE research testbed for experimentation with aerospace systems such as multi-UAV swarms. Multi-UAV swarms are used in a variety of missions ranging from search and rescue and perimeter security of high value physical assets to emergency response and infrastructure inspection. These operations are characterized by adaptive coordination, ability to survive systemic malfunctions and unexpected external disruptions, ability to discern and reach safe states when attempting to cope with unknown disruptions, ability to course correct and continuously adapt in partially observable, reactive environments. This paper discusses the implementation of digital twin-enabled MBSE testbed which employs a smart dashboard to support experimentation with dynamic scenario execution, monitoring, visualization and control.",1970
Requirement analysis of inspection equipment for integrative mechatronic product and production system development: Model-based systems engineering approach,"Quality control is an essential part in the production of mechatronic systems. Especially the quality inspection of the overall system at the end of the production is of extraordinary importance. The various inspection systems can also be considered to be mechatronic systems. This inspection equipment is often explicitly designed, developed and manufactured for a single product with large expenditure of time. In order to have the inspection equipment ready by the start of production (SoP) and to be sure that the product requirements are transferred to the product development, an integrative mechatronic product and inspection equipment development procedure is necessary. Nowadays, the development of complex mechatronic systems is often carried out with the help of model-based systems engineering (MBSE) methods, for example in the fields of aerospace, automotive and defense. The first necessary step in developing inspection equipment is the requirement analysis. Therefore, this paper describes an approach to determine the inspection equipment requirements in early development phases based on MBSE product models and further methods.",1970
Integration of domain-specific simulation models into descriptive system models by using SysML,"Several observations at industry examples have shown that there is a need to close an existing gap between system architect's model and domain experts' models. Therefore, a minimalistic approach is presented, which allows integrating executable domain models into a system model using a state of the art Model Based Systems Engineering (MBSE) authoring tool. Such MBSE approaches and tools offer possibilities to model requirements and interdependencies with respect to the system's structure, functions and behaviors. Domain architects use simulation models to study the system behavior and to verify specific system requirements. System architects can re-use such simulation models to keep track of the system validity in case of design changes.",1970
Workload Models to Evaluate Heterogeneous Compute Environments Supporting Combat Systems,"Model Based Systems Engineering (MBSE) is accepted as a key enabler for evaluating requirements and designs of combat systems. Systems Execution Modelling (SEM) is an MBSE approach that allows the software system to be modelled independently from the target hardware, inferring hardware characteristics by direct stimulation and measurement. SEM builds a system model out of simple workers, and this paper proposes enhancements to existing workload models to better support the evaluation of combat systems in heterogeneous compute environments comprised of CPUs and GPUs.",1970
Smart Cities and MBSE: Comparison of Concepts,"The article discusses similarities in the concepts of Smart Cities and Model-Based Systems Engineering and comes to the conclusion that there distinct commonalities, but obviously also differences in related achievements. Examples for commonalities are the need for interdisciplinary cooperation, use of standards, the need for a central information system, and even on sociological level there are analogies and similar challenges. As a consequence from the identified differences in their achievements some recommondations are given what both concepts can learn from each other, or where there is room for improvement.",1970
Can ontologies prevent MBSE models from becoming obsolete?,"Model-based systems engineering provides a soft, manageable, and query-able representation of product design and lifecycle. However, at the same time, it creates a discontinuous space of data that does not integrate, constantly becomes outdated, and has to be upgraded as tools evolve. Models that are not maintained become legacy, and then become obsolete and useless. We look at how ontologies that follow the semantic web technology for data representation can create interoperability among the modeling tools, support model reuse, and fight the aging and obsolescence of models.",1970
Architecting an MBSE Black-Box System Model for the Physical Layer of a Visible Light Intersatellite Communication System,"Fast and reliable high-speed intersatellite communication (ISC) between small satellites is dependent on the physical layer (PL) design of the onboard communication system. However, as with nonlegacy systems, the lack of architecture and design information pertaining to the development of the PL of an LED-based visible light communication (VLC) system for ISC poses significant challenges to architecting the communication system. Addressing these challenges requires a holistic approach to the specification of the system design. To this end, we explore the use of model-based systems engineering (MBSE) principles in mitigating the design complexity of the PL architecture for the VLC system. Design concerns and gaps are addressed by developing an executable black-box system model that specifies the conceptual architecture of the system, and a parametric model that analyzes multiple system configurations based on generated values for the signal-to-noise ratio and bit error rate parameters. We utilize the structural, behavioral, and parametric semantics of SysML to define, specify, visualize, and analyze the various system design configurations. The resulting PL black-box system specification is verified through model execution.",1970
An Integrated System Design and Safety Framework for Model-Based Safety Analysis,"Safety analysis is often performed independent of the system design life cycle, leading to inconsistency between the system design and the safety artifact. Additionally, the process of generating safety artifacts is manual, time-consuming, and error-prone. As a result, safety analysis often requires re- work, is expensive, and increases system development time. Several model-based systems engineering (MBSE) approaches have been developed to automatically generate certain safety artifacts. However, these approaches only cover part of the system design and safety life cycle. To truly leverage the benefits of MBSE, system design must be undertaken together with safety analysis for the entire life cycle, and multiple safety artifacts must be generated from the same model. Moreover, MBSE approaches that require a model transformation between the system design and the safety model suffer from the inability to automatically reflect changes made to a safety artifact in the system and the safety model. This paper presents a framework to integrate the entire system design and safety life cycle using an MBSE approach. Both the system design and the safety data are captured in a single SysML model, from which safety artifacts such as failure modes and effects analysis (FMEA) tables and fault trees are automatically generated. This framework ensures consistency between the system design and the safety analysis by requiring no model transformation, thus reducing the resources required for safety analysis. The proposed Integrated System Design and Safety (ISDS) framework comprises three phases that together cover the entire system design and safety life cycle. In this paper, the application of Phase 1 of the framework to a real-world case study is demonstrated.",1970
UAF for system of systems modeling,"Organizations are changing their emphasis from “We need a new system” to “We need to achieve a specific outcome.” As these outcomes become more difficult to define and the associated systems more complex, the management, modeling and simulation of these SoS becomes equally challenging. Often, the SoS is modeled in all its complexity, at a single level of abstraction or level of detail. Instead of a “mega-model” approach, a standards-based, layered “model of models” (MOM) approach is what is necessary. This paper discusses use of the Object Management Group (OMG) Unified Profile for DoDAF and MODAF (UPDM) for architecture modeling. UPDM supports a MOM approach by enabling the development of integrated model layers such as an outcomes model layer and a component layer. An integrated, layered MOM is in keeping with the Model-Based Systems Engineering (MBSE) approach. The model layers can be referenced when detailed analysis is required, or hidden when a SoS viewpoint is required.",1970
Evaluation of migration scenarios towards cyber-physical production systems using SysML,"Over the last decades several technologies have been developed towards the distributed automation architecture for Smart Factories, however, these technologies have not been yet implemented in industry. Manufacturers are quite conservative in adopting new technologies because the vast majority of existing infrastructures already have constraints in place related to their investment capabilities and to the integration of new technologies with their legacy systems and processes. To overcome this conservatism, migration strategies and decision-making approaches are required to support industry in adopting the next generation of smart production systems step by step, taking into account not only the technical aspects, but also integrating organizational and economical issues. One essential part of these approaches is the comparative evaluation of migration options. Based on model-based systems engineering (MBSE), this paper proposes an approach that supports the evaluation of possible migration scenarios towards cyber-physical production systems (CPPS) by using the System Modeling Language (SysML).",1970
A Model for Architecture Centric Development of Automated External Defibrillators,"Due to complex safety requirements, medical devices must obey rigorous standards. In the development of these devices, modeling techniques must be used to analyze the design decisions in agreement with such standards. In this paper, we present a Matlab/Simulink specification as an analytical model for Automated External Defibrillators (AEDs) and its integration with a Model Based Systems Engineering (MBSE) approach through descriptive models. The proposed model allows us to analyze algorithms for decision of shock application, performance of circuits when obtaining the required voltage, safety of the produced energy for shock delivery and characteristics of signals produced at the output of the AED. The model is composed of modules with interfaces specification, allowing safe module replacement and the assessment of the module influence over the system at a technical level.",1970
Integrated approach and decision making algorithms for complex systems effectiveness evaluation,The modern operational concept of naval integrated Combat System (C/S) focuses on a key performance indicator that is the System Effectiveness as an integrated vision of the capability of the System to perform its mission and the probability for the System to be available to perform its mission. An innovative integrated approach based on Model Based Systems Engineering (MBSE) and Integrated Logistic Support (ILS) Engineering has been defined for the System Effectiveness evaluation. The C/S Effectiveness can be evaluated through algorithms based on a combination of the Integrated Functional Breakdown (IFB) and an FMECA approach at C/S level.,1970
Scenario- and Model-Based Systems Engineering Procedure for the SOTIF-Compliant Design of Automated Driving Functions,"Advances in automated driving are creating new challenges for product development in the automotive industry and continuously driving up the cost of product verification and validation. Modern automated driving systems (ADS) must safely handle a considerable number of driving scenarios in compliance with the Safety of the Intended Functionality (SOTIF) standard. While model-based systems engineering (MBSE) has successfully proven itself in the automotive industry as an enabler for complex system and test design, common procedures are neither scenario-based nor do they consider SOTIF. It is yet to be shown, how MBSE approaches can meet these specific requirements of ADS development and, what advantages they can offer over non-model-based methods.In this paper, an extended variant of the established feature-driven MBSE procedure CUBE is presented that includes the analysis of use cases and scenarios. Use-case-specific logical scenarios and the corresponding expected behavior and system architecture are specified using SysML profile extensions. It is demonstrated, how specification model artifacts are used for identifying potentially hazardous scenarios and functional deficiencies and how SOTIF analysis results flow back into the specification process by means of the function “Multi-Story Car Park Chauffeur”. The SysML model is linked to a safety argumentation created using the Goal Structuring Notation to integrate the system specification and the evidence from the SOTIF analysis in a single procedure and toolchain, ensuring full traceability.",1970
Cross Lifecycle Modeling in MBSE,"The Model Based Systems Engineering (MBSE) Infusion and Modernization Initiative (MIAMI) is a NASA-wide effort to lay the groundwork for an integrated framework of tools and technology to advance the objectives of Systems Engineering at NASA, with emphasis on efficiency, interconnectivity, and breadth of scope. Within the MIAMI effort, the Sounding Rocket Team, led by George Plattsmier (MSFC) and George Turner (GSFC), has implemented MBSE within the domain of NASA Sounding Rocket Operations Contract (NSROC)Sounding Rocket missions, using the Systems Modeling Language (SysML)to outline system architectures, requirements, mission assurance, stakeholders, events, and deliverables. The current team effort supports the Marshall Grazing Incidence X-Ray Spectrometer (MaGIXS) experiment. The rocket team, focused on the mission planning and execution domain, is working in tandem with a MIAMI Sounding Rocket MaGIXS experiment team, focused on the experiment domain, to model the mission, systems, experiment, and interfaces to produce and deploy an integrated mission model. Through communication and coordination between NASA and the Sounding Rocket Program Office (SRPO), the MIAMI Sounding Rocket team is tailoring their pilot efforts to specific deliverables identified as critical throughout the full mission lifecycle by Nathan Empson (Mission Operations Manager) and others at SRPO. These products, as part of an overall NASA MBSE pilot effort, will enable evaluation of the utility of MBSE for sounding rocket missions. The team coordinates their work through a spiral development process punctuated by “sprints” to seam together the advancements in defining architecture and behavior of the systems involved, with the various technologies and analyses used to bolster the modeling effort. For developing technologies and modeling patterns, the team continues to interface with the Computer Aided Engineering Systems Environment (CAESE) team at JPL to explore and expand the system “model” from a MagicDraw server project to a nodal system of tools and services that delivers to stakeholders at various levels of cognizance. This environment is centered around an “authoritative source of truth”, known as the Integrated Mission Model upon which several interfaces are integrated such that users throughout all regions of the model see data, commits, updates, and structural changes in real time for a better collaboration workspace throughout the project. In the current instance of this modeling network, the Integrated Mission model uses the individual MagicDraw models for the rocket team and the experiment team, where modelers commit up to the master model, and use synchronized checkouts and updates. This allows for better version control, user permission allocation, and support for distributed work efforts to improve collaborative efficiency. The current state and future state of the team effort is to appropriate the tools and libraries available to meet the desired use-cases requested by NSROC. Throughout the process of MBSE integration, the larger goal through MIAMI is to project high-level modeling concepts and implementations into useable and tractable deliverables for small missions. Additionally, through support and development of the model as applied to MaGIXS, re-usability is achieved so that the efficiency of modeling itself is improved.",1970
A Case Study of MBSE Method Used in the EMU Train Design,"The traditional document-based system engineering method used in EMU design progress has the disadvantage of inconsistent information, incorrect version and poor readability. In some industrial fields, model-based systems engineering (MBSE) methods have been widely developed and applied in recent years. Alstom and Bombardier have also attempted to adopt MBSE methods in their rolling stock product design to improve design quality, improve efficiency and reduce development risk. An attempt to design EMU based on the MBSE approach in China was introduced, taking the door control system as an example. The design is divided into three stages including requirement analysis, function breakdown and system architecture generation, which are interrelated with four design loops. The requirement and use case model, function model, as well as logical and physical architecture model of the door control system were built with SysML. Nine kinds of diagrams represent various view of the model, demonstrate the applicability of the MBSE method in the EMU designing. The application of SysML and Modelica in system modeling and strengthening MBSE is prospected.",1970
Usage of free sketches in MBSE raising the applicability of Model-Based Systems Engineering for mechanical engineers,"A major cause for a lack in acceptance of today's interdisciplinary modeling approaches is the immense difference in abstraction between engineers' mental models and the available systems modeling languages [1]. Especially mechanical engineers, who use graphical representations like sketches and 3D CAD models, struggle with so called “graphical modeling languages” such as SysML [1][2]. These models represented by two-dimensional diagrams made out of boxes and lines, are not able to display real embodiment aspects and thus do not match with (mechanical) engineers mental models of systems [1].",1970
MBSE Infusion and Modernization Initiative (MIAMI): “Hot” Benefits for Real NASA Applications,"Almost fifty years ago, Dr. Robert Frosch, the fifth NASA administrator, delivered a speech on the practice of systems engineering and a call for improvement that remains relevant today. A key difference between the past and today is that the digital information revolution offers new ways for improvements to manage complex systems, enhance knowledge transfer, and improve communications. These new ways offer reductions in cost, schedule, and risk. Over the past several years, the NASA Systems Engineering community has explored ways to use the digital environment to realize these benefits. The NASA Systems Engineering community began evaluating the adoption of a digital approach or Model-Based Systems Engineering (MBSE) as early as 2011. The effort performed benchmarking of industry, evaluated standards, discussed infrastructure requirements, and interviewed NASA stakeholders. In 2016, the MBSE Pathfinder was established to evaluate application of MBSE to some of the most challenging aspects of real NASA spaceflight systems. The following year, the MBSE Pathfinder expanded to more rigorous implementation and coverage across multiple phases of the system engineering lifecycle. Two years of learning, alignment, and application resulted in over a dozen concrete use cases that illustrate the benefits of a digital framework for systems engineering. The MBSE Pathfinder informed the plans to move NASA towards enterprise implementation of MBSE. This paper highlights examples in which both quantitative and qualitative benefits were obtained. The first example shows how systems engineering models used for concept design and definition were re-used for verification and test for a rocket engine. Schedule metrics were tracked to determine the improvement when using MBSE compared to recent historical data from manual methods. The second example shows the seamless transfer of modeling elements and data between the systems engineering model, computer aided design model, loads analysis, and additive manufacturing software for a payload adapter. This example shows how MBSE can be used to validate concepts and perform rapid prototyping. Qualitative benefits include improved communications and customer satisfaction. These examples, and others in a rich portfolio of results, demonstrate benefits available at points across the entire lifecycle in a rapid, agile approach. The MBSE Pathfinder projects were set up deliberately to sample multiple points in the lifecycle to understand the nuances and requirements sooner, rather than following one project end-to-end. The results from the MBSE Pathfinder help define the infrastructure and requirements necessary for a future systems engineering capability and provide a guide towards a full-up, integrated approach to systems development. To organize and implement these goals, the MBSE Pathfinder expanded into the MBSE Infusion and Modernization Initiative (MIAMI). The approach as well as the structure of MIAMI is unique in that it relies on learning from the use of MBSE on real projects and capturing the benefits that are useful for working engineers to make systems engineering easier. The lessons from this work are available for use by those who are interested in learning from or partnering with MIAMI.",1970
MBSE and MDAO for Early Validation of Design Decisions: a Bibliography Survey,"Switching from document-centric engineering to Model Based Systems Engineering (MBSE), Systems Engineering (SE) has significantly evolved in terms of standard practices for the design of complex, interdisciplinary systems. MBSE consists in a top-down, model based approach to describe the entire system focusing on different points of view that cover at least structural and behavioral descriptions. Over the past decade, the need to perform an engineering analysis in the early steps of the system's life cycle has opened avenues for joint use of MBSE and Multidisciplinary Design Analysis and optimization (MDAO). MDAO is fully dedicated to Analysis and optimization: the model is restricted to a single aspect of the system that is described in details in a formal language that will be the input of the associated computing tool. This paper surveys and categorizes MBSE and MDAO approaches for better understanding of how MBSE and MDAO can be associated in a systems engineering project. Lessons learned from this literature survey will be used in the framework of French project Concorde. One major expected achievement of the project is to design and implement a methodology to populate parts of the MDAO modeling approach directly from the MBSE one, applied to a UAV case study.",1970
Facilitating R&M in spaceflight systems with MBSE,An innovative modeling technique was developed to merge Reliability & Maintenance (R&M) activities with Model Based System Engineering processes. Associated tools were developed to automatically extract R&M products (FMECA and Fault Trees) from the model. The modeling technique and tools were successfully applied to a NASA/JSC project. The method enables the R&M perspective to be taken into account as key design decisions are being made during the design process.,1970
Key Techniques on Unified Identity Authentication in OpenMBEE Integration,"In order to make full use of the concept of model-based systems engineering (MBSE) and the collaborative design capability of the open model-based engineering environment (OpenMBEE) in establishing complex product development platform, we propose an effective method to solve the problem of unified identity authentication in OpenMBEE integration. The proposed method is based on the Model View Controller(MVC) architecture in OpenMBEE, which has the characteristics strong plasticity and can be benefit for expanding the function in the controller layer. In our research, we make full use of the Software Development Kit (SDK) of OpenMBEE to expand the existing functions in the controller layer, and increase the function of communicating with the application development platform, then realize the function of sharing user authentication information between the development platform and OpenMBEE. After expansion, the system includes three modules, including the Front-end Service Module(FSM), MQ based Information Receiving Service Module(IFRSM), and the OpenMBEE Backend Server Module(BSM). The effectiveness of the proposed strategies is verified by some practical instances, which verifies that our study can provide an effective design idea for the identity authentication in OpenMBEE integration.",1970
NASA Quality Assurance in an MBSE World,"Over the past decade or so, improvements and changes in descriptive models of systems have been occurring. This has mainly come about in the shift from a document-centered approach to an approach using a dedicated language known as the Systems Modeling Language (SysML). SysML has allowed Systems Engineers (SEs) to consolidate information about a system and even automate some tasks leaving the SEs to concentrate on the actual engineering and decision-making. Many of our quality assurance (QA) tasks either overlap or interface with systems engineering tasks, thus, it is important for quality engineers to understand and contribute to these system engineering models. We will explore some of the ways in which QA processes and products may be model within the framework of SysML. First let us look at how quality can be assured by using requirement elements in a systems model.",1970
A Complexity Analysis Approach for Model-based System Engineering,"With the increasing complexity of the highly engineered products, Model-based Systems Engineering (MBSE) is proposed to support the complexity management of the product development. As the basic of complexity management, complexity analysis is used to measure the system complexity for system solution trade-offs. Using traditional MBSE approaches, system architectures of product are formalized as MBSE models whose complexity measurement provides cues to quantitative trade-offs. In this paper, an MBSE approach is proposed to support complex analysis using qualitative and quantitative approaches. A GOPPRR approach is first proposed to support MBSE formalisms. Then a complexity measurement formula is used to calculate the structure complexity of the MBSE models. Finally, through a tool-chain developed based on Open Services for Lifecycle Collaboration (OSLC), a visualization tool is used to analyze the system complexity by measuring and visualizing the model complexity. A case study is proposed to evaluate the potentials of this approach for supporting product trade-offs. From the results, the approach enables to calculate complexity of MBSE models and virtualizes the model topologies.",1970
Research on Design Method of Civil Aircraft Brake Control Law Based on MBSE,"The traditional design method of the civil aircraft brake control law has the problems that the demand analysis is incomplete, the readability is poor, and it is difficult to track the problem. This article provides a design method of civil aircraft brake control law based on MBSE (Model-Based Systems Engineering). The analysis process of the whole brake control law is divided into three levels and a total of nine steps. The aircraft brake control law was used as the research object, and all stakeholders, use cases and requirements were analyzed, and the functions of the aircraft brake control law were decomposed accordingly. Each sub-function module was also analyzed in detail. The MBSE-specific tools were used to record the analysis and iteration results of each process, and a MBSE-based civil aircraft brake control law digital design method was provided.",1970
Integrated System Design and Safety Framework for Model-Based Safety Assessment,"The increased complexity of modern engineered systems has introduced novel challenges for assessing their safety early in the life cycle. For example, due to the iterative nature of the design and safety life cycle, there is constant data transformation and feedback of information between the system design models, safety analyses, and safety verification. Data transformation and feedback are often manually performed by engineers, which is time-consuming and error prone and can introduce inconsistencies in safety assessments. Although several model-based systems engineering approaches have been developed for safety analysis and safety verification, current approaches do not address the inconsistencies introduced in the safety assessment process. This study describes the Integrated System Design and Safety (ISDS) framework, which is a model-based safety assessment framework that aims to eliminate such inconsistencies. The framework combines a model-based safety analysis approach with a model-based safety verification. This paper extends previous work, which focused on the model-based safety analysis approach, to describe the model-based safety verification approach adopted in the ISDS framework. Safety verification is performed using a simulation-based fault injection approach and enabled by a fault injection engine, which injects failures into the system design and characterizes system behaviors to identify safety violations impacting the system. The results from the case study, in which the framework is used to assess the safety of a forward collision warning system, highlight that the algorithms and automated feedback loops of the framework can reduce inconsistencies in the safety assessment process while also identifying safety violations impacting the system.",1970
Product-Process MBSE and Dysfunctional Analysis Approach Applied to a Production Line,"The integration of new technologies and the increasing customer requirements in manufactured products requires more complex and automated production lines. Manufacturing processes are usually designed for a specific range of products. Thus, it is important to consider the dysfunctions of the product ans process conjointly. The aim of this paper is to propose a Model-Based Systems Engineering product-process approach for the dysfunctional analysis. This methodology consists in two phases: a functional analysis using SysML language for the system behavior and structure modeling, and a dysfunctional analysis using a combination of FMECA and FTA considering external intervention of the humans. This approach highlights the relations between the process and product failures and the importance of MBSE in the product-process dysfunctional analysis.",1970
Model-Based Systems Engineering for design and automated operation of modern waterway systems,"Waterway and canal systems are particularly cost effective in the transport of bulk and containerized goods to support global trade. Yet, despite these benefits, they are among the most under-appreciated of transportation engineering systems. Looking ahead, the long-term view is not rosy. Failures, delays, incidents, and accidents in aging waterway systems are doing little to attract the technical and economic assistance required for modernization and sustainability. We argue that programs for waterway and canal modernization and sustainability can benefit significantly from system thinking, supported by systems engineering techniques. To support this claim, we develop a framework for the Model-Based Systems Engineering (MBSE) design of modern waterways, especially canal systems. The proposed framework supports organizational, requirements and engineering models. Semi-formal modeling techniques are employed for the representation of project goals and scenarios and high-level models of behavior and structure. The essential features of this framework are highlighted in a case study where model-based systems engineering procedures are used for the design and analysis of a post-Panamax waterlock system. Formal verification procedures to demonstrate that essential system properties such as safety, liveliness and reachability are satisfied are currently under development.",1970
Model Based Systems Engineering on the Europa mission concept study,"At the start of 2011, the proposed Jupiter Europa Orbiter (JEO) mission was staffing up in expectation of becoming an official project later in the year for a launch in 2020. A unique aspect of the pre-project work was a strong emphasis and investment on the foundations of Model-Based Systems Engineering (MBSE). As so often happens in this business, plans changed: NASA's budget and science priorities were released and together fundamentally changed the course of JEO. As a result, it returned to being a study task whose objective is to propose more affordable ways to accomplish the science. As part of this transition, the question arose as to whether it could continue to afford the investment in MBSE. In short, the MBSE infusion has survived and is providing clear value to the study effort. In the process, the need to remain relevant in the new environment has brought about a wave of innovation and progress. By leveraging the existing infrastructure and a modest additional investment, striking advances in the capture and analysis of designs using MBSE were achieved. The effort has reaffirmed the importance of architecting. It has successfully harnessed the synergistic relationship of architecting to system modeling. We have found that MBSE can provide greater agility than traditional methods. We have also found that a diverse `ecosystem' of modeling tools and languages (SysML, Mathematica, even Excel) is not only viable, but an important enabler of agility and adaptability. This paper will describe the successful application of MBSE in the dynamic environment of early mission formulation, the significant results produced and lessons learned in the process.",1970
A Hybrid between Model-Based Systems Engineering and Agile Methodologies for Simulation of Complex Weapon Systems of Systems,"Modern Aerospace and Defence capabilities are “Systems of Systems” (SoS) by design, which has resulted in the development of a range of new systems engineering techniques in order to address the challenges introduced by this complexity. The use of modelling and simulation for ongoing analysis forms the backbone of various SoS Engineering (SoSE) methodologies, and many of the challenges that arise in SoSE apply equally to the modelling, simulation and analysis of complex integrated systems. Weapons and Combat Systems Division, in collaboration with other Australian Department of Defence agencies, is developing a modelling, simulation and analysis capability in order to investigate the performance of integrated defence systems. The execution of this development is being undertaken in the form of a “study series” based on the SoSE Wave Model and is composed of discrete sub-studies. Each of these sub-studies is used to progressively increase the complexity of the scenario being modelled (both number of systems being modelled and model fidelity) whilst performing analysis and answering questions for Defence stakeholders. This approach ensures regular and ongoing feedback and investment from client groups, and that the final modelling and simulation capability is fit-for-purpose to meet the strategic objectives. The study series operates on a yearly cycle of analysis where traditional model-based systems engineering (MBSE) approaches are employed to support the analytical and top-level model requirements definition. However, the developers of the various software models used within the study series commonly apply Agile-based methodologies, in accordance with current software engineering best practice. A hybrid methodology has been developed to manage this, incorporating components of more traditional MBSE tools and techniques at the study level, and Agile methodologies for model development. This paper describes this hybrid methodology, including how MBSE is utilised to manage an evolving, complex, SoS simulation capability, define study requirements, and integrate with an Agile software model development approach. The paper employs an unclassified aerospace example in which modelling and simulation-based analyses have been applied to explore how different Uninhabited Aerial System concepts could be implemented in concert with other platforms to enhance an Anti-Ship Missile Defence capability. The requirements definition approaches are explored from both the analysts' and model developers' perspectives.",1970
Employing MBSE to Assess and Evaluate Human Teaming in Military Aviation Command and Control,"Future systems development includes Command and Control (C2) technology to support Air Battle Managers (ABMs) and fighter pilots as they support complex missions employing autonomous Unmanned Aircraft Systems (UAS) within a larger System of Systems. In complex, evolving, and dynamic environments, the human operator’s ability to efficiently observe, orient, decide, and act is imperative. However, the operator’s performance can be degraded during changes in UAS custody between ABMs and pilots, which significantly increases operator cognitive workload beyond that typically seen in previous missions. Unfortunately, C2 technology development often places a heavy focus on automation and hardware, leaving the human operator underrepresented to the detriment human-automation interactions. Currently, Digital Engineering and Model-based Systems Engineering (MBSE) tools are rapidly being adopted in system development, integration, and management to support the complex development effort necessary to integrate these systems. The current research integrated human considerations in MBSE tools to analyze human-automation teaming during the development process. The method supports representation of the automation assistance and human operators during a modeled mission simulation in a pair of specialized activity diagrams referred to as the Mission Actor Diagram and the OODA2 Activity Diagram, permitting analysis of errors and bottlenecks during operation. This method illustrates the potential to reduce operator cognitive workload, improve operator decision making, and increased system performance, while reducing time spent in system redesign.",1970
Using model based systems engineering structures for onboard spacecraft electronics,"This paper reviews the MBSE progress of the previous year as we transitioned from a few small pilots to more widespread use in our space systems electronics. Efforts have spanned from the FPGA gateware to full payload electronic boxes with most efforts in the structural and requirements pillars of SysML. This describes the evolution of the structure of our models and the common formatting, colors and naming classes that we have developed. This discusses information hiding challenges of presenting diagrams to non-system engineers who are used to complex but artistic PowerPoint slides versus more regular and often font size challenged SysML diagrams. Methods to pull data out of the models for team usage and document generation will be reviewed. Finally, current training approaches and future direction will be described. MBSE is slowly transforming our systems engineering efforts. As foundations are set, we expect the value to multiply as we maintain one source of truth for a program, reuse models and share data between systems and other disciplines in a much more efficient way.",1970
Experimentable digital twins for model-based systems engineering and simulation-based development,"The concepts and methodologies behind Model-based Systems Engineering (MBSE) hold great promises concerning the development of complex systems. Various projects have been carried out successfully during the last years and demonstrated the power behind the overall concept - and the practical problems to reach the ambitious overall goals. Whereas the first steps of MBSE like the iterative modeling of requirements, designs, behaviors, and tests became standard procedures in Systems Engineering (SE), the transition to simulation often is still restricted to quite simple scenarios. Although elaborated system models deliver all the information needed, the simulation of the overall system in prospective working environments interacting with other systems is rather an exception. The problem is that there is still quite a gap between the first SE steps and the various algorithms simulation technology can offer today. Major reasons for this seem to be the resulting complexity of the system model when modeling complex interactions, the complexity of using state-of-the-art simulation technology and the absence of simulation frameworks for simulations across multiple domains and disciplines. ""Experimentable Digital Twins"", a concept originally developed for the eRobotics methodology, seem to have the potential to close the gap between SE and simulation by introducing a new structuring element to configure simulations. A new simulation system architecture integrating well-known simulation algorithms provides Virtual Testbeds for the simultaneous simulation of a network of different Digital Twins interacting with each other in various ways (i.e. a network of different systems, their components and their working environment). This approach has been successfully used for a variety of different applications in multiple research areas. As one application, it allows for the simulation-based optimization of parameters, system structure etc.",1970
Early Validation of the Data Handling Unit of a Spacecraft Using MBSE,"Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE), and is used to promote consistency, communication, clarity and maintainability within systems engineering projects. MBSE offers approaches that can address issues associated with cost, complexity and safety. Focus groups with Airbus spacecraft functional avionics engineers have highlighted that one way this can be achieved is by performing early functional validation of the high-level spacecraft functional avionics system. This paper defines an approach to the application of MBSE to perform early functional validation of a spacecraft. This approach acts as an extension to a methodology in development by Airbus. It focusses on the definition of the Concept of Operations during Phase B. Information traditionally contained in a Mission Operations Concept Document is presented through a Mission Operations Concept Model. The aim is to improve the clarity, consistency and quality of the information being communicated by providing a model template to contain the relevant system information and enable the high-level simulation of the design. This high-level simulation is enabled by the execution of static systems engineering diagrams. The mission phases are defined and a mission profile, determined by the orbit characteristics, specifies the duration of each phase. The system mode diagram details the response of the system to a change in the mission phase, and activity diagrams describe the functions that must be performed by the system in each mode. Executing this information allows the response of the system to be analysed and validated against high-level mission needs. Traditionally, this level of analysis would not be available at this early stage. The approach replaces ad hoc calculations with a formal representation of the system that can be executed, interrogated and quantified. The structure of the spacecraft system is represented by block definition and internal block diagrams, and the functionality by executable state machine and activity diagrams. Textual requirements are presented and maintained within the model and are formally linked to the physical and functional architectures. These requirements are refined by mathematical constraints that can be satisfied by calculations performed during the simulation. The use case discussed in this paper focusses on the data handling unit onboard an Earth-observation spacecraft. The system response in terms of the onboard memory usage throughout the mission is calculated. The onboard memory consists of three directories - one for housekeeping telemetry and two for science data. The simulation shows that for the chosen orbit, the total onboard memory allocation is adequate and provides a solution for the optimum memory allocation between the three directories. Ultimately, a flexible Mission Operations Concept Model template will be derived for use on future projects, which will enable them to realise the benefits demonstrated in the use case: improved control, communication and early validation of the functional avionics system design.",1970
Model-based Systems Engineering Process for Supporting Variant Selection in the Early Product Development Phase,"Combining the benefits of model-based systems engineering (MBSE) and product line engineering (PLE), model-based product line engineering (MB-PLE) is applied for the design and development of complex product line systems with variants. However, due to limitations such as visualization complexity and lack of support for variant selection, MB-PLE is still not widely applied in the manufacturing industry. In this paper, we propose a model-based systems engineering process in the early development phase to promote the application of MB-PLE in the manufacturing industry. Through the integration of PSS planning model, SysML4Mechatronics modeling language and an optimal variant selection approach, the proposed process facilitates the modeling of a product line system and supports variant selection as well as architecture verification. The feasibility of the proposed systems engineering process is demonstrated with a case study.",1970
A Model Query Language for Domain-Specific Models,"Model queries play a crucial role in the Model-driven development processes, particularly for Domain-Specific Modeling (DSM) and Model-based Systems Engineering (MBSE). The model queries are also regarded as the cornerstone for model-driven development activities, such as code generation, model transformation, and model constraints checking. The GOPPRR metamodeling approach is widely used to formalize the domain-specific models. Based on this approach, the KARMA language has been proposed to formalize models, metamodels, and code generation but lacks support for the model querying. This paper proposed one query language based on the GOPPRR metamodeling approach extended from the KARMA language to realize the unified query formalisms for multi-domain models. Finally, a case in a vehicle tracking system development is used to verify the availability of model query language, which is implemented in a domain modeling tool, MetaGraph. Keywords-Domain-Specific Language; model query language; model-driven development; Model-based Systems Engineering.",1970
A model-driven visualization tool for use with Model-Based Systems Engineering projects,"Model-Based Systems Engineering (MBSE) promotes increased consistency between a system's design and its design documentation through the use of an object-oriented system model. The creation of this system model facilitates data presentation by providing a mechanism from which information can be extracted by automated manipulation of model content. Existing MBSE tools enable model creation, but are often too complex for the unfamiliar model viewer to easily use. These tools do not yet provide many opportunities for easing into the development and use of a system model when system design documentation already exists. This study creates a Systems Modeling Language (SysML) Document Traceability Framework (SDTF) for integrating design documentation with a system model, and develops an Interactive Visualization Engine for SysML Tools (InVEST), that exports consistent, clear, and concise views of SysML model data. These exported views are each meaningful to a variety of project stakeholders with differing subjects of concern and depth of technical involvement. InVEST allows a model user to generate multiple views and reports from a MBSE model, including wiki pages and interactive visualizations of data. System data can also be filtered to present only the information relevant to the particular stakeholder, resulting in a view that is both consistent with the larger system model and other model views. Viewing the relationships between system artifacts and documentation, and filtering through data to see specialized views improves the value of the system as a whole, as data becomes information.",1970
Model Based Systems Engineering approach for the improvement of manufacturing system flexibility,"To meet the increasingly personalized and unpredictable demand experienced by manufacturing industry, we propose a Model Based Systems Engineering (MBSE) approach to support the development of more flexible manufacturing systems in an Industry 4.0 context. The final purpose of this research work is the design of a decision-making system, based on three solutions (scheduling optimization, Flexible Manufacturing Systems and Reconfigurable Manufacturing Systems) coupled with real time data to satisfy an increasingly changing demand. These alternatives will depend on both the desired flexibility dimensions and the relevant associated criteria. This approach is then applied to a perfume production case study.",1970
Inter-satellite communication MBSE design framework for small satellites,"An Architectural framework for defining Inter-Satellite Communication system architectures based on Model-Based Systems Engineering concepts will facilitate the development of reliable and consistent system models that can be simulated, verified and validated. However, such a framework does not exist, thereby limiting our ability to define comprehensive and effective inter-satellite communication system architectures. As a means of addressing this challenge, we present an architectural framework design for defining and representing ISC system architecture for Small Satellite Systems based on an MBSE approach. The Systems Modeling Language SysML is used as the modeling tool for the framework design.",1970
Improving MBSE models using human performance simulation,"It is important to recognize the human as an integral part of the system and its performance during systems development. However, systems engineers (SEs) currently fail to properly integrate the human into the system. This research aimed to improve system models by incorporating the human into modeling efforts. A set of Model-Based Systems Engineering (MBSE) models were created to describe an example scenario involving a virtual remotely-piloted aircraft simulation. When creating the models, some assumptions were made about the human from a SE's perspective. In order to verify if these assumptions were realistic, a human-focused model of the system was created using the Improved Performance Research Integration Tool (IMPRINT). Running simulations in IMPRINT uncovered fallacies in some of these assumptions, thus demonstrating the value of incorporating the human into system models and reemphasizing the human as part of the system.",1970
MBSE modeling method of civil aircraft wheel brake,"Model-based systems Engineering (MBSE) method has been widely used in the aerospace field, it is mainly used to realize the forward design of system based on requirements of stakeholders. The model is applied to each stage of the system to support system design, the system is unfolded layer by layer from black box, gray box to white box to complete the top-down system design. This paper aims at civil aircraft wheel brake system(WBS), from the operational dimension, functional dimension and structural dimension, a structured system design method based on user requirements is constructed.",1970
A reference model in safety design of a modular service robot based on MBSE: A case study of a stocking robot in a supermarket,"During safety design of a modular service robot, the designer should consider the three diversities: modularity itself, working environment, and use cases. To consider the diversities effectively, Model-Based Systems Engineering (MBSE) has been applied for safety design of modular systems in several industries, e.g. automobile and manufacturing. However, its application to a modular service robot is limited. A reference model in safety design of robots is proposed herein by using SysML and its effectiveness is examined based on a case study for a stocking robot application.",1970
Requirements Engineering for Retrofittable Subsea Equipment,"This paper highlights the requirements engineering approach tailored to the unique complexities of developing system requirements for the retrofit of subsea equipment used in offshore deepwater operations. A feasible system in this application must satisfy demanding stakeholder needs in safety, reliability, availability, maintainability, retrofittability, deployment timelines, interface compatibility and regulatory conformance. Additionally, the system requirements must be defendable against the industry's decades-long established regulatory, cultural and technological legacies. To objectively define the system requirements within these constraints, the conventional INCOSE requirements engineering process including analysis, allocation, refinement, and traceability was tailored specifically to the project leveraging aspects of Model Based Systems Engineering (MBSE). A novel approach for tracing specific clauses contained within industry standards and regulations to system requirements is discussed, including a methodology for capturing conformance, equivalence and alternative means of compliance. The tailored requirements engineering process utilizing commercially available systems engineering software tools is presented.",1970
Formal Behavioral Requirements Management,"In this paper, we develop the mathematical foundation for a formal requirements management of a systems engineering (SE) methodology called the Responsive and Formal Design (RFD) process. The RFD process relates a set of requirements, associated models, simulations, and the relationship between them, by integrating model-based systems engineering (MBSE) to manage system modeling complexity with formal methods to ensure that designs are verifiably correct against their requirements. In this paper, we formally define basic notions of the RFD process, develop algorithms to extract a set of logical expressions from a set of requirements, and present a technique that is used to map a behavior model to its simulation. We also present a formal way of refining requirements in the RFD process and show how properties are preserved along the way in a fundamental fashion. We demonstrate our development using three small satellites measurement system that images the colorful auroral ovals around Earth's magnetic poles.",1970
Model-Based Systems Engineering Uptake in Engineering Practice,"Modeling is ubiquitous in engineering, but data on model use and user sophistication in engineering-driven firms are remarkably sparse. Some authors have predicted a sea change in engineering workflow through model-based systems engineering. Despite benefits, the prevalence of effective modeling techniques in industry is an open question. Massive open online courses and similar online offerings are a new opportunity to learn about industry practices. In this paper, we draw on data from the “Architecture and Systems Engineering: Models and Methods to Manage Complex Systems” online program from the Massachusetts Institute of Technology, which has enrolled 4200 participants, to understand how models are used in practice. We use aggregated data from questions to investigate model use by participants and their organizations. The results demonstrate that whereas modeling is widely recognized for its potential, the actual deployment against problems of interest is substantially lower than the participant-stated potential. We also find that many participants reported low use of basic modeling best practices, such as specialized programs. We propose that this research is a fresh use of descriptive analysis to uncover actual modeling practices. Future research should target more detail about modeling practices in engineering-driven firms, and the reasons why modeling adoption is low or overstated.",1970
Model-based requirements engineering: Architecting for system requirements with stakeholders in mind,"Specifying system requirements (SysReqs) is a critical activity in complex systems development. The SysReqs and emerging architecture are constructed through gradual and iterative transition from the problem domain and operational stakeholder requirements to the conceptual solution domain. They later constitute the basis for functional requirements elaborating, concept formation, technology selection, function-to-form allocation, and asset utilization. Only rarely can stakeholder requirements (SHRs) readily translate to SysReqs. Systems engineers must therefore elicit, analyze, and evolve the SysReqs, as these will radically affect the system's performance, robustness, endurance, and appeal. Model-Based Systems Engineering (MBSE) provides a framework for effective and consistent systems engineering and architecting. MBSE relies on modeling languages, such as Object-Process Methodology (OPM). OPM is a holistic MBSE paradigm and language for complex systems and processes, standardized as ISO 19450, which relies on the principle of minimal universal ontology. In this paper, we propose a model-based requirement engineering (MBRE) approach to facilitate the transition from SHRs to SysReqs, and from SysReqs to system architecture specification. We demonstrate the applicability of this framework in architecting a robotic baggage loading system for a leading international airport.",1970
PRELIMINARY REPORT: A Proposed Model Based Systems Engineering Approach to a Virtual Vehicle Architecture Model (V2AM) for Live-Virtual Testing and Prototyping,"Due to the increasing complexity of the system of systems within the aero-auto domains, architecture modelling and analysis is becoming progressively more important to systems engineering design. The drive from both domains is for more functionality and efficiency from vehicles. The resultant effect on system development means the complexity of the designs has increased and thus the complexity of the virtual simulations used for test and analysis has also increased. When actual systems or their components are integrated with the simulation environment, live-virtual testing places real-time demands on the testing of the architecture and environment. This paper describes a proposed innovative approach, derived from aerospace engineering, where the vehicle requirements are allocated to relations between the elements in the architecture and not just to system elements. An approach to using the relational oriented modelling structure for test and analysis is also described. The requirements and system architecture models specified using relational orientation are therefore seen to provide an early demonstration of a rigorous new approach to system of systems design, test and analysis that uses requirements trace ability at the architecture level. This approach promises to bring better trace ability of system requirements to the simulation of vehicle behaviour in general and to real time behaviour in particular.",1970
Design and Implementation of SysML Activity Diagram Simulation Function Based on fUML Specification,"With the rapid development of computer science and technology, Model-Based Systems Engineering (MBSE) has been widely used in the field of system design and simulation, gradually replacing traditional text-based systems engineering methods. As a standard modeling language in the field of systems engineering, SysML, together with modeling tools and modeling methods, is called the three pillars of MBSE. Activity diagram is a kind of behavior diagram of SysML, and its simulation plays an important role in MBSE practice. Aiming at the problem that the activity diagram simulation capability of domestic SysML modeling software is insufficient, this paper implements the simulation function of SysML activity diagram based on the fUML specification.",1970
Evaluating MBSE Methodologies Using the FEMMP Framework,"Model-Based Systems Engineering (MBSE) is an effective and efficient approach to implement systems engineering. Storing valuable system information in models increases the consistency, traceability, and availability of the information. Early validation and testing of system information enable timely feedback on requirements and design decisions. Many MBSE methodologies exist, making it difficult for practitioners to select the proper methodology for their particular engineering challenge. In 2016, Tim Weilkiens et al. have proposed a Framework for the Evaluation of MBSE Methodologies for Practitioners (FEMMP) and used it to evaluate their methodologies (SYSMOD and MDDM). In this paper, the Vitech Methodology (STRATA), Object-Process Methodology (OPM), RePoSyD, and ARCADIA are presented and evaluated using FEMMP. In addition, the current criteria offered by FEMMP are discussed, and new criteria are proposed.",1970
Target-oriented implementation of systems engineering in medium-sized enterprises: Project example for mbse implementation in mechanical and plant engineering,"Technical systems of tomorrow will go beyond current traditional mechatronic designs by incorporating inherent intelligence. This causes high demands on the product development process, such as the need for a comprehensive understanding of the system and consideration of the full product lifecycle. Systems engineering (SE) is an approach that has the potential to fulfill these requirements. However, until now it could not be applied in a wide range of industries and segments, especially not in small and medium-sized enterprises (SMEs). This paper discusses different obstacles for the use of SE and presents a concept to enable target-oriented application of model-based systems engineering methods in SMEs. The paper reveals an example for the incremental implementation of model-based systems engineering in medium-sized enterprises in mechanical and plant engineering. Based on identified action fields relevant SE approaches were derived and tailored.",1970
Dynamic Fault Tree Generation for Safety-Critical Systems Within a Systems Engineering Approach,"Systems are getting increasingly complex and challenging to design. For safety-critical systems, the integration between model-based systems engineering and model-based safety assessment to improve the choice of the system architecture since the early design stage becomes a necessity. One of the integration solutions is to generate fault trees (FTs), either static or dynamic, directly from the system description. In this paper, we are particularly interested in the generation of the dynamic fault trees (DFTs) of the systems that contain redundancies, which is widely used in safety-critical systems to enhance their reliability. The goal of this paper is, first, to propose a redundancy profile and, second, to automatically generate the DFTs from system models. Since errors are propagated via input and output ports of the components, the generation process starts with a depth-first search graph traversal through the systems modeling language internal block diagram of the system. This diagram is considered as a multidirected graph in order to detect the external inputs, the nonredundant components, the switch components, and the redundant components of the system. Then, the redundancy information incorporated in the system model is used to generate the appropriate combinations of the FT. This FT is represented in a suitable format that can be studied using FT analysis tools, for both qualitative and quantitative safety analyses.",1970
System of Systems Modelling: Recent work Review and a Path Forward,"Systems-of-Systems (SoSs) stand out from monolithic systems, because of their composed nature, their large scale, their decentralized control mechanism, their evolving environments, and their large number of stakeholders. Due to the varied methodologies and domains of applications in existing literature, there does not exist a single unified consensus for processes involved in System-of-Systems Engineering (SoSE). The purpose of this article is to provide a cursory description of the SoS basic concepts on the one hand, and then to analyse the main challenges in its development. Finally, we report the literature review showing various techniques and methods that have been modified from the conventional systems engineering to better fit the needs of SoSs design. We hope the findings of this work may encourage and inform the community researchers of the creation of a more holistic and unified engineering process that is tailored for the demands of these large-scale systems. Thus, the complexity of the SoS development lends itself nicely to a Model-Based Systems Engineering (MBSE) which provides communication and verification that transcends the levels of development. MBSE uses a model or set of models to document and communicate from the system requirements level down to the software implementation level.",1970
Exposing hidden parts of the SE process: MBSE patterns and tools for tracking and traceability,"An interesting benefit of applying Model-Based Systems Engineering (MBSE) is that the rigor and coordination intrinsic to MBSE forces us to apply Systems Engineering to our own traditional activities, processes, and products, which results in richer, more expressive models, more powerful reasoning, and a clearer and more effective Systems Engineering (SE) process. Our MBSE frameworks and languages contain semantic richness sufficient to describe our systems at any particular point in time, often with an emphasis on the description of the system at major milestones. This is unarguably a real asset. However, when we apply MBSE in service of missions that are in development, rapidly evolving, of a larger scale, and where interpersonal communication is a critical part of the design process, we discover that our frameworks and languages are still not quite rich enough to enable us to ask the kinds of questions and get the kinds of answers we want in order to address the concerns of day to day work. This paper will discuss some patterns and tools we have developed to help address some of the not-always-explicit SE concerns that we have identified through our MBSE work. Particularly, this paper will discuss flexible yet practical methods for defining and capturing maturity, workflow, and agreement traceability within our system models, extensible ways to perform and track model audits, and ways to report and interact with this knowledge in the context of MBSE applied to support NASA's Europa Project.",1970
MDDP: A pragmatic approach to managing complex and complicated MBSE models,"A central promise of Model-Based Systems Engineering (MBSE) is to provide all members of a development team with the right tools to manage all information about their product throughout its life-cycle. The key to deliver this promise is a pragmatic methodology without introducing new overheads, steep learning curves or the need to buy expensive software. The Model-Driven Development Approach (MDDP) addresses these issues by combining best-practices from MBSE and Lean Information Management. It provides a structure for all salient Systems Engineering (SE) data in a central model that stretches across all architectural layers and allows the automatic generation of various specialists' perspectives in different formats, such as diagrams, graphs, tables, matrices, reports etc.",1970
Update on the Model Based Systems Engineering on the Europa Mission Concept Study,"In May 2012 the Europa study team delivered to NASA the final reports on three distinct concepts for exploring Europa on a limited budget. The depth and quality of these reports have been widely praised by independent reviewers as well as by our sponsor. The application of Model Based Systems Engineering (MBSE) techniques is credited with enabling the team to study three quite different mission concepts for the resources normally sufficient to study only one or two. The Europa MBSE infusion itself has been awarded the NASA Systems Engineering Excellence Award in 2012. The Europa team is now preparing for its Mission Concept Review and has reaffirmed and strengthened the MBSE application. Significant new capabilities have been completed, most importantly the Powered Equipment List (PEL) and the computation of scenario-based power and energy margins. This paper provides an update on the continued successful application of MBSE in the dynamic environment of early mission formulation, the significant new results produced and several additional lessons learned in the process.",1970
Preparing the Acquisition Workforce: A Digital Engineering Competency Framework,"This paper describes the goals, methods, approaches, and preliminary results of a research task within the Systems Engineering Research Center (SERC). Evidence across the Services and industry has affirmed digital engineering is a critical practice necessary to support acquisition in an environment of increasing global challenges, dynamic threats, rapidly evolving technologies, and increasing life expectancy of our systems currently in operation. Digital engineering updates the systems engineering practices to take full advantage of computational technology, modeling, data analytics, and data sciences. The Department of Defense's vision for digital engineering is to modernize how the Department designs, develops, delivers, operates, and sustains systems, while continuing to practice systems engineering efficiently and effectively. Digital transformation is fundamentally changing the way acquisition and engineering are performed across a wide range of government agencies, industries, and academia. As the Department of Defense transitions to digital engineering, there is a need to develop and maintain an acquisition workforce and culture that is literate in model-based engineering, competent in digital engineering models, methods, tools, and understands digital artifacts across the acquisition lifecycle.This paper outlines the development of the Digital Engineering Competency Framework by the Systems Engineering Research Center. The purpose of the Digital Engineering Competency Framework is to provide clear guidance for the Department of Defense acquisition workforce, in particular the engineering acquisition workforce, through clearly defined competencies that illuminate the knowledge, skills, abilities, and behaviors required for digital engineering professionals. The approach taken to develop the Digital Engineering Competency Framework draws from existing competency models discovered during a literature search and from the practicing Digital Engineering community. The development process for the Digital Engineering Competency Framework relied initially on literature findings to develop a draft model that was reviewed by subject matter experts through a series of workshops. No existing competency models focused on digital engineering (or model-based systems engineering or model-based engineering) were found during the literature review. However, several related competency models were identified, and these informed the initial draft model. At appropriate points, the draft model(s) were assessed through community presentations and industry review and appropriate revisions were made.The Digital Engineering Competency Framework has currently completed several iterations of subject matter expert review and revisions and is approaching a finalized general structure. The overarching structure of the DECF will consist of competency areas, proficiency levels within the competency, and constituting knowledge, skills, abilities, and behaviors. The specific knowledge, skills, abilities, and behaviors that will be associated with each competency area are the primary elements still changing in current iterations. Once the model is finalized, it will be compared with the existing Defense Acquisition University curriculum to determine what elements of such existing curriculum already support these competencies. Gaps will be noted, and training recommendations will be developed. As with the development of the model itself, this will be an iterative process. Another critical use case for the Digital Engineering Competency Framework is to enable hiring for Digital Engineering Positions, given Competency models and frameworks are used by hiring managers to ensure that individuals have the required and appropriate skillsets to adequately perform their jobs.",1970
Concept Design Using Model Based Systems Engineering,"The value of analytical modeling when performing concept design cannot be overstated. Using a concurrent engineering process and interconnected analytical tools to estimate system size, mass, power, performance, resilience, and cost, engineers can rapidly develop concepts to perform feasibility assessments and configuration trade studies. Perhaps less clear is of the value of descriptive modeling offered by Model Based Systems Engineering (MBSE) practice applied to concept design. Currently there are precious few examples of acquisition programs implementing MBSE across all life cycle phases, and fewer examples of programs that use it during concept development. Concept developers use analytical tools to analyze candidate systems during this phase, but they also need to deal with other aspects of system design such as mission objectives, system requirements, concept of operations, system architecture, and function allocation. These attributes may all be captured and interconnected in a descriptive system model, which is at the very core of MBSE practice. It is shown here how system developers can create and use such a descriptive system model in conjunction with their analytical concurrent engineering tools to rapidly develop concept designs.",1970
MBSE along the Value Chain – An Approach for the Compensation of additional Effort,"Model Based System Engineering is an approach that is not limited to the development activities of one system creating enterprise. In fact, many OEMs nowadays demand the contribution of their suppliers towards the continuous modelling of complex systems. Potentials of applying MBSE might vary and are connected to the constraints and resources of the applying company. This leads to different motivations throughout the value chain for applying MBSE. Especially the resulting additional effort gives rise to the question of generated benefits and the ROI of MBSE. While complex system manufacturers are benefiting from the approach through its complexity-grasping basis, suppliers might not benefit from it at all in their own development activities. With this paper the distribution along the value chain is analyzed and it is investigated how to compensate additional effort caused by MBSE for suppliers and SME.",1970
MBSE Utilization for Additive Manufactured Rocket Propulsion Components,"Model Based Systems Engineering (MBSE) has garnered increased utilization among various NASA's spaceflight programs such as the Human-to-Mars In-Situ Resource Utilization (ISRU) and Cis-Lunar Habitat architectures, Commercial Crew Program (CCP), and Space Launch System (SLS). Recently, MBSE has also helped support NASA's Design-for-Reliability (DFR) and Mission Assurance activities. The utilization of MBSE helps visualize the development of the overall system in a digital environment. For the development of rocket propulsion systems, leveraging MBSE helps find ways to achieve reduction in costs, schedule, and risk throughout its life-cycle in a comprehensive and a cohesive manner. In order to deliver affordability in the competitive space race environment, it is important to reap the benefit of newer manufacturing technologies such as Additive Manufacturing (AM). In development of rocket propulsion systems, AM provides new design and performance opportunities for the rocket engine designs that is often complex. The fundamental advantage of an additively manufactured rocket propulsion element is the reduction in lead time and cost against traditional production techniques. AM designs help realize complex shapes and geometries that are often challenging and expensive to be produced using traditional production methodologies. In the context of a development of rocket propulsion system, AM provides the technological opportunity to realize newer engine designs that are technically and economically feasible. Significant efforts such as NASA's Additive Manufacturing Demonstrator Engine (AMDE) employ additive manufacturing in production of rocket propulsion engines. On the other hand, MBSE provides the ability to visualize the impact of a design change in a digital environment. Consequently, the objective of this study is to evaluate the benefits of leveraging MBSE suited to the context of additive manufactured rocket propulsion elements. A literature review is performed for the current state-of-the-art of additive manufactured rocket propulsion elements and potential opportunities to leverage MBSE has been identified. Furthermore, a design example (RS-25 or Space Shuttle Main Engine) has been explored to demonstrate the benefits of the research idea in this study. The choice of the design example is driven by the need to restart production of the engine for NASA's future launch manifests. Finally, the results of this study have been assessed qualitatively within the scope of reducing the time in Test-Fail-Fix (redesign, remanufacturing, retest, and recertification) cycle of the engine.",1970
Systems Thinking and Model Based Systems Engineering’s Utility to Solve Complex Organizational Problems - Cyber-Physical System Design Teams,"The Systems Engineering community has embraced Systems Thinking and Model Based Engineering (MBSE) in system design and development activities to grapple the growing complexity and interconnectedness of modern systems, particularly Cyber Physical Systems (CPS). Systems Thinking and MBSE provide a framework and tools for better understanding complex problems, and improving decision making. Beyond traditional system design, Systems Thinking and MBSE can also be applied to solve complex organizational problems. This work uses Systems Thinking and MBSE to better understand the variables and influences in the system design teams themselves. This work applies Systems Thinking and MBSE to a complex organizational problem with a case study of Cyber Physical System design teams. Current CPS Design teams often fail to deliver secure system designs, which is evidenced by the fact that an increasing number of complex systems are being exploited by cyber attacks. The root cause is lack of ‘Security by Design’ often due to an under-trained CPS design team. In this paper, we demonstrate the utility of Systems Thinking and MBSE, using causal loop and block definition diagrams, to perform systematic identification of shortcomings of CPS design teams.",1970
A Case Study in Developing an Integrated Data and Model Management System for the Development of a Complex Engineered System,"Ahstract- This paper presents a case study in implementing an integrated data and model management system in the development of a complex system. Joint Acquisition Task Force (JATF) Tactical Light Operator Suit (TALOS), a subordinate organization of U.S. Special Operations Command, is attempting to build a powered exoskeleton to support dismounted special operators. The project is, at its core, a research and development project, but it is challenged by the fact that it is also a Department of Defense acquisition project that must balance the requirements of cost, schedule, and performance. To balance these competing needs, the team has developed an integrated approach to sharing information among the models necessary to support cost, schedule, and performance analysis. Notably, the team makes significant use of model-based systems engineering (MBSE) to support information integration. This paper presents the challenges associated with developing TALOS, its approach to information management, and ongoing findings on how this approach has improved its performance.",1970
"A Taxonomy of MBSE Approaches by Languages, Tools and Methods","Systems engineering has gained in maturity over the last decades and started a transition from document-centric approaches to Model-Based Systems Engineering (MBSE). Several papers have discussed the benefits and potential, but also the limitations, of using MBSE, based on literature surveys and analyze feedback from academia and industry. The current paper explores a complementary avenue and aims at giving students and industry practitioners a set of keys and decision criteria to select MBSE languages, tools and methods. Languages, tools and methods are categorised and selection criteria are proposed for a panorama of languages that goes beyond SysML and other techniques commonly associated with MBSE. In addition, research avenues for the future of MBSE are identified. The discussion relies on the authors’ experience in teaching and using system engineering and MBSE in both academia and industry, as well as on the experience shared within the framework of Concorde, a French project dedicated to drone systems design methodologies.",1970
An Integrated Medical System Dependability Framework,"This paper presents a medical systems development process that integrates system dependability (safety, reliability, availability, maintainability, security) with systems architecture and design in a Model-Based Systems Engineering (MBSE) environment. The dependability framework is focused on the prevention, removal, and tolerance to faults in a system, including use error, and it utilizes and builds upon the MBSE artifacts generated through a top-down systems development effort through the entire development process. This coordinated effort focuses on the fundamental causes of faults, how those faults propagate into system failures, and how system design decisions can often provide more elegant and cost-effective solutions for achieving a dependable medical system than focus on component and part reliability. This dependability framework further reinforces the existing relationship between behavioral and structural modeling, e.g. as expressed in a SysML context, and integrates the dependability modeling artifacts to complete a more holistic MBSE modeling framework.",1970
MBSE-Compliant Product Lifecycle Model Management,"Systematically managing product models and their derivative data becomes a rudimentary and essential requirement for manufacturing companies to cost-effectively develop and operate complex product systems. It is recognized that conventional product data management techniques are deficient in information integration across disciplinary boundaries and product lifecycle stages. Increasing complexity in product developments demands all related aspects be dealt in accordance with systems engineering methodologies. In compliance with the prevailing model-based systems engineering (MBSE) methodology, this paper proposes to extend conventional product data management to product lifecycle model management (PLMM), which shift emphasis from data managements to model managements throughout a whole product lifecycle. This paper first presents a MBSE-compliant PLMM architecture that outlines the related methodology, modeling techniques, processes, knowledge management, etc. Then, this paper describes basic compositions of a generic PLMM software platform that materializes the PLMM approaches. Subsequently, this paper reports a joint PLMM research initiative in China. It is anticipated that manufacturing companies will benefit much from implementations of PLMM techniques.",1970
A Service-Oriented Tool-Chain for Model-Based Systems Engineering of Aero-Engines,"This paper proposes a service-oriented tool-chain with an emphasis on domain-specific views, simulation automation, and process management to support model-based system engineering of aero-engines. In the tool-chain, a domain-specific modeling approach is adopted to facilitate the descriptions of co-design workflows and the related development information. The relevant domain-specific models are the basis for automated creation of a Web-based process management system consolidating and controlling service-oriented technical resources (models, data, and tools). In particular, the system also provides support for automated orchestration of tool operations, model, and simulation configurations. In order to promote the model and tool interoperability, the tool-chain adopts open standards for integrations, including open services for lifecycle collaboration and functional mock-up interface. Finally, through a case study of simulation-based aero-engine performance analysis, we evaluate the flexibility and efficiency of this tool chain by comparing it with a traditional simulation process both qualitatively and quantitatively.",1970
Mechatronic System Design using Model-Based Systems Engineering and Set-Based Concurrent Engineering Principles,"In the upstream design stage, designers with narrow knowledge of design for performance (DFP) and design for quality (DFQ) produce a rough part design with arbitrary geometry. This leads to iterative exchange loops between design participants in the early design stage and generates additional cost every time there is a modification. To overcome this issue, the integration of a system engineering approach hinged on set based concurrent engineering principles will reduce the exchange loops between engineers and optimize the use of time and resources. This approach is based on information flows: The upstream flow represents the exchange of information issued from system engineer to the different specialists, while the downstream flow serves as a feedback from the specialists to help system engineer in trade- off analysis. In this paper, a novel approach based on exchange flows is used to reduce the exchange loops between engineers. In the context of design for performance, system's constraints are introduced as key value attributes to evaluate trade-offs and to choose the best system architecture. Then, for each solution of the design space, the clustering phase is done through a developed algorithm to eliminate unfeasiule or costly solutions using filters like lead-time, production cost, quality, reliability and performance. Finally, a trade-off analysis is done to compare the reduced set of solutions. A case study concerning an electronic throttle body will be posed to illustrate various stages of this concurrent engineering approach.",1970
Transitioning model based systems engineering to onboard spacecraft electronics,"This paper describes some of the initial steps BAE Systems' space electronics group is taking to become familiar with an MBSE tool and apply it to our current onboard hardware development projects as we shape the best ways to apply these to a product oriented multi-tiered set of spacecraft electronic items: silicon circuits, IP cores, components, modules, boxes and systems with their associated firmware, gateware and software and test equipment1.",1970
Model based systems engineering (MBSE) applied to Radio Aurora Explorer (RAX) CubeSat mission operational scenarios,"Small satellites are more highly resource-constrained by mass, power, volume, delivery timelines, and financial cost relative to their larger counterparts. Small satellites are operationally challenging because subsystem functions are coupled and constrained by the limited available commodities (e.g. data, energy, and access times to ground resources). Furthermore, additional operational complexities arise because small satellite components are physically integrated, which may yield thermal or radio frequency interference. In this paper, we extend our initial Model Based Systems Engineering (MBSE) framework developed for a small satellite mission by demonstrating the ability to model different behaviors and scenarios. We integrate several simulation tools to execute SysML-based behavior models, including subsystem functions and internal states of the spacecraft. We demonstrate utility of this approach to drive the system analysis and design process. We demonstrate applicability of the simulation environment to capture realistic satellite operational scenarios, which include energy collection, the data acquisition, and downloading to ground stations. The integrated modeling environment enables users to extract feasibility, performance, and robustness metrics. This enables visualization of both the physical states (e.g. position, attitude) and functional states (e.g. operating points of various subsystems) of the satellite for representative mission scenarios. The modeling approach presented in this paper offers satellite designers and operators the opportunity to assess the feasibility of vehicle and network parameters, as well as the feasibility of operational schedules. This will enable future missions to benefit from using these models throughout the full design, test, and fly cycle. In particular, vehicle and network parameters and schedules can be verified prior to being implemented, during mission operations, and can also be updated in near real-time with operational performance feedback.",1970
Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML,"In recent years, the manufacturing industry sector has undergone major changes. Better known by the term Industry 4.0, this trend describes the transformation of centrally managed production systems towards decentralized value creation networks. As this leads to a strong increase regarding complexity, engineering such current or future manufacturing systems becomes a difficult task. An example for such a challenging engineering process is the selection of technical implementations fulfilling all requirements and performing the needed functions. In order to support this process, model-based systems engineering (MBSE) and its expressions like model-driven architecture (MDA) proved to be promising approaches. However, semi or fully automated model transformations, which could deal with the aforementioned issue, are still yet widely unexplored in the industrial area. Therefore, this paper introduces an approach transforming the logical architecture of a system into its technical implementation by utilizing AutomationML. As the goal is to perform this step automatically, additional tool support is provided by developing specific software. The results of this approach are thereby evaluated by a real-world case study, which is applied according to the concepts of the Reference Architecture Model Industrie 4.0 (RAMI 4.0).",1970
SysML extensions for safety-critical mechatronic systems design,"Mechatronic systems become widely used as onboard systems with the development of electric and hybrid vehicles, more-electric aircrafts, etc. to achieve critical missions such as the control of these systems. The synergistic aspect of mechatronic systems makes their design challenging to take into account all the interactions among components of different domains. The safety-critical aspect of these systems implies rigorous safety analyses during the design. Consequently, designing such complex systems implies new tools and methodologies to manage the complexity and safety concerns while keeping within short time-to-market and budget constraints. Model-Based Systems Engineering (MBSE) and Model-Based Safety Analysis (MBSA) turn out to be compulsory for the design and safety assessment of complex mechatronic systems. However, they need to be integrated efficiently during the design process to avoid costly late design changes. In order to perform consistent and exhaustive system modeling and safety analysis of safety-critical mechatronic systems, the system model shall be extended to include additional information helping in the generation of safety artifacts. In this paper, we propose some SysML extensions to better model mechatronics specificities such as interconnection components and multi-physical interactions, as well as some safety aspects for a better integration of MBSE and MBSA. These proposals are applied to an Electro-Mechanical Actuator (EMA) for aeronautics industry.",1970
OpenSEAT: A computer framework to jointly model qualitative evaluation and quantitative design aspects of complex sociotechnical systems,"Complex sociotechnical systems and associated “wicked problems” do not have closed loop solutions. For example redevelopment projects that are undertaken to improve sustainability and resilience of urban built infrastructure do not often take into account the livelihoods of the resident population as formal design parameters unless the “mental models” of key stakeholders can relate the physical and human aspects together. Few people have the experience, system understanding, and influence to maintain these relationships throughout the system lifecycle. We would like to formally capture these mental models, but we lack the tools to successfully integrate the quantitative and verifiable physical infrastructure design models with the more qualitative social models that must be evaluated over time. This paper discusses the development of a design tool framework and an associated use case that combines qualitative evaluation and quantitative design aspects of a complex system into a common model-based systems engineering (MBSE) environment. This allows us to develop several new systems engineering paradigms: definition of “system constructs” that represent aggregation of combined physical and social design parameters; representation of multiple contexts in the design artifacts; formal capture of system level conceptual design into a common knowledge environment; and collaborative design tools that span multiple disciplines and differing abstraction levels. The OpenSEAT initiative is utilizing emerging research on software and systems-of-systems engineering methods and tools to design a modeling and simulation framework for data analysis and decision support in such complex sociotechnical systems. The framework supports conceptual models that capture the qualitative analysis of emerging sociotechnical systems and phenomena, which are then used to inform analytical models that can be used to analyze relevant objective measures and relationships of a design in operational use. Many aspects of the tool framework are mature, but projects using the tool framework to actually merge quantitative and qualitative analysis are currently in the conceptual design phases. One current project is developing a novel model representing human capital development in association with emerging technological systems development. The human capital model is then represented in a design tradespace that addresses both physical and social aspects of sustainable and resilient communities.",1970
Reducing the cost and complexity of variant exploration with MBSE & LSP,"Variant exploration is often construed as synonymous with a significant increase in work and a decrease in clarity. Model-Based Systems Engineering (MBSE) has been heralded as a potential solution to streamline the process by supporting exploration of numerous parallel variants within a common multidimensional model. Successful decoupling of variants from their surroundings supports the parallel development of interfacing systems without delay or impediment, thereby permitting the deferment of a final decision on the preferred technology choice. Still, a number of challenges remain. Some have been addressed by previous research, though, not focusing on the effect of variant technology choices in the logical tier, nor on embedding variant management as a native part of the core MBSE model. This paper addresses those challenges via application of Liskov's Substitution Principle (LSP). It defines an MBSE based approach that explicitly documents variance points, identifying their source and scope, and integrates their management into the standard Systems Engineering (SE) workflow. Emphasis is given on providing a pragmatic approach that promotes consistency, visibility, and simplicity. The result is a model that embeds the required information artifacts without adding significant complexity. The proposed strategy does not prescribe excessive variant-specific activities, with the majority of the effort being already part of standard Requirement, Interface, and Logical SE processes. It is tolerant to an iterative approach, and proactively supports concurrent engineering through decoupling.",1970
Internet of Things Canvas for Ideation in Model-Based Product Generation Planning,"Product generation planning deals with the strategic planning of new product generations. An important task of this procedure is to find ideas for new product features based on an existing reference product. In industrial practice, usually technical models of the reference product (e.g. CAD models) are employed in the scope of product feature ideation. However, these models alone do not provide sufficient information for the identification of new Internet of Things (IoT) features. These features require the consideration of the available flows, the utilized communication technologies, and the surrounding System of Systems (SoS). A potential solution for this problem is provided by Model-Based Systems Engineering (MBSE). MBSE provides a holistic system model that describes the logical architecture as well as the environment of the reference product. However, there is a lack of methodological support for the utilization of system models in the scope of strategic product planning. This paper presents a novel method for IoT feature ideation based on the system model of a reference product. The core of this method is the so-called IoT canvas, which constitutes an IoT-specific view on the system model of the reference product. It can be systematically derived from the system model and serves as the starting point for product feature ideation. The presented method was evaluated in the scope of an innovation project with a German manufacturing company and showed high potential for industrial practice.",1970
Towards A Service-oriented Framework for MBSE Tool-chain Development,"This paper proposes a SPIRIT framework supporting model-based systems engineering (MBSE) tool-chain development of advanced cyber-physical systems (CPS) with emphasis on tool integration, process management, automated verification and validation. The core features of the developed MBSE tool-chain include domain-specific modeling to describe CPS development, service-oriented deployment of technical resources (data, model and tool operations) and process management through IT platforms. The framework has two purposes: to support tool-chain development with a systems engineering approach; to promote interoperability of the whole developed tool-chain through a service-oriented approach. The framework covers social, process, information and technical aspects aiming to integrate various related MBSE techniques with tool-chain development. Based on the framework, an MBSE tool-chain prototype is developed, and the flexibility and interoperability are evaluated through a case study.",1970
Development of a Low Powered Wireless IoT Sensor Network based on MBSE,"Nowadays, the trend in System Engineering (SE) is shifting more and more in the domains of Wireless Sensor Networks (WSN) and Internet of Things (IoT) and will reach new height in demand. The complexity of those systems which are fundamentally different from those of the last decades in their own areas and are furthermore growing. To fulfil all requirements in those fields, a wider range of functionalities and components are needed, especially for IoT systems. In the interdisciplinary development, many conflicts occur. Thus, the complexity of the product demands a change of the development process itself. Most approaches lack in aspects of transparency, traceability and continuous development in general. Therefore, a neutral systematic approach is needed, which model-based systems engineering (MBSE) could provide. This paper applied MBSE in the domain of IoT in WSN development. Although MBSE emerged from system engineering/development, it essentially allows any developer in any discipline to understand relations between different system components in the central system model. The stages of this research are not fully developed yet but a high potential is expected. This holistic central system model is described by MBSE with tool, modelling language and method. The most promising modelling language for an interdisciplinary work in a real industrial content is SysML, which will be applied throughout the modelling tool following the RFLP principle of the V-model. These endeavours will then represent our result to show a more transparent continuous traceable solution in comparison with the existing application.",1970
Impact of the MBSE on the design of a mechatronic flywheel-based energy storage system,"The design of a flywheel system for energy storage is herein performed through the Model Based Systems Engineering (MBSE) as an example of mechatronic product development and innovation. Some relevant advantages of the MBSE applied to a material mechatronic system, in some activities, as the requirement analysis, the identification of system capabilities, the definition of architecture and the system validation are identified. Moreover, the paper is aimed at investigating some critical issues arising when the MBSE tools are applied to machine design, being still a domain poorly inclined to exploit this holistic approach. That trend might be related to technical difficulties in assessing an interoperable framework of simulators aimed at dealing simultaneously with functional and physical models. In addition the technology scouting looks poorly connected within the standard SysML diagrams, without introducing some additional charts. A demonstration of the fruitful impact of the MBSE on the machine design is herein proposed, to show some advantages provided as a mechatronic integrated system is conceived and how a complete trade-off analysis could be supported by the MBSE modeling activity.",1970
MBSE Challenges in the Concurrent Preliminary Design of CubeSats: Nanospace Study,"In this paper, the early endeavours of the incorporation of a Model-based Systems Engineering (MBSE) approach to the open-source Nanospace framework is discussed, presenting the challenges that need to be overcome for such an integration. Nanospace is a web application dedicated to facilitate concurrent engineering during the preliminary design phase of CubeSats. CubeSats provide a progression of educational and research opportunities, and have had increased the accessibility to space for non-space fairing nations. CubeSats and their subsystems interfaces have been studied numerous times. Nanospace may benefit from MBSE, as MBSE facilitates knowledge reuse; which could allow a faster design convergence and faster inspection of candidate architectures.",1970
XMI-Based SysML Model Transformation,"With the development and progress of Model-Based Systems Engineering (MBSE), it has gradually replaced the traditional text-based methods and has been widely used. Systems Modeling Language (SysML) is the de facto standard for MBSE approaches. However, there are various SysML-based system engineering modeling softwares, transformation of heterogeneous data from various softwares become an urgent need to meet. Here, we base on the XMI standard and the system engineering modeling software M-Design, achieve transformation from the XMI format file to the objects design according to SysML language. Firstly, we analyze a XMI format file structure, and secondly design a transformation solution according to analysis and SysML standard. After transformation, we compare result project and the original one to check consistency. With this method, heterogeneous data from different software can be communicated easily.",1970
Plant modeling based on SysML domain specific language,"Successful implementation of Model-based Systems Engineering(MBSE) obviously needs a model supporting efficient communication among engineers of various domains. The system modeling language standard, SysML is designed to create MBSE supporting models. However, SysML itself is not practical enough to be used for real-world engineering projects. As SysML is designed for generic systems and requires specialized knowledge, a model written in SysML has a limited capability to support communication between a systems engineer and a subsystem engineer. Our research's main goal is to develop a SysML based plant model integrating most outputs from plant design phases. As mentioned, a standard SysML based plant model is not specific enough to be understood by plant engineers. To make the SysML model more practical, a customized SysML for the plant engineering domain is required. Unfortunately, current researches on SysML Domain Specific Language(DSL) for the plant engineering industry are still on the early stage. So, as a pilot, we have developed our own SysML-based Piping & Instrumentation Diagram (P&ID) creation environment and P&ID itself for a specific plant system, via widely known SysML modeling tool called MagicDraw. P&ID is one of the most important output during the plant design phase, which contains all information for the plant construction phase. So a SysML based P&ID has a great potential to bridge gaps between plant engineers.",1970
Model-Based Interoperability Engineering in Systems-of-Systems and Civil Aviation,"Interoperability is the capability of multiple parties and systems to collaborate and exchange information and matter to obtain their objectives. Interoperability challenges call for a model-based systems engineering approach. This paper describes a conceptual modeling framework for model-based interoperability engineering (MoBIE) for systems of systems, which integrates multilayered interoperability specification, modeling, architecting, design, and testing. Treating interoperability infrastructure as a system in its own right, MoBIE facilitates interoperability among agents, processes, systems, services, and interfaces. MoBIE is founded on ISO 19450 standard-object-process methodology, a holistic paradigm for modeling and architecting complex, dynamic, and multidisciplinary systems-and allows for synergistic integration of the interoperability model with system-centric models. We also discuss the implementation of MoBIE with the unified modeling language. We discuss the importance of interoperability in the civil aviation domain, and apply MoBIE to analyze the passenger departure process in an airport terminal as a case-in-point. The resulting model enables architectural and operational decision making and analysis at the system-of-systems level and adds significant value at the interoperability engineering program level.",1970
Towards a System-of-Systems Architecture Definition enabling Cross-Domain Embedded Vehicle Engineering,"Engineering of vehicular embedded systems is a difficult task, as the ongoing integration of Cyber-physical Systems (CPS) or automation potentials during vehicle development leads to increasing complexity. In particular, to develop current or future Electric Vehicles (EV) is challenging due to different domains to consider while engineering the sub-components of the vehicle itself. Thus, in order to enable a mutual development of vehicular embedded systems on multiple abstraction levels, the Software Platform Embedded Systems (SPES) has been introduced. To cope with the complexity, this framework introduces viewpoints and hierarchy layers in shape of a matrix. However, while additionally multiple domains have to be considered when developing an EV, the SPES methodology is also missing specifications, impeding its application in actual industrial scenarios. To deal with both of the mentioned issues, this paper introduces an approach for Model-based Systems Engineering of electric vehicle systems based on SPES. By doing so, this framework is further refined by an architecture definition based on the ISO 42010 and a corresponding development process. By utilizing the EV use case, the outcome is thereby validated towards its industrial feasibility, which will enhance the applicability of SPES on the one hand and contribute to the Automotive area by dealing with the increasing complexity while engineering vehicular embedded systems on the other hand.",1970
Development of System Alternatives using Generative Engineering,"The success of a company increasingly depends on its ability to master the development of highly complex systems while remaining creative and innovative. To manage the rising complexity of cyber-physical systems, Model-Based Systems Engineering (MBSE) has become a powerful approach. In MBSE systems can be abstracted by four system levels: (1) Requirements, (2) Functions, (3) Solutions and (4) Product. Each of these levels may provide alternatives to the system. The entire collection of alternatives within the solution-level (3) forms the solution-space and provides any possible solution of a system or a subsystem. Due to the dependencies between requirements, functions and solutions, to develop the entire possible solution-space of a system, the alternatives of each system level have to be combined. By analysing this entire solution-space and determining the global optimum regarding a certain indicator, e.g. cost, weight or sustainability, innovations can be achieved. Due to the high complexity of modern systems, the number of alternative systems is enormous and the identification of all alternatives is an extensive work as no alternative should be missed for a complete evaluation. Generative Engineering (GE) is an engineering approach that generates all possible alternatives of a specified system automatically. This paper will evaluate the capability of using GE to identify alternatives in systems, which are developed with the approaches of MBSE. It focuses on the generation of alternatives in the layer of functions and in the layer of solutions. The presented approach shall save a lot of time in the process of identifying alternatives in order to create a complete solutions space. This might help in the identification of global optimums and innovations.",1970
Extracorporeal Membrane Oxygenation (ECMO) - A systems of systems engineering characterization,"Extracorporeal Membrane Oxygenation (ECMO) is a vital lifesaving therapy. Though it has achieved approximately 75% survival rates for patients starting with less than a 25% chance of survival, ECMO was not designed and implemented in a rigorous engineering process. This paper will introduce a Systems of Systems (SoS) Engineering approach to characterizing the ECMO architecture and formally documenting it using Model Based Systems Engineering (MBSE), developed in a partnership between Children's Healthcare of Atlanta (CHOA) and the Georgia Institute of Technology's Professional Masters of Applied Systems Engineering (PMASE) program. Finally, the authors will describe possible areas of future work that may be undertaken as projects for future PMASE cohorts or others. The primary and unique contribution of this work is an initial application of formal MBSE to one of the most complex medical system of systems.",1970
A Practitioner’s Guide to Optimizing the Interactions Between Modelers and Domain Experts,"As model-based approaches to Systems Engineering (SE) grow in popularity, the dynamic information exchange between modelers and domain experts is becoming a more common form of engineering collaboration. Typically, modelers and domain experts do not possess much shared knowledge at the beginning of a domain modeling effort, and gradually learn from each other throughout the process. This paper presents a set of Model-Based Systems Engineering (MBSE) practitioner-based techniques that modelers and domain experts can use to have more efficient and effective interactions during model development. The techniques are presented in the context of existing literature, and further validated by the results of an exploratory survey given to MBSE practitioners, thereby forming the basis for a more standardized process of multidisciplinary knowledge sharing than exists today. The intent is that a team of modelers and domain experts could then apply these practical techniques to their project to reduce the cost of multidisciplinary translation, enabling faster model development while promoting model quality: readability, accuracy, and completeness.",1970
"Augmenting MBSE with Digital Twin Technology: Implementation, Analysis, Preliminary Results, and Findings","Model-Based Systems Engineering (MBSE) requires more significant investment than traditional systems engineering in the early system life cycle phases. Program management justifies this additional investment by arguing that such investments can be expected to produce continuous gains across later phases of the systems life cycle resulting from early detection of defects, risk reduction, improved communication, superior supply chain integration, product line definition, and enhanced traceability. Since systems continue to evolve over their life cycle, system models need to be updated continually to reflect the system's current state and thereby sustain value. However, in today's systems engineering organizations, the current practice is to reallocate modeling resources to other projects once initial modeling on a particular project is completed. This practice results in a resource shortfall that impedes the ability to continuously update system models through the later phases of the system life cycle. This paper presents how digital twin technology can be exploited within MBSE to ensure continuous model updates throughout the system life cycle. This paper also presents preliminary results from prototyping and experiments conducted with a digital twin that is continuously updated with data from the physical system operating in the real world. Finally, this paper shows how operational analysis and system modeling can be significantly enhanced by leveraging digital twin technology within MBSE.",1970
Integration of different MBSE approaches within the design of a control maintenance system applied to the aircraft fuel system,"The design of a Control Maintenance system (CMs) for an airborne platform deeply deals with the mission, the on-board systems interfaces and the identification of their behaviour in operation. This paper describes how the Model Based Systems Engineering (MBSE) was applied to an industrial test case to perform the functional design of an innovative CMs to be integrated with the aircraft Fuel system (Fs). The impact of different approaches applied when modelling the two systems and their integration through the SysML was investigated. As the IBM Rational Rhapsody® tool was used, the Harmony® methodology was applied to the CMs, while a MBSE customized approach was implemented for the Fs, even to cope with some differences in coupling an avionic system to a physical one.",1970
"Automated Generation of FMEAs using SysML for Reliability, Safety, and Cybersecurity","In this paper, an automated FMEA generation capability using the SysML modeling language and described its application to a simple SCADA computer network was described. The outputs produced by the tool (implemented as a SysML plug-in) from this analysis were presented, and the resultant insights into the design were described. The fundamental innovation in our approach is the identification and enumeration of all failure propagation paths and the detailed documentation of the failure transformations, detection measures, mitigation measures and protective measures that can be applied to these devices to prevent or mitigate the impact of the anomaly. By doing so, we can expand the traditional FMEA approach to analysis of cyberattack vectors. Because our approach is automated and can be readily integrated into a system development effort using Model Based Systems Engineering (MBSE), the analysis can be readily repeated throughout the design and can be used frequently to assess a system design, identify weaknesses, and take corrective actions to create a more resilient and robust system.",1970
Transformation from System model to FACE data model based on metadata mapping,"Aiming at the problems of long development cycle, poor reusability and portability in avionics software development, this paper proposes a development process based on MBSE(Model-based systems engineering) and FACE(future airborne capability environment) architecture. At the same time, the differences between SysML model and FACE data model lead to the incoherence of development process. Therefore, the mapping transformation method from SysML model to FACE data model is designed based on metadata model mapping Law.",1970
Bridging the Gap between OpenMBEE and Git,"Git and its workflows as well as best practices are the de-facto standard in the Software Engineering world. Can we leverage those concepts for Model-Based Systems Engineering (MBSE)? How could a Git “enabled” OpenMBEE approach look like? Branching and merging are core capabilities in agile methods, and thus, are required for agile MDSE. Dedicated tools for supporting these capabilities for models based on Git have been proposed recently, but their integration within a tool chain consisting of several heterogeneous tools is still a challenge. Therefore, in this paper, we will discuss how ideas and tools from OpenMBEE can be leveraged to enable working with Git in MDSE without losing the capabilities provided by OpenMBEE/MMS Backends.",1970
ATLaS: A Framework for Traceability Links Recovery Combining Information Retrieval and Semi-Supervised Techniques,"Current Model-Based Systems Engineering (MBSE) practices to design and implement complex systems require modeling and analysis based on many representations: structure, dynamics, safety, security, etc. This induces a large volume of overlapping heterogeneous artefacts which are subject to frequent changes during the project life cycle. In order to verify and validate systems requirements and ensure that models meet user's needs, MBSE techniques shall rely on consistent traceability management. In this paper, we investigate the benefits of Information Retrieval (IR) techniques and the latest advances in Natural Language Processing (NLP) approaches to suggest stakeholders with candidate semantic links generated from the processing of structured and unstructured contents. We illustrate our approach called ATLaS (Aggregation Trace Links Support) through an application on the design and analysis of a mobility service gathering several industrial partners. We provide an empirical evaluation regarding its limitations as part of an industrial MBSE process. Most importantly, we highlight how our method drastically reduces the false positive links generated compared to current IR techniques. The results obtained suggest a good synergy between the presented approach and MBSE techniques.",1970
Anticipatory capacity: Leveraging model-based approaches to design systems for dynamic futures,"The paper presents a vision for enhancing anticipatory capacity of engineering organizations, with a goal of enabling the design of systems that can deliver sustained value as the world changes. Anticipatory capacity is the capacity of an organization to continuously develop and apply knowledge acquired through a structured approach to anticipate changing scenarios as needs and context change over time, While anticipation has always had a role in designing systems; the availability of model-based methods has significant implications. Anticipatory capacity extends from three key elements: competencies, methods, and a model-based environment. The paper discusses ongoing and planned research in support of establishing anticipatory capacity in organizations by leveraging the opportunities of model-based engineering.",1970
Collaborative work with Software Models - Industrial experience and requirements,"When the initial problems of introducing and adopting model-driven development in a company have been handled, we want to go to work. That means that we have to supply our team of developers with a development environment and tools and processes that allow them to work efficiently. In many cases the team would like to work with models as if it was ldquojust another programming languagerdquo and use the same techniques and processes for team collaboration and coordination they are used to from traditional development. Unfortunately some of the traditional tools and processes that work so well for traditional development do not work at all for model-driven development. Version control functionality is usually a key part in coordinating the parallel work in a team and through a set of use cases, we arrive at a number of requirements to a model-driven development environment that must be available for a team of developers to work efficiently.",1970
Practicing modelling in manufacturing,"This paper is about understanding modelling practices in manufacturing and contribute in methodologies and approaches facilitating introduction of modelling in a company. Based on ethnographic studies at real work environments and scenario-building workshops, we could identify and analyse several issues like how to involve and engage domain workers in modelling activities, that there are four different levels of formal and informal models (paper-based, table-based, non-executable and executable), that domain workers are first of all interested in the first two levels especially to support product design. Furthermore, modelling of products and processes are interlinked, and different approaches to modelling must be supported and encouraged in an enterprise to enable participation of domain workers in modelling activities.",1970
Efficient recognition of finite satisfiability in UML class diagrams: Strengthening by propagation of disjoint constraints,"Models lie at the heart of the emerging Model-driven Engineering approach. In order to guarantee precise, consistent and correct models, there is an urgent need for efficient reasoning methods for verifying model correctness. This paper extends and strengthens our previous work on efficient recognition of finite satisfiability problems in UML class diagrams with constrained generalization sets. First, algorithm FiniteSat is simplified into a single stage process, yielding a more compact linear inequality system. The main contribution of the paper is a method for propagation of disjoint constraints within complex class hierarchy structures, which meaningfully extends the scope of the FiniteSat algorithm. The method relies on a thorough analysis of the interaction between disjoint constraints and the structure of class hierarchy. It is recommended as a pre-processing stage, and being an anytime algorithm, even partial application is useful.",1970
Achieving flexibility in business process modeling using an algebraic language,"Companies nowadays are under increasing pressure to adapt their business processes to the ever-changing business environment. However, most traditional business process modeling (BPM) methods lack enough flexibility. It is hard to extract and reuse information and knowledge embedded in the existing business process models to build new models. We propose an algebraic framework based on a many-sorted algebra, algebra of system (AoS), to achieve the flexibility in business process modeling. We decompose business process models into different modules of knowledge and encode them as different algebraic domains of AoS. Within each algebraic domain, knowledge is encoded as operands. Based on operands, each algebraic domain is equipped with operators to provide computation capabilities. The operands and operators ensure the flexibility that the framework can achieve and the analysis capabilities that the framework can provide.",1970
OPM model based simulation environment for systems engineering conceptualization phase,"Conceptual design is a crucial system lifecycle stage, but systematic methods for conceptual design evaluation are not well-developed and existing approaches are not satisfactory. In this work we describe implementation and assessment of an advanced simulation environment that can serve conceptual design evaluation purposes using object-process methodology (OPM). The simulation exploits two major advantages of the OPM modeling language: its integration of the structural and behavioral aspects of the system in a single type of diagram and the hierarchical organization of the model diagrams. The simulation of the system model is instrumental in understanding and exploring the behavioral aspects of the system under study and uncovering logical and conceptual problems, such as incorrect control flow and missing structural relations among objects. The latter is achieved via an intuitive user interface and a host of debugging capabilities, including ldquolifespanrdquo and ldquoDebug Infordquo components. Using these components, one can explore the state of any OPM entity and be aware of a variety of potential problems that are manifested during the simulation process.",1970
Adapting Progressive MBSE Development to Document Based Contracts,"Every new program executed by BAE Systems Space Systems continues to improve and mature the Model Based Systems Engineering (MBSE) development position. While the benefits of MBSE are realized internally, each program is forced to regress to a legacy document-based structure for customer interaction and contract deliverables. Until there is a paradigm shift in how contracts are fulfilled, there will be a need to adapt the model to traditional document deliverables. This paper discusses the challenges of adapting Model Based System Engineering models and development processes with legacy document based contracts through document representation within the model combined with document exportation. BAE Systems has embraced Model Based Systems Engineering since 2016 and continues to expand its application. Satisfying document-based deliverables without duplication of effort and information is essential to continue the rapid adoption of Model Based Systems Engineering.",1970
Agile modeling of an evolving ballistic missile defense system with Object-Process Methodology,"Evolution of requirements and systems has led to the proliferation of agile development as a matter of course in the current technological landscape. The rate of change poses a significant dilemma to stakeholders regarding the amount of effort and resources they should invest in methodological practices, including modeling, design, analysis, and specification. The attempt to move quickly from concept to operation often leads to preference of expedience for gaining early time-to-market over quality and robustness. Rather than referring to the modeling vs. agility challenge as a dilemma, we perceive it as an opportunity for synergy. Building on Object-Process Methodology (OPM)-the new ISO-19450 standard, we propose an agile model-based systems engineering (MBSE) framework that facilitates, and fosters development agility and system evolution. This agile MBSE framework extends the traditional scope of system modeling to cover aspects of functional and structural evolution, phase transition, deployment feedback, and configuration interdependence. We demonstrate the applicability of agile MBSE on a hypothetical ballistic missile defense system, based on publicly available information on Iron Dome - an Israeli ballistic missile defense system with proven operational capability.",1970
V2X Communication Based System Development: Application on Intersection Assist with Co-Simulation,"Due to a greater demand for driving safety, vehicle-to-everything (V2X) communication studies has grown up. In this study, intersection assist (IA) function is developed to establish V2X communication in a vehicular network. Various tools are integrated into the co-simulation environment to execute the simulation. The main goal is to simulate different communication types, such as vehicle-to-vehicle (V2V) and vehicle-to-infrastructure (V2I), so several scenarios are created to simulate V2X communication. In Simulation of Urban Mobility (SUMO), simulations are performed for the given scenarios which are based on model-based systems engineering (MBSE) approach. Controllers are built in Simulink and used to control vehicles in SUMO, while Virtual Test Drive (VTD) is used to visualize the simulation in a 3D environment. Model.CONNECT™ is used to run each of these several tools simultaneously. MBSE section of this paper addresses the first major steps of system specification which are use case generation and requirement elicitation. Afterwards, specified use cases and requirements are modeled with systems modeling language (SysML) diagrams. The developed methodology shows that MBSE provides highly efficient advantages for the design of complex systems in terms of utilizing interconnectedness and traceability. Additionally, V2X impacts on the IA is analysed.",1970
An Authoritative Source of Truth System for UCAV Conceptual Design,"Model-Based Systems Engineering (MBSE) is a part of a long-term trend toward model-centric approaches. The Authoritative Source of Truth (AST) is a crucial step of digital transformation and a core component of MBSE. Benefits include help design teams shorten the design cycle, improve design efficiency, and ensure the accuracy of design models and data compared to traditional document-based co-design methods. Data-driven design is a new direction of Unmanned Combat Aerial Vehicles (UCAV) design, and UCAV is the main force of future air warfare. How to build a UCAV conceptual design AST system is a problem that needs to be solved. We design an AST construction methodology, develop an AST system by applying the methodology, and use the UCAV concept design case to test the usability of the AST system. More specifically, the methodology includes construction goals and objects, basic construction methods, AST architecture, collaborative construction methods, dynamic management methods, basic functions and derivative tools required. In addition, the validation process is requirement analysis, functional architecture design, scheme design, and dynamic management validation. The AST system can help the implementation of MBSE in the field of aircraft design. The AST system can also help meet the requirements of the conceptual design stage, which shows the feasibility of the construction methodology’s integrity. If the AST system is used in the aircraft’s detailed design phase, further models and data will be required, and the AST system will need to be upgraded.",1970
Developing a CubeSat Model-Based System Engineering (MBSE) reference model — Interim status #2,"Model-Based Systems Engineering (MBSE) is a key practice to advance the systems engineering discipline. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) Challenge Team has been investigating the applicability of MBSE for designing CubeSats since 2011. The goal of the team is to provide a sufficiently complete CubeSat Reference Model that can be adapted to any CubeSat project. The INCOSE Systems Engineering Vision 2020 defines MBSE as “the formalized application of modeling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later life cycle phases.” At the core of MBSE is the development of the system model that helps integrate other discipline-specific engineering models and simulations. The team has been creating this system model by capturing all aspects of a CubeSat project using the Systems Modeling Language (SysML), which is a graphical modeling language for systems engineering. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system level down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. In the past three phases of the project, the team has created the initial iteration of the reference model, applied it to the Radio Aurora Explorer (RAX) mission, executed simulations of system behaviors, interfaced with commercial simulation tools, and demonstrated how behaviors and constraint equations can be executed to perform operational trade studies. The modeling effort starts anew in this fourth phase. The CubeSat Reference Model starts with an identification of potential stakeholders. A stakeholder is any entity that has an interest in the system including sponsor, end user, procurer, supplier, and regulatory agencies. The each stakeholder's needs, objectives, constraints, and measures of effectiveness are incorporated in the model. Constraints are those items fixed and not subject to trades such as mission budget and schedule. One of the stakeholders is the Cal Poly CubeSat project. The Cal Poly CubeSat Specification has been populated into its own SysML model to enable the content of the specification to be related to the CubeSat Reference Model. The CubeSat mission enterprise consists of the space system, ground system, launch services, launch vehicle interface system, and communication services. Since the reference model is being developed by a team effort, there is an obligation to protect the investment of time and knowledge of each team member. There also needs to be a licensing environment that is conducive to a user organization supporting the development of and use of the model. There will be a license that allows for non-commercial use and prohibits incorporating the model or model features into a commercial product.",1970
Configuration and Data Management of the NASA Power and Propulsion Element MBSE Model(s),"Systems engineers worldwide have been working to implement Model-Based Systems Engineering (MBSE) environments, tools, and methodologies. A significant, expected benefit from MBSE is a reduction in the time commitment for all aspects of systems engineering. Although advances in MBSE have occurred, a gap has emerged between the traditional configuration management (CM) processes for documents and those needed in an MBSE environment. MBSE is a tool to support systems engineers in requirements, design, analysis, verification, and validation activities from concept phase throughout the life cycle of the project. MBSE is not a new process being added to the existing SE processes, but captures the data that systems engineers create into a single environment. Systems engineers working in an MBSE environment have become more efficient and produce a higher resolution of data because elements representing the system of interest are placed within a single construct where requirements, architecture (physical & logical), and concept of operation scenarios are all related to one another. Historically, systems engineers capture and track system information through the generation of documents, drawings, and other artifacts, which are released, baselined, and governed by a document-centric CM process. The work required to maintain and distribute documents throughout the system life cycle using the traditional CM processes is a time-consuming task for both systems engineers and CM practitioners alike. The MBSE environment requires adaption of traditional CM processes or the creation of entirely new CM approaches in order to 1) manage the MBSE model output in data or documents and 2) perform CM within the actual digital model. Systems engineers and CM personnel from the Power and Propulsion Element (PPE) Project at NASA Glenn Research Center have developed and are continually improving a method for baselining and configuration-managing technical content within the PPE MBSE model(s). This paper describes the process of defining how to configuration manage not just the artifacts but the requirements, verifications, and functional decomposition of an MBSE model for an evolving project. The paper also presents the results of trial and error testing, required adjustments to CM processes, and lessons learned from developing CM processes for the PPE system-level requirements and generating procurement artifacts. While developed for the MBSE environment, these processes still address standard CM activities such as protecting NASA-sensitive and partner proprietary information, baselining content, processing change requests, and providing configuration status accounting.",1970
The Study of Design Resource Management and Sharing System Construction in Aviation Product MBSE Environment,"In order to meet the needs of Model-Based Systems Engineering (MBSE) development for aerospace products, a flow-driven R&D resource management and sharing mode was explored based on the existing MBSE design environment of the enterprise. In this way, resource management and sharing system can be constructed to realize collaborative development based on design process and resource fusion and sharing, and improve product development efficiency and innovation ability.",1970
Towards Round-trip Engineering to evolve Complex Production Systems by utilizing AutomationML,"Additive manufacturing and product configurations will become increasingly important in future production systems. This trend brings great opportunities for manufacturing companies, but also inherits challenges to overcome. Resulting from this, a heterogeneous tool-landscape has emerged, where each of the single tools is addressing a particular aspect of the value-creation network. An example for such a tool specifically targeting the engineering of such flexible production systems according to the Reference Architecture Model Industrie 4.0 (RAMI 4.0) has been proposed with the RAMI Toolbox. However, as universal frameworks are too general to deal with all aspects of developing such complex systems, other possibilities for conflictfree engineering of the system need to be available. Thus, the main contribution of this paper deals with proposing a Round-trip Engineering (RTE) approach, that allows to export previously modeled flexible production systems according to the peculiarities of RAMI 4.0 and subsequently reload external elaborated results. Thereby, a major benefit is the application of Model-based Systems Engineering (MBSE), which ensures the traceability to the remaining system components. The chosen methodology for bidirectionally exchanging the engineering data is AutomationML, which allows to store exported information from RAMI 4.0 or import such stored information into it. The RTE-approach is thereby evaluated with a real-world case study, the Siemens Fischertechnik industrial plant model.",1970
Cognitive Thread Supports System of Systems for Complex System Development,"Model-based Systems Engineering (MBSE) has been widely used in the development of complex systems. The system architectures, organizations, research and development processes using MBSE to design complex systems can be seen as a System of Systems (SoS), which has high complexity and hard to manage. The concept of digital thread is proposed to integrate all the models and data in the SoS. However, lack of cognition ability makes it hard to connect the models and data with human, processes and things in the SoS, which reduces the efficiency of complex system development. In this paper, a new concept named Cognitive Thread is first proposed as digital thread with augmented semantic capabilities for identifying the information of the SoS. Then a cognitive thread construction approach based on Open Services for Lifecycle Collaboration (OSLC) specification and knowledge graphs is proposed to support decision-making and management in the SoS. Finally, the feasibility of the proposed approach is verified through a case study of the advanced driver-assistance system development.",1970
An MBSE-based approach for the analysis of requirements towards engineering IT architectures,"Products are currently changing since various drivers increase complexity, e.g. digitalization. This does not only apply to systems, but also to engineering itself with its processes, methodologies and tools. On the one hand, approaches like Model-Based Systems Engineering or virtual verification and validation demonstrate that digitalization has the effect of demanding computer-interpretable and continuous sets of information. On the other hand, the approaches themselves require new functionalities regarding the engineering IT and thus raise new requirements. This paper presents a systematic approach to identify and analyze the requirements towards an engineering IT architecture. The approach is model-based and comes with modeling guidance and a meta-model to support the analysis.",1970
"A conceptual, methodological and technical contribution for Modeling and V&V in MBSE context","The role of modeling, verification, and validation, even not new in Systems Engineering, is increasingly highlighted as crucial expectation in Model Based System Engineering context (MBSE). However, some difficulties, needs, and locks must be considered to allow MBSE to grow in capabilities and maturity. This article clarifies some fundamental expectations for MBSE and proposes research findings to address some of the MBSE practitioners’ needs more precisely.",1970
Reuse in model-based systems engineering,"In model-based systems engineering, systems are built as models. Models are abstractions, since they are not the real physical parts, but a data representation of then in a computer. As such, it is tempting to establish a methodology and a system in which models can be shared among projects. When an engineer creates new models of components in a new project, her past experience in making similar components, as well as that of her colleagues, can be easily reused since no physical limitations get in the way. Models in our case are actually mathematical equations. Yet, the wide variety of design tools makes it difficult to take an existing component model created in one tool and reuse it in another. This problem is often classified as `tools interoperability' where models need to be shared among tools. Scenarios which give rise to such needs occur when teams collaborate on the same project, but belong to different organizations or different disciplines. Yet, the advantage of reuse is very obvious and presents a certain use case for interoperability. Our scenario would be a systems engineering organization that needs to support reuse in its design work. Our use-case would be different than the problem of product-lines. There, components are designed for ease of customization to match different, but similar requirements, while sharing one source that can be varied towards multiple different outcomes. Here, reuse can be applied too over a design for a product-line. Internet of Things (IoT) and design patterns will be looked at as well to be proper candidates to benefit from the approach to reuse as will be presented in this paper.",1970
Towards Standards-based Execution of System of Systems Models,"The ongoing transformation in the industry from a document-based systems engineering to a model-based systems engineering approach reveals a need for new methods of capturing and analyzing knowledge about the system. Moreover, complex real-life problems require the application of MBSE practices to enable evolving systems to communicate independently to achieve a common goal. This is the level of system of systems. At this level similar standardized model- based approaches are used to capture knowledge; however, most analysis is far from being standards based. Most of the tools provide proprietary approaches to analyze a system of systems. Is there a way to apply a standards-based approach to execute engineering analysis and behavioral simulation on a system of systems model? This paper describes the research used to answer this question.",1970
Incorporating Hardware-in-the-Loop Simulation into Object-Process Methodology,"We have designed and developed a way to incorporate Hardware-in-the-Loop (HIL) simulation into Model-Based Systems Engineering (MBSE) using Object-Process Methodology (OPM) ISO 19450. Implementing the HIL simulation in OPCloud, an OPM cloud-based conceptual and computational modeling framework, has enabled us to demonstrate industrial-strength capabilities. We describe the architecture of this OPM-HIL combined system and report on results with a real case study, in which the modeling encompasses stages starting with conceptual design and ending with HIL simulation and testing. This combination can serve as a basis for a model-driven systems operating system.",1970
Integrating Safety into MBSE Processes with Formal Methods,"Emerging segments such as Urban Air Mobility require new safety-critical avionic systems. The complexity of these avionic systems has ever been increasing, but even more rapidly in the last two decades in form of the number of components, functions, and interactions. At the same time, demanding time-to-market requirements have to be adhered to by development companies. To cope with these challenges, agile development approaches are required that guarantee safety-by-construction. This paper presents an endeavor to tackle these challenges by holistic utilization of Model-based Systems Engineering, System-Theoretic Process Analysis, and formal methods. The approach is demonstrated in a use-case that analyzes a simplified Collision Avoidance System architecture. Results show that the presented approach is able to improve the development by automating and validating error-prone tasks of the safety assessment.",1970
MBSE analysis for energy sustainability improvement in manufacturing industry,"With the ever increasing complexity of Industry 4.0 systems, plant energy management systems developed to improve energy sustainability become equally complex. Based on a Model-Based Systems Engineering analysis, this paper aims to provide a general approach to perform holistic development of an autonomous energy management system for manufacturing industries. This Energy Management System (EMS) will be capable of continuously improving its ability to assess, predict, and act, in order to improve by monitoring and controlling the energy sustainability of manufacturing systems. The approach was implemented with the System Modeling Language (SysML).",1970
Evolution of the Automotive Reference Architecture Model towards a Domain-Specific Systems Engineering Approach,"Due to the rising complexity in the automotive domain a suitable modeling framework to facilitate development as well as interdisciplinary communication is needed. In the domain of smart grids, the Smart Grid Architecture Model (SGAM) framework turned out to be a suitable tool for coping with complexity whilst providing cross-disciplinary understanding. A similar approach exists for the automotive domain: the Automotive Reference Architecture Model (ARAM) framework. As opposed to other automotive frameworks, this one offers interoperability with the smart grid framework, which simplifies cross-domain collaboration. During the development of ARAM, the Software Platform Embedded Systems (SPES) methodology gained momentum. This methodology can be considered an architectural model while the automotive framework can be considered an analysis model, according to the domain-specific systems engineering approach. In order to follow this approach, a transformation between the two models must be possible. This work-in-progress paper aims at presenting first approaches of an adapted version of the ARAM framework, proposing a reworked structure that is compatible with both, SGAM and SPES.",1970
Deploying MBSE in SME context: revisiting and equipping Digital Mock-Up,"The deployment of Model Based System Engineering (MBSE) in the context of Small and Medium-sized Enterprises (SMEs) have numerous benefits, among others, to face growing product complexity and market evolution. However, deploying MBSE based on classical standards such as the ISO 29110 can become an overly burdensome process that does not appropriately meet the needs of the SME in terms of SME culture, organization, expectations, resources, skills and tools, as well as in assuring the digital continuity of SMEs. This article proposes an approach for an eased, accelerated and successful deployment of MBSE in SME context based on the Digital Mock-Up concept.",1970
"The Model Fidelity Hierarchy: From Text to Conceptual, Computational, and Executable Model","Model-based systems engineering applies a variety of model kinds, each with its own fidelity and exactness level. Based on experience we gained while modeling an aircraft landing gear with the objective of numerically defining its various parameters that fulfill engineering and safety requirements, we present the model fidelity hierarchy (MFH). At this hierarchy's bottom, vaguest level, is spoken language, followed by free written text, conceptual model, its augmentation with computational capabilities, and finally an executable version of that model. Using object-process methodology (OPM ISO 19450) with its computational extension, we present this hierarchy by describing the landing gear model as it progresses through these levels, and the kinds of mistakes revealed while transitioning from one level to the next. The MFH, identified and defined in this article, is made possible by using OPM, which enables these level transitions to be information lossless, providing the most value while requiring the minimal effort. The ability of this continuous, seamless modeling approach to detect errors with increasing accuracy justifies our OPM approach, as errors revealed in this early system lifecycle stage are exponentially less costly to correct than those revealed downstream.",1970
A Knowledge Based System architecture to manage and automate the electrical machine design process,"The rotating electrical machine industry is known for the optimal development of solutions through the experience of manufacturers, and its competitiveness is based on serial production that amortizes initial design efforts. The new concept industry 4.0 is a great opportunity to improve the competitiveness in a global market for small-medium size electric machinery companies. Therefore, it is mandatory these companies adopt new technologies offering customized products fulfilling the customers' requirements according to their investment capacity. To support the aforementioned issue, a new Knowledge-Based System (KBS) model for electrical machine design is introduced. This model socalled GSMWV2 stands for the steps of Gather, Standardized and Model the knowledge with the Wrapper process and the two Verein Deutscher Ingenieure (VDI) methodologies integration VDI-2221 and VDI-2206. It comprises the electrical machine development methodology and the knowledge integration process. This paper will conceptually describe this model and the integration of current industrial technologies such as Model-Based Systems Engineering (MBSE), Project Lifecycle Management (PLM), Project Data Management (PDM), multiphysics and analytic tools co-simulation with KBS tools. This architecture will be able to manage and automate tasks in the development process of electrical machines with emphasis on the design process.",1970
DEVS-Based Simulation for Search and Rescue Missions Involving Multiple UAVS,"Using Unmanned Aerial Vehicles (UAVs) for searching for targets is a complex problem whose applications range from military operations (e.g. targets localization or border surveillance) to civil missions (e.g. mountain or sea rescue). Simulations of real-world operations play an important role in determining the best search strategies to be used. The high number of elements involved in the problem makes real-time simulations an useful tool for system elements coordination, data handling confluence, etc. Model-Based Systems Engineering (MBSE) principles can also be exploited to define the behavior of the whole system from the behaviors of its elements. This paper presents a Discrete Event System Specification (DEVS) modular and hierarchical architecture for simulating real-world target-search scenarios that enhances the adaptability, reusability and scalability properties of our system. The simulations show the benefits of our architecture, which allows to automatically profile and straightforward evaluate different models to select the best alternative.",1970
Developing a CubeSat Model-Based System Engineering (MBSE) Reference Model - interim status,"Model-Based Systems Engineering (MBSE) is a key practice to advance systems engineering that can benefit CubeSat missions. MBSE creates a system model that helps integrate other discipline specific engineering models and simulations. The system level model is initiated at the start of a project and evolves throughout development. It provides a cohesive and consistent source of system requirements, design, analysis, and verification. The International Council on Systems Engineering (INCOSE) Space Systems Working Group (SSWG) established the Space Systems MBSE Challenge team in 2007. The SSWG Challenge team has been investigating the applicability of MBSE for designing CubeSats since 2011. Our application of MBSE uses System Modeling Language (SysML), a graphical modeling language. SysML is used to model all aspects of a system either directly or through an interface with another model. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system down to the component level. The first phase of SSWG CubeSat project created a CubeSat reference model that was applied to the Radio Aurora Explorer (RAX), a three-unit CubeSat developed by SRI International and the Michigan Exploration Laboratory at the University of Michigan. The second phase focused on expanding the RAX CubeSat model to include modeling behaviors and interfacing with several Commercial Off the Shelf (COTS) simulation tools. The third phase was comprised of two activities. The first was the development of a CubeSat Enterprise Model to capture cost and product Iifecycle aspects for the mission spacecraft and problem domain. The second activity incorporated additional design and operational characteristics into the RAX model. The modeling effort starts anew in this fourth phase and has two objectives: 1) Develop a CubeSat Reference Model that other projects can use as a starting point for their mission specific CubeSat model. The space and ground systems, subsystems, and components are being modeled throughout the entire project Iifecycle. 2)Develop a CubeSat Project Model that models how CubeSat design and development are to be accomplished. The first objective is in response to: ""Model-based systems enj!ineerinj! (MBSE) is the formalized application of modelinj! to support system requirements, desij!n, analysis, verification and validation activities bej!inninj! in the conceptual desij!n phase and continuing throughout development and later life cycle phases."" The second objective is in response to: ""A MBSE methodology is a collection of related processes, methods, and tools used to support the discipline of systems engineering in a 'modelbased' or 'model-driven' context."" The effort to date has been focused on establishing nomenclature; the incorporation of the stakeholders and their needs, objectives, measures of effectiveness; and the architecture down to the logical subsystems. The next step is to determine the level of model definition at each of the Iifecycle stages and to create models for the concept and development phases. The CubeSat Reference Model will be rolled-out in a controlled fashion to make certain that model is understandable and useful. The requests and applications of the model have fallen into two categories: 1) Using the model within an aerospace engineering course and 2) evaluating the application of MBSE within an aerospace program.",1970
MBSE-driven visualization of requirements allocation and traceability,"In a Model Based Systems Engineering (MBSE) infusion effort, there is a usually a concerted effort to define the information architecture, ontologies, and patterns that drive the construction and architecture of MBSE models, but less attention is given to the logical follow-on of that effort: how to practically leverage the resulting semantic richness of a well-formed populated model to enable systems engineers to work more effectively, as MBSE promises. While ontologies and patterns are absolutely necessary, an MBSE effort must also design and provide practical demonstration of value (through human-understandable representations of model data that address stakeholder concerns) or it will not succeed. This paper will discuss opportunities that exist for visualization in making the richness of a well-formed model accessible to stakeholders, specifically stakeholders who rely on the model for their day-to-day work. This paper will discuss the value added by MBSE-driven visualizations in the context of a small case study of interactive visualizations created and used on NASA's proposed Europa Mission. The case study visualizations were created for the purpose of understanding and exploring targeted aspects of requirements flow, allocation, and comparing the structure of that flow-down to a conceptual project decomposition. The work presented in this paper is an example of a product that leverages the richness and formalisms of our knowledge representation while also responding to the quality attributes SEs care about.",1970
MBSE Applications for the MSR SRC Mars Ascent Vehicle,"The objective of the NASA Mars Sample Return (MSR) Campaign is to collect samples from the surface of Mars and return them to Earth for scientific research. The Mars Ascent Vehicle (MAV) will be integrated into a larger Mars Sample Retrieval Lander (SRL) for transit to and storage on Mars. After all Martian samples have been collected and loaded into the MAV payload assembly, MAV will deliver the samples from the Martian surface to Mars orbit. A separate spacecraft, the Earth Return Orbiter (ERO) will retrieve the samples from Mars orbit and return them to Earth. To address common systems engineering challenges associated with using traditional systems engineering practices on complex projects, the MAV systems engineering team has explored implementation of Model-Based Systems Engineering (MBSE) tools and languages. This paper describes the current state of implementation and development of the MAV MBSE model with the Systems Modeling Language (SysML) within the scope of the MAV Systems Requirement Cycle (SRC) systems engineering workflow. The MAV MBSE model has been developed within Magic Draw – a SysML editor commonly used to implement MBSE. The MAV MBSE model has been used to develop mission phase functional flow diagrams for the Concept of Operations, decompose mission to vehicle subsystem functions, develop a functional decomposition, derive functional requirements, trace requirements up to customer-imposed requirements, trace requirements within MAV requirement space, identify requirements trace gaps, define and map the physical design space architecture, allocate requirements to subsystems, develop validation items, define assembly, integration, and test (AI&T) operations, and trace these items across driving goals to develop an integrated digital thread of systems engineering information used to drive design specifications, decision making, and ultimately design verification and validation. Findings and results associated with implementing MBSE in these ways, alongside traditional methods will be discussed.",1970
"Not (strictly) relying on SysML for MBSE: Language, tooling and development perspectives: The Arcadia/Capella rationale","Using the Arcadia/Capella solution as an example, this paper explores why standard UML/SysML languages are not necessarily the unique or best alternatives for implementation of a model-based systems engineering solution (MBSE). The Thales experience is used to elicit MBSE language and tooling requirements. This paper analyzes various implementation alternatives and justifies structuring choices made regarding Capella to efficiently support the Arcadia engineering method.",1970
MBSE without a process-based data architecture is just a random set of characters,"This paper describes the importance of developing a Process-Based Data Architecture as part of pursuing a Model Based Systems Engineering Methodology. The purpose of this paper is to introduce the user to best practices in developing a Model Based Systems Engineering (MBSE) approach, focusing on the definition of the Data Architecture.",1970
Architecture Framework Standardization for Satellite Software Generation Using MBSE and F Prime,"An Architecture Framework (AF) describes a system's product taxonomy; utilization of the same AF between dissimilar projects, industries, or nations standardizes communication about a system if AF products are used to describe the system. Software is ubiquitous to complex systems but has not received requisite attention in AF product representation or standardization. The most advanced and widely used AFs employ Model-Based Systems Engineering (MBSE) tenets to communicate system elements to Stakeholders; generating system software architectures as MBSE artifacts alongside non-software artifacts is possible for space systems when using F Prime, a software framework from the Jet Propulsion Lab. NASA recently published the Space Mission Architecture Framework (SMAF) for use on uncrewed, robotic missions, and AF products for software architecture generation using the Systems Modeling Language (SysML) and F Prime are presented here in SMAF format. In contrast to an AF, which describes the products that can be created for a system or mission, a Mission Architecture Framework (MAF) such as the SMAF describes the products that should be created for a mission. MBSE definitions are established in the context of a MAF, products for software architecture generation are defined in the hierarchy and style of the SMAF, and examples of software architecture generation as MBSE artifacts from SysML are provided using the Alabama Burst Energetics eXplorer (ABEX) CubeSat mission as a case study.",1970
Applying Model Based Safety Assessment for Aircraft Landing Gear System Certification,"New aircraft certification includes Systems Safety Assessment and Flight Testing for verifying compliance to various certification standards, noise testing, reliability testing, human factors analysis and qualitative assessments of flying qualities. The Model-Based Systems Engineering methodology has demonstrated its usefulness and practicality for performance validation of aircraft critical systems like the flight control systems prior to the start of actual qualification testing or flight testing. Use of model based methodology can be applied to failure and safety assessment tasks and certification process. Initial adaptation of MBSE was limited to aircraft systems related to electronics, avionics and software based components. There are some challenges in implementing Model-Based Safety Analysis to mechanical and electro-mechanical based systems like aircraft wheel braking system and nose steering system. MBSA promotes and supports virtual flight testing and is a powerful tool for verifying design and safety related malfunctions particularly for those failures conditions where it may not be possible to test these during the regular flight test regime.",1970
Model-driven systems engineering for netcentric system of systems with DEVS unified process,"Model-Based Systems Engineering (MBSE) employs model-based technologies and established systems engineering practices. Model-Driven Engineering (MDE) provides various concepts to automate model based practices using metamodeling. We describe the DEVS Unified Process (DUNIP) that aims to bring together MBSE and MDE as Model-driven Systems Engineering (MDSE) and apply it in a netcentric environment. We historically look at various model-based and model-driven flavors and suggest MDSE/DUNIP as one of the derived methodologies. We describe essential elements in DUNIP that facilitate integration with architecture solutions like Service Oriented Architecture (SOA), Event Driven Architectures (EDA), Systems Entity Structures (SES) ontology, and frameworks like Department of Defense Architecture Framework (DoDAF 2.0). We discuss systems requirement specifications, verification and validation, metamodeling, Domain Specific Languages (DSLs), and model transformation technologies as applicable in DUNIP. In this article, we discuss the features and contributions of DUNIP in netcentric system of systems engineering.",1970
Traditional to Modern Antenna Test Environments: The Impact of Robotics And Computational Electromagnetic Simulation on Modern Antenna Measurements,"Many traditional antenna test facilities are designed with a specific measurement application in mind. As a result, these facilities tend to have fixed measurement geometries with much of the range performance analysis being performed only once, during the design phase of the test facilities implementation. Modern antenna measurement ranges employing multi-axis robotic positioners provide a near limitless degree of re-configurability in terms of measurement types and scan geometries. This drives an ongoing need to evaluate each unique setup and application. Model based Systems Engineering and development (MBSE/MBD) approaches can be employed to dramatically reduce the time, effort, and cost associated with the test development and validation phases of a given program. MBSE tools can also be used to optimize test configurations to greatly reduce measurement uncertainties. This paper provides an overview of how these engineering techniques are being harnessed during the implementation of a new dual multi-axis robotic antenna test system.",1970
Extending the Concept of Domain Specific Systems Engineering to System-of-Systems,"With the ongoing evolution of cyber-physical systems (CPS) new methods are required to deal with complexity. The concept of Model Based Systems Engineering (MBSE) appears to be a promising approach, even though the common paradigm of object modelling poses a challenge for stakeholders from different domains. To better enable stakeholder integration, in recent past the concept of Domain Specific Systems Engineering (DSSE) has been proposed. This concept aims at establishing a modelling approach around domain specific viewpoints and model kinds. The DSSE approach could have been validated in different domains so far. To enable the integration of systems from different domains into System-of-Systems (SoS), this paper contributes conceptual thoughts on how to extend the DSSE approach for application in System-of-Systems Engineering (SoSE). For this purpose, the paper first gives a brief summary on the core concepts of DSSE. Further, a case study is realized to learn about the needs and limitations when it comes to extending DSSE for System-of-Systems Engineering. Finally, identified research items are discussed in more detail and an outlook to our future work is presented.",1970
Modeling of the flight system design in the early formulation of the Europa Project,"During the early formulation stage of a mission concept, the multiple and frequent changes made to the system design present various systems engineering challenges, including: ensuring the internal consistency of multiple engineering reports describing distinct aspects of the same flight system; capturing the interdependencies between subsystems to guide the design iteration process; minimizing the amount of rework needed when the design is modified; managing multiple architectural alternatives while leveraging commonality; and finally providing traceability of the design changes made over time. This paper describes how such challenges have been partly addressed by the Model-Based Systems Engineering Team (MSET) on the Europa Project at the Jet Propulsion Laboratory (JPL), through the application of Model-Based Systems Engineering (MBSE) techniques. The paper first discusses the principle of Single-Source-of-Truth (SSoT) and how it can be supported by the use of a well-structured system model relying on a rich vocabulary (e.g., based on the SysML language). The application of modeling patterns to organize the Flight System design information and make it queryable is then examined, with specific examples used on the Europa project (such as launch dry mass, electrical power, thermal power, fields-of-view). The benefits of checking formal rules to verify the correctness of the model and ensure that changes were properly incorporated are also discussed. The paper then presents model organization strategies that maximize the reuse of information across multiple design architectures that are explored in early formulation, as well as various practices used to control the numerous changes made to the model as the design matures. Finally, the paper concludes with a summary of the lessons learned from using a system model on the Europa project in order to capture design information about the Flight System. This has proved to play a key role in delivering high-quality representations of the spacecraft design to a variety of stakeholders as well as demonstrating its viability.",1970
A hierarchical set of SysML Model-based objects for tolerance specification,"Modern engineering systems are getting complex and integrate multi-physical objects. The Model-Based System Engineering (MBSE) seems to be the best way to manage complex system design and the Systems Modeling Language (SysML) may be considered one of the computer languages to perform the designing of a complex system. MBSE also seems to be a valid solution to integrate tolerance specification into design process. In particular, in the present work SysML is used to create a set of libraries containing simple and complex volumes, primary datum and tolerance zones, according to ASME Y14.5M and ISO 1101 standards. The generation of these libraries is based on the Technologically and Topologically Related Surfaces (TTRS) model and uses the set of thirteen positioning constraints able to represent every condition between assembly features. The paper summarizes the characteristics of the created SysML objects, able to represent Datum, Datum Reference Frame (DRF) and tolerance zones. In particular, the Datum included in ASME Y14.5-M are modelled. Then, all the tolerance zones included in both standards are modelled. Finally, a three-step procedure is summarized to preliminary illustrate the way of use the developed set of SysML objects.",1970
Design Structure Matrix Generation from Open-source MBSE Tools,"The usage of Design Structure Matrices is widely applied to represent, cluster, and partition complex systems information for different purposes, one of them being systems design. Nevertheless, open-source software for their automatic creation is rare. This leads to manual workshop sessions for subject matter experts to fill in the design structure matrices, a practice that is very tedious and time consuming. The importance and application of Model Based System Engineering has increased over the years. Nowadays, there are several open-source MBSE software such as StarUML, Papyrus, TTool, Modelio, Capella. This paper describes a novel approach to generate design structure matrices and extract information automatically from xml and xmi formats used widely in open-source Model Based System Engineering tools. This work presents the algorithm and a tool to extract data from the output model files, in order to automatically create a Design Structure Matrix (DSM) of modeled systems.",1970
Test-driven modeling of embedded systems,"To benefit maximally from model-based systems engineering (MBSE) trustworthy high quality models are required. From the software disciplines it is known that test-driven development (TDD) can significantly increase the quality of the products. Using a test-driven approach with MBSE may have a similar positive effect on the quality of the system models and the resulting products and may therefore be desirable. To define a test-driven model-based systems engineering (TD-MBSE) approach, we must define this approach for numerous sub disciplines such as modeling of requirements, use cases, scenarios, behavior, architecture, etc. In this paper we present a method that utilizes the formalism of timed automatons with formal and statistical model checking techniques to apply TD-MBSE to the modeling of system architecture and behavior. The results obtained from applying it to an industrial case suggest that our method provides a sound foundation for rapid development of high quality system models.",1970
A Model-Based Systems Engineering Approach to Exploration Medical System Development,"The work presented in this paper describes how NASA's Human Research Program's (HRP) Exploration Medical Capability (ExMC) Element has adopted Systems Engineering principles and tools (Model-Based System Engineering (MBSE) and the Systems Modeling Language (SysML)) to develop an initial architecture and requirements for a future exploration medical system. The paper describes the utility and effectiveness of the model and it's derived products. Using MBSE tools, medical needs are translated from the clinical domain to the engineering community to inform future lunar vicinity mission architectures. These activities will support the timely availability of recommended medical system requirements to the exploration system design teams, in order to enable a robust crew health system capable of supporting human life during exploration missions.",1970
Simulation of cyber physical models using SysML and numerical solvers,"We demonstrate a modeling and simulation technique that allows integrating controller/plant behavior specified in numerical solvers, such as Simulink and Modelica, within the SysML model. This allows the mixing of discrete and continuous behaviors in a context of a system model that can be simulated as a complete system level specification. Our approach involves code generation, rather than semantic mappings or model transformation of behaviors, combined with the capability to transform the interface and type specification from one modeling language to the other. Using such complementary languages/tools allows the specification of a complete design model that can be simulated for various purposes such as verification and validation and trade studies.",1970
Design of a packaging machine and virtual commissioning via modular hardware-in-the-loop simulations,"This paper describes an implementation of a model-based methodology to validate an innovative Hardware-in-the-loop (HIL) scheme applied to a mechatronic modular structure for a packaging machine. This new HIL environment is implemented by means of a unique CPU and allows use of an ordinary personal computer for the HIL simulation of a module of the packaging machine, without any other hardware tool. The research includes identification of modular building blocks through a suitable model-based systems design, with SysML models, Simulink models, and Beckhoff TwinCAT software. The novel HIL scheme is presented accompanied by experimental results of a composite module, which consists of four sub-modules.",1970
There's no ‘I’ in SEAM—An Interim Report on the ‘Spacecraft Early Analysis Model’,"Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE), and is used to promote consistency, communication, clarity and maintainability within systems engineering projects. In previous work, industry focus groups have indicated that one way this can be achieved is by performing early functional validation of elements of the spacecraft avionics. This paper presents an extended approach, introduced in a case study previously published by the authors, to enable early functional analysis of a spacecraft. The approach uses the `Spacecraft Early Analysis Model' (SEAM), a SysML-based model framework for the definition, development and analysis of a space-based mission and corresponding space system. This formal model-based representation of the system enables the high-level simulation of the design during Phase B of the spacecraft system lifecycle. The SEAM pulls together different, traditionally disparate, analysis tools and enables them to work together, producing an integrated system model spanning multiple tools. It facilitates the simulation of the mission using dedicated orbit modelling software, analysis of the completeness and accuracy of the system behaviour, and provides an indication of the appropriate logical architecture. The SEAM has been developed iteratively by applying it to Earth-observation case studies from the Biomass mission, refining the capabilities of the template accordingly, and subsequently generalising the model. The resulting interim version of the Spacecraft Early Analysis Model contains a series of MBSE patterns that will ultimately provide users with a comprehensive and consistent SysML-based structure that enables early functional definition and analysis of spacecraft. Next steps in the development of the SEAM include its application to a wider variety of use cases to develop and demonstrate its versatility, and the development of metrics to measure its perceived value among practitioners.",1970
Forward Design of Landing Gear Retraction System Based on MBSE,"In this paper, according to the forward design process, the MBSE (Model-Based Systems Engineering) method is used to carry out the forward design of the landing gear retraction system. Starting from the aircraft-level task, the scenario of the landing gear retractable function is captured, and the use case diagram and activity diagram of SysML are used to describe the retractable function. The requirements of the retraction system are defined based on the descriptive model, the architecture solution of the landing gear retraction system is proposed based on the requirements. The analytical model and physical model are built to carry out performance analysis. Based on the model, rapid iteration of changes can be achieved, and the rationality of requirements and solutions can be verified in advance, achieving the goal of saving development cycle and cost. The model and data will be further improved in the follow-up, and the detailed design of the landing gear retraction system can be carried out based on the model.",1970
SafeSysE: A Safety Analysis Integration in Systems Engineering Approach,"The main objective of this paper is the integration of safety analysis in a SysML-based systems engineering approach in order to make it more effective and efficient. It helps to ensure the consistency between safety analyses and system design and then to avoid late errors and to reduce system development time. To achieve this purpose, we tackled the following axes: 1) formalizing a SysML-based design methodology that will be the support for safety analyses; 2) providing an extension of SysML to enable the integration of specific needs for safety concepts in the system model; and 3) performing an automated exploration of the SysML models to generate necessary information to elaborate safety artifacts such as failure mode and effects analysis (FMEA) and fault tree analysis (FTA). The proposed methodology named safety integration in systems engineering (SafeSysE) is applied to a real case study from the aeronautics domain: electromechanical actuator (EMA).",1970
Structural Rules for an Intelligent Advisor to Identify Requirements Gaps using Model-Based Requirements,"Requirements define the problem boundaries within which an engineering team tries to find acceptable solutions. Gaps in requirements formulation can lead to solutions that are not fitfor-purpose. However, the completeness of a set of requirements cannot be demonstrated; rather, completeness is an attempt, a best-effort pursuit. In current practice, where requirement gaps are frequent in system development, the human (engineer or team of engineers) becomes a major factor in the comprehensiveness of the resulting set of requirements. In this paper, we present a concept of an intelligent systems engineering (SE) advisor that supports the (human) engineer in identifying gaps as requirements are formulated, the set of structural rules that the intelligent SE advisor uses to perform the assessment, and a proof-of-concept implemented as a plugin for a Systems Modeling Language (SysML) software environment. The proposed intelligent SE advisor evaluates requirements that are formulated in the form of models leveraging a knowledge repository to read the model-based requirements. If potential gaps in the set of requirements are identified, these are presented to the engineer, who decides how to address the gaps. In this way, the intelligent SE advisor contributes to assessing requirements validation, beyond simply verifying model construction.",1970
Model-document coupling in aPS engineering: Challenges and requirements engineering use case,"Especially due to the ever-increasing complexity of automated production systems, model-based systems engineering (MBSE) is gaining more and more importance. Nevertheless, system models do not stand for themselves - rather, they are related to a multitude of engineering documents such as requirements specification documents, CAD drawings or electric circuit diagrams. Especially for practical applications, it is therefore essential to couple system models with such engineering documents. As a basis to overcome this issue, this paper proposes a concept for coupling models and documents in automated production systems at the example of requirements engineering models. The concept envisions an automatic generation process from such models to textual Functional Specification Documents (FSDs), which are often used throughout negotiation between manufacturers and customers. Changes to such FSDs, e.g. made via PDF annotation tools, are then propagated back to the respective models. We envision the concept to be a basis for future extensions that aim at improving current MBSE approaches to make them more productive and attractive for practical applications during engineering of automated production systems.",1970
A concept for managing information in early stages of product engineering by integrating MBSE and workflow management systems,"Searching for and handling of information is one of the most time consuming activities within the development of technical products. It is often unclear which information is available and its quality is questionable especially due to document based information handling. Inconsistencies, redundancies and discipline specific documents are reasons for that. The problem increases in the early design stages as information is mostly available within presentations, which are not self-explanatory, or in employees' minds. Several tools aim to solve this problem but have their strength in later stages of the development or are just focusing single activities - mainly technical issues. On the other hand there is a trend to Model-Based Systems Engineering (MBSE): is a promising approach for the improvement of interdisciplinary collaboration in product development. It suggests a system model (instead of a database as for PDM) as single source of “truth” for product and project specific information - according to its basic concept Systems Engineering. Up to now, enterprises struggle implementing a holistic MBSE. It is often unclear which information is needed in which models at what time by whom. This can cause `modeling for its own sake'. MBSE may contribute to the improvement of information handling and information quality. To enable this, we propose a workflow-based concept to support information handling using MBSE already at the early phase of product engineering. The concept offers the potential to significantly ease access to information, reduce the time for searching of information and brings the breakthrough for MBSE as it connects engineering and process activities.",1970
Model-based requirement generation,"Model-based systems engineering (MBSE) is intended to enhance productivity and quality through a paradigm shift from document-centric engineering. However, most MBSE development tools require the manual creation of requirement constructs. This time consuming step is vulnerable to human error, and must be repeated as high-level designs inevitably evolve. This paper describes a capability that uses SysML structure and behavior diagrams to automatically generate textual requirements. Using modified off-the-shelf MBSE software, information is extracted from SysML constructs (e.g., blocks, states, activities) and combined in SysML requirement objects. The requirement syntax conforms to NASA and DoD standards. Requirements are based on SysML construct relationships (e.g., allocations, control flows, object flows) commonly used in diagrams to describe system architectures and designs. Through the embedded error checker, designers can ensure that requirements are complete and consistent. When new requirement constructs are created, traceability to the “parent” SysML constructs is automatically created to capture the rationale. As the architectural models evolve, the requirements are updated to ensure consistency with configuration management and other model-based tools. Such an approach allows designers to quickly assess the impact of requirement changes and reduces requirement management costs. The capability is demonstrated by comparing model generated requirements to a traditionally developed GPS receiver specification.",1970
"Model and Data Driven Complex Product Development: from V, Double Vs to Triple Vs","Complex product development framework and methodology is evolving with the development of industrial technology, information technology and management technology. The traditional product development framework and methodology is a waterfall style, which is usually described as the V model. In the V model, the design result of the earliest stage will be validated, verified and accredited at the last stage. In order to reduce the cycle of verification, validation and accreditation (VV&A) and increase the probability of successful design within fewest iterations, model-based systems engineering (MBSE) proposes a design information transferring methodology based on digital models, which extends the V model to double Vs model. The development of big data technology and data-driven machine learning provides an opportunity to converge data lifecycle, model lifecycle and product development lifecycle together. The paper reviews product development models from V to double Vs, and presents a model and data driven triple Vs model for product development in the big data era.",1970
A Top Down Approach to Ensure the Continuity of the Different Design Levels of Swarm Robots,"Swarm engineering is a systematic application of scientific and technical knowledge to specify requirements, model, design, realize, verify, validate, operate and maintain a swarm intelligence system. In swarm robotics, there is not a well-structured methodology until today for developing robotic swarm systems. Several researchers have developed steps to design swarm robots but these steps are still incomplete. In this paper, we focus on the functional architecture of the swarm robots where we propose a top-down approach to ensure consistency and continuity from requirement level to behavioral level up to the functional and structural levels. This approach is based on the Model-Based Systems Engineering method (MBSE) using the Systems Modeling Language (SysML) where we present the allocations between the functions of each swarm member and the overall swarm behaviors. Then, we will be interested in the architecture of Robot Operating System (ROS) of a swarm behavior where we identify the allocations between the component and the functions of a robot.",1970
Towards Configuration Support for Collaborative Simulator Development - A Product Line Approach in Model Based Systems Engineering,"In development and support of complex products such as power plants, automotive vehicles, or aircrafts, modeling and simulation has become an important activity as a basis for knowledge capture. Simulation is used in several steps of the product lifecycle; for evaluation of early design, for system verification, and for user training. With emerging techniques such as tools for high-level modeling, multi-core computing, and visualization, the number of useful models is growing. This paper focuses on reuse of multipurpose models and configuration support in a product line context. A configurator prototype system is presented. The simulator set created from validated models is considered to be a secondary product line. The product set which the simulation models represent is considered to be the primary product line. The Saab Gripen fighter aircraft, together with simulators in which the aircraft behavior, performance, and handling qualities are represented, is used to exemplify application. Integration principles of the systems for simulator configuration, Software Configuration Management, and Product Data Management (PDM) are studied. Preliminary results show that a configurator tool can be used, but there is need to map structures between the simulation and PDM domains.",1970
Orchestrating Tool Chains for Model-based Systems Engineering with RCE,"When using multiple software tools to analyze, vi-sualize, or optimize models in MBSE, it is often tedious and error-prone to manually coordinate the execution of these tools and to retain their respective input and output data for later analysis. Since such tools often require expertise in their usage as well as diverse run-time environments, it is not straightfor-ward to orchestrate their execution via off-the-shelf software tools. We present RCE, an application developed at the German Aerospace Center that supports engineers in developing and orchestrating the execution of complex tool chains. This appli-cation is used in numerous research and development projects in diverse domains and enables and simplifies the creation, analysis, and optimization of models.",1970
Data-Message Modeling for Multi-Lane Architectures on an IMA Platform Using the eSAM Method,"The Electronic System Architecture Modeling (eSAM) method has been developed as a novel approach to modeling the integration of system components interconnected across an open Integrated Modular Avionics (IMA) platform. Fundamental to this Model Based Systems Engineering (MBSE) approach, eSAM enables system integration models to be constructed independently and agnostic to the system allocation to the IMA platform. As opposed to traditional logical/physical model separation, eSAM employs a hybrid modeling method where both logical and physical elements exist in the same model. Hybrid model components are directly connected, similar to traditional federated architectures, even though components are physically connected through the IMA platform. This improves the clarity of the functional system integration, while correctly segregating the roles of system integration and IMA platform allocation. In this way, eSAM addresses a key challenge to modeling IMA system architectures. This paper focuses on the eSAM data and message model, which is core to the method. This includes the re-use of components and related data/message definitions in multi-lane architectures supporting high integrity and high availability solutions. Reuse is managed using template-instance modeling methods where a system part is defined as a template that can be instantiated many times in the system models. eSAM has been implemented using the MathWorks System Composer™ tool, which provides many inherent capabilities including model analysis functionality, which is described in this paper for the purposes of ensuring data interfaces are valid using edit-time checks.",1970
MBSE the rise of the machines?,This paper present power point presentations from the conference proceedings covering the following topics: global fuel economy; fuel economy/emissions tradeoff; virtual engineering process; overview of transmission system simulation; transmission algorithm development using system simulation model-based systems engineering definition; Autonomie Plug & Play architecture for MBSE; fuel consumption; forecast single component technology; impact of component technologies and powertrain configurations; cost benefit analysis; levelized cost of driving; automotive controls development; vehicle level energy management; engine in-loop block diagram; software-in-the-loop.,1970
An Architectural Description For The Application Of Mbse In Complex Systems,"The design of a complex warship is a multidisciplinary effort which often encounters major challenges, particularly with respect to integration across interfaces in the System of Systems (SoS). In principle, the goal of Model Based Systems Engineering (MBSE) with respect to system design is to provide a means of capturing and communicating the system design in a structured, consistent, and coherent fashion; that can be easily assessed by engineering teams and quickly analysed using queries and toolsets. The focus of this paper is to investigate the potential to achieve a consistent description, identify a viable methodology that minimises mismatch in requirements and to avoid an extended design lifecycle. This study highlights the need to develop a generic Architectural Description (AD) that is based on a common ontology which would clearly define the fundamental tenets of applying state-of-the-art Architectural Frameworks (AFs) in naval ship design. An investigation on the effectiveness and accuracy of a graph-based approach is needed to assess whether it is possible to create a ‘Rosetta stone’ for AFs, which links any two or more different model viewpoints in different AF’s using the approach.",1970
How the Blockchain fosters E/E traceability for MBSE and PLM in distributed engineering collaboration,"The purpose of the research paper is to describe how the Blockchain technology can foster traceability of electric/electronics (E/E) information artifacts in product lifecycle management (PLM) with a focus on bridging the gap between model-bases systems engineering (MBSE) and product data management (PDM). Due to automotive development includes many parties, such as original equipment manufacturers (OEMs), suppliers, and new partners, a distribution mechanism for proclamation of changed information artifacts is necessary. The approach compares MBSE methods and identifies which information artifacts created there have to be linked with PDM artifacts. Practical implications for the exchange of data in engineering collaboration with multiple partners are assessed by a first proof of concept with a Blockchain prototype tested with a supplier. The originality of this approach stems from the application of the Blockchain technology in engineering IT, a meta data model to connect MBSE and PDM, and the facilitated inclusion of engineering collaboration partners by those means.",1970
Bidirectional Text-to-Model Element Requirement Transformation,"Elicitation, representation, and analysis of requirements are important tasks performed early in the systems engineering process. This remains true with the adoption of Model-Based Systems Engineering (MBSE) methodologies. Existing SysML-based methodologies often choose between (i) using external requirements documents and/or databases as the authoritative source for requirements truth versus (ii) generating requirements directly, as elements in the system model. In either case, there is often need for the systems engineer to manually develop a model-based requirements representation, as this faculty is not automatic in the commonly-used SysML feature set. Additionally, once the system model has been completed, systems engineers typically must prepare traditional “shall-statement” requirements for external review purposes, as not all stakeholders can be expected to be trained in system model interpretation. This paper details a novel effort to address both problems, by automatically transforming text-based requirements (TBR) into SysML model-based requirement (MBR) representations, and vice versa. The text-to-model based transformation direction uses requirement templates and natural language processing techniques, expanding on work from the field of requirements engineering. This paper also presents an aerospace-domain case study application of the developed tool. In the case study, a selected set of requirements were analyzed, and a system model was constructed. Then, the intermediate output system model was updated with additional elements, to represent the progression of the project's systems engineering process. The modified system model was then analyzed, constructing text-based requirements from the structure. The resulting text-based requirements were compared to the initial set of input requirements to assess consistency in both directions of analysis. The methodology developed in this paper improves the systems engineering process by saving the systems engineer time constructing potentially repetitive model elements, and by enabling model-based requirement analyses to methodologies previously only capable of processing text-based requirements. Further, the methodology eases the responsibility of the systems engineer to maintain a copy of the model-based requirements in text-based format.",1970
Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process,"A particular problem in the practical application of Model-Based Systems Engineering (MBSE) for the development of complex products is the effective integration of other engineering models. The Model-Driven Engineering Process (MDEP) addresses this by providing clearly defined insert points for domain models and simulation engines. In Closed-Loop Systems Engineering (CLOSE) Experimentable Digital Twins (EDTs) are integrated in the MDEP to realistically simulate how system functions would be executed by physical parts of the developed product. CLOSE thus can reduce the cycle times for analysis, design, development, optimisation, and some of the verification. This paper introduces the basic concept of CLOSE and illustrates its application with a case study.",1970
A ROSETTA framework for live / synthetic aviation tradeoffs: Preliminary Report,"In this paper a Relational Oriented Systems Engineering and Technology Tradeoff Analysis (ROSETTA) framework is introduced for performing technology tradeoff and design studies with respect to the live, virtual and constructive mixes for aircrew training. This novel, efficient and model driven repeatable approach to the present and future problem of live / synthetic mixes on-board a real aircraft concentrates on relationships between elements in models to support capability based decisions. The methodology described provides a framework and factorization of a family of systems (FoS) architecture for tactical situation/mission scenario and evaluation of pilot response models. ROSETTA provides a more rigorous mathematical framework for conducting decision support and advances current model based systems engineering (MBSE) process for simulation and analysis of a complex system of systems (SoS) problem.",1970
Applying a Model-Based Approach to Develop a Standardized Template for CubeSat-class Satellites,"CubeSats have most commonly been used by students and researchers as a cost effective means of accessing space. As demand grows for more complex space systems, however, the complexity and capability of CubeSat systems must also increase. One drawback of increased complexity is the increase in obscurity of how a change in one area of the design propagates through the rest of the system. Dealing with this added complexity takes away from student education experiences while also increasing the design cycle time, taking CubeSats further away from the key characteristic advantages that define them. One solution to this is to apply Model-Based Systems Engineering (MBSE) methodology to CubeSats, providing a standardized template that the developers can use to make the design cycle more efficient. Lately, the practice of MBSE has become increasingly nuanced and advances have focused on the application of tools and practices to aid in the development of space systems. This includes efforts concerned with the development and description of CubeSats. Most recently, the development of the CubeSat System Reference Model (CSRM) by the International Council on Systems Engineering (INCOSE) Space Systems Working Group (SSWG) has better enabled the description of CubeSat systems using common modelling language. At the U.S. Naval Academy (USNA), the Small Satellite Program has been developing and launching student-built project satellites since 2001 and CubeSats since 2012. Given the time constraints and minimal funding of an undergraduate education program, the need for a simple build template for CubeSats was recognized and the PSAT1U system was conceived. PSAT1U is a 1U CubeSat designed to be utilized as a modular architecture with easily accessible parts allowing students to focus on designing and implementing their on-board payload and mission systems without spending more time carrying out trade studies on well understood subsystems and components. The USNA has used the CSRM along with documentation from the development of PSAT1U to create a Model-Based representation of the PSAT1U system. The aim of this model is to aid in the education of undergraduate engineering students in their capstone design course as well as to reduce design and development times for future CubeSat systems. This paper will present an overview and description of the PSAT1U model, outline the design of the physical system as well as the development of the MBSE model and discuss its implementation in a classroom setting as well its potential role in the development of future systems. Finally, the propagation of system changes through the model will be demonstrated to illustrate the utility of describing a CubeSat system this way.",1970
Towards a System of Systems Engineering Architecture Framework,"Model-based approaches such as Model-Based Systems Engineering (MBSE) are widely regarded as a necessity to enable and support the development of ever more complex Systems of Systems (SoS). A key to the application of model-based development approaches in companies is the introduction of systems engineering architecture frameworks (SEAF) to structure the models of systems to be developed. This paper displays the research to develop a SEAF for SoS. Through workshops and interviews with 18 partners from industry and research, we derived perspectives to be considered for describing and modeling SoS. By analyzing existing SEAFs from literature we concluded, that not all perspectives we identified as relevant are covered by a single framework. Based on our research, especially the explicit consideration of SoS characteristics such as autonomy and interdependence, the integrated consideration of product, production system and validation system development, as well as consideration of different product generations and (re-)use of models appears to be not profoundly addressed. Advancing the state of research, we therefore propose a six-dimensional SoS engineering architecture framework to cover all perspectives we identified as relevant. The proposed framework can further serve as a reference for developers to derive and build specific frameworks tailored to their needs while at the same time supporting consistency, reusability and compatibility of the specific frameworks. The presented framework is an initial proposition which continuously being used and evaluated by its application to structure modeling for a variety of real systems from different industries. Insights from the application are fed back for its further development.",1970
SLIM: collaborative model-based systems engineering workspace for next-generation complex systems,"Development of complex systems is a collaborative effort spanning disciplines, teams, processes, software tools, and modeling formalisms. It is the vision of model-based systems engineering (MBSE) to enable a consistent, coherent, interoperable, and evolving model of a system throughout its lifecycle. However, no currently available modeling language can represent all aspects of a system (including system-of-systems) at all levels of abstraction across the lifecycle.",1970
Model-Based Approach to System of Systems Engineering: Reevaluating the Role of Simulation,"The complexity of modern engineered systems is growing quickly due to the rapidly evolving nature of today's environment. Current management practices are limited in their structural capacity for coping with such swift transformation, pointing to an urgent need for new approaches in management of complex engineered systems. The model-based approach has emerged as a new promising method to complexity management. However, it is still unclear what role simulation plays in this approach and whether the role differs based on the type of a system under consideration and/or the degree of complexity involved. In this paper, the authors conduct a comparative analysis between the disciplines of System Engineering (SE) and System of Systems Engineering (SoSE), and the significance of simulation in these areas. The paper concludes that simulation represents a major part of modeling of System of Systems (SoS), leading the authors to introduce a new term, Modeling and Simulation Based System of Systems Engineering (M&SBSoSE), to underline the importance of incorporating and integrating simulation into modeling applications in SoSE. It is further also proposed that simulation of SoS should be multi-paradigm to increase the scope of simulation effectiveness in a complex dynamic environment.",1970
A Preliminary Model-Based Approach for Gender Analysis of Airbus Research Organization,"The objective of this paper is to approach gender analysis in a novel way, applying MBSE (Model-Based Systems Engineering) techniques. MBSE is a methodology to enhance multidisciplinary design and simulation of complex systems and can be used to specify functions and behaviors of a system. The work described on this paper, was made in the frame of an Airbus CTO (Central Technical Office) project launched late 2017, with the target to increase up to 30% the women representation in Airbus R&T population in 2021. The novel way presented has been made by creating ontology as an analytical framework to approach the complex gender diversity social problem. The authors have applied the same methods used in Airbus to approach other complex engineering problems. The ontology presented is composed by a scope, a data model and behaviors models and has been modelled using several FOSS (Free and Open-Source Software) tools. Finally, an Airbus R&T use case has been presented, instantiating with real data, simulated and discussed.",1970
MBSE for Civil Aircraft Scaled Demonstrator Requirement Analysis and Architecting,"A civil aircraft scaled demonstrator is an unmanned aerial vehicle (UAV) obtained by reducing the geometry of a civil aircraft by an equal scale and simplifying the airframe and airborne subsystems. Due to the low development cost and flight risk of scaled demonstrators, flight tests with demonstrators are an attractive way to assess the reliability and effectiveness of new configurations and/or technologies available for civil aircraft. Nevertheless, engineers still hope to reduce the development cycles and costs of demonstrators to evaluate their multiple civil aircraft design solutions through flight tests in a short period of time. Model-based systems engineering (MBSE) is a formalized requirement and architecture modeling method which is a useful tool in aircraft design. However, no existing MBSE framework has been found suitable for the development of demonstrators due to their unique features. In this paper, an MBSE approach for civil aircraft scaled demonstrator is proposed based on the MagicGrid methodology and the existing technical process for the demonstrator. This approach formalizes the requirement analysis and architecting for demonstrators via system modeling language (SysML). Meanwhile, the stakeholders of civil aircraft scaled demonstrators are identified, and a requirement ontology and modeling standard are established according to existing demonstrator development practice. Then, a case study is performed through a hybrid power demonstrator which carries a hydrogen fuel cell as the main power supply, a set of solar cells, and two lithium cells. The requirement traceability and verifiability are examined, and a logic simulation is executed for architecture, which shows the feasibility of applying the MBSE approach for the development of civil aircraft scaled demonstrators.",1970
Thinking from the system architecture: A better methodology for capture of collaborative knowledge,"The challenge of knowledge management, particularly in non-hierarchical or virtual tasking, is familiar to all of us. The pace of change increases the need for effective knowledge management; the trend towards distributed leadership within and external to organizations makes it more difficult. The authors with Dr. Robert Neches (previously with University of Southern California and the Department of the Assistant Secretary of Defense for Research and Engineering) envisioned development of a “Nationwide Ecosystem for Complex Engineering.” The “Ecosystem” intended to create a computing environment for virtual collaborative teams to respond to national challenges with engineering solutions in a common knowledge management environment. In development of this concept at the Georgia Tech Research Institute (GTRI) we realized that a different approach to knowledge management is a core requirement for virtual teams to bring new innovation to challenge problems in complex systems. This approach is not necessarily new, as Dr. Neches has long been a proponent of model-based approaches to knowledge capture (Neches, et al., 1993). However, other work at GTRI combined with these ideas led us to the concept of using formal representations of system architecture as an organizing concept for knowledge. This is significant because ongoing development of Model Based Systems Engineering (MBSE) concepts and the Systems Modeling Language (SysML) now provide formalism for general design modeling. We have demonstrated such approaches for large scale engineering design projects. This presentation introduces the concept of a generalized approach to knowledge management centered on models of system architecture.",1970
Model based mission assurance: NASA's assurance future,"Model Based Systems Engineering (MBSE) is seeing increased application in planning and design of NASA's missions. This suggests the question: what will be the corresponding practice of Model Based Mission Assurance (MBMA)? Contemporaneously, NASA's Office of Safety and Mission Assurance (OSMA) is evaluating a new objectives-based approach to standards to ensure that the Safety and Mission Assurance disciplines and programs are addressing the challenges of NASA's changing missions, acquisition and engineering practices, and technology. MBSE is a prominent example of a changing engineering practice. We use NASA's objectives-based strategy for Reliability and Maintainability as a means to examine how MBSE will affect assurance. We surveyed MBSE literature to look specifically for these affects, and find a variety of them discussed (some are anticipated, some are reported from applications to date). Predominantly these apply to the early stages of design, although there are also extrapolations of how MBSE practices will have benefits for testing phases. As the effort to develop MBMA continues, it will need to clearly and unambiguously establish the roles of uncertainty and risk in the system model. This will enable a variety of uncertainty-based analyses to be performed much more rapidly than ever before and has the promise to increase the integration of CRM (Continuous Risk Management) and PRA (Probabilistic Risk Analyses) even more fully into the project development life cycle. Various views and viewpoints will be required for assurance disciplines, and an over-arching viewpoint will then be able to more completely characterize the state of the project/program as well as (possibly) enabling the safety case approach for overall risk awareness and communication.",1970
Fostering Model Consistency in Interdisciplinary Engineering by Linking SysML and CAD-Models,"Model-based Systems Engineering emphasises the use of a consistent, connected system model as a central source for all relevant design information within product engineering. Next to the system model, additional domain-specific models are required to apply domain-specific engineering approaches. For an efficient interdisciplinary engineering process, these different models must be linked to avoiding inconsistencies. This contribution argues the need to link domain-independent and domain-specific models and presents challenges within an interdisciplinary engineering process based on spread design information within different models. Model elements within SysML and CAD-models are linked to support specific engineering activities and to address these challenges. Essential contribution is the introduction and application of a technical interface concept to link SysML and CAD-model elements.",1970
MBSE modeling of a SoS with a small satellite and autonomous surface vessels for persistent coastal monitoring,"Oceanographic phenomena can be monitored using both remote sensing and in-situ measurements. However, it is challenging to gain actionable insight by just utilizing one source. Combining these data sources in near real-time enables high temporal, spectral and spatial resolution of phenomena in target areas. In this article, we use Model-Based Systems Engineering to model and highlight missing functions or new capabilities needed within an acknowledged System-of-Systems that can support the monitoring of oceanographic phenomena in coastal regions. Different system architectures and a logical architecture have been modeled to provide new insights for developers through reinforcement of a common mental model as well as technical considerations.",1970
Formal requirement management for the Responsive and Formal Design process,"In this paper, we present the formal requirement management of the Responsive and Formal Design (RFD) process that extracts a formal theory from requirements written in a natural language. The RFD process was developed as a procedure used in designing Cyber-Physical Systems (CPS) and represents an integration of Model-Based Systems Engineering (MBSE) with formal methods to ensure a “correct-by-construction” design. The extraction of a formal theory is based on Channel Theory as developed by Barwise and Seligman, which is established as a framework for the “flow of information” in terms of category theory. A system consists of components connected via channels. Each component is viewed as an information-flow network and mathematically modeled using a notion of a classification. A classification is a table representation of an information-flow network. Regularities (that represent global behavior of the system) of a classification are captured using a theory (a set of formulas or constraints). One goal of the RFD process is to insure that the requirements are formally consistent. In this paper, we develop a set of algorithms that extracts a theory from a classification, though the theory is not necessarily unique. This work is inclusive of an algorithm which checks whether a regular closure (based on structural rules) of a theory is a theory of a given classification. An example of this work is demonstrated through a satellite communication Store and Forward operation.",1970
MOF compliant fundamentals for multi-domain system modeling and simulation,"Modern software frameworks for Model-Based Systems Engineering (MBSE) methodologies are proprietary and commonly restricts to a poor choice of domain specific languages. Furthermore, the interoperablity and model interchange support between frameworks is a technically hard challenge. The industrial strength standard OMG MOF (Meta-Object Facility) is a solid approach for the definition of domain specific languages. Applying meta-modeling techniques to existing modeling and simulation frameworks reduces obscurity of proprietarity and implicitely language characteristics. On the other hand, standard compliance improves product openness/transparency, reliability and confidence as for primary modes of operation. This paper presents a methodology to incorporate methods of meta-modeling and standard compliant domain specific languages in an existing modeling and simulation framework. First results are emerged and exemplified for an effective modeling dialect called MML (MLDesigner Modeling Language). Future prospects reviews already accomplished goals in this project, address several alternatives and improvements and gives an overview of ongoing development.",1970
Research on Requirements Decomposition Method of Integrated Diagnostics Based on Capability Evaluation,"With the application of model-based systems engineering(MBSE) methodology in the process of equipment development, requirements of integrated diagnostics is no longer limited to a few quantitative testability indicators, but puts forward more qualitative capability requirements about condition monitoring, diagnostic reasoning, fault information reporting. But the existing methods can only realize the allocation of quantitative indicators, and there is still a lack of decomposition method of itemized requirements for integrated diagnostics. Thus, this paper proposes a requirements decomposition method of integrated diagnostics based on capability evaluation. Facing all dimensions of capability evaluation, this method defines the trade-off elements and objective function of integrated diagnostics, and puts forward the recommended parameter configuration scheme for different development stages. Finally, this paper presents the specific implementation ways of this method combined with typical cases, which helps to solve practical problems in the development process, such as inadequate requirements decomposition, unable to restrict and guide the design.",1970
Modeling of electrical interface of electromechanical management system based on Saber,"The design and function verification of aircraft electromechanical management system mainly based on test have the disadvantages of long developing cycle and high cost. Therefore, combined with the idea of Model-based Systems Engineering (MBSE), it is of great engineering significance to establish a simulation platform of integrated control management system to replace the test and form an integrated simulation support environment for the research of integrated control management. A modeling and simulation method of electrical interface function and performance is developed based on Saber, which aims at aircraft electrical interface characteristics of electromechanical management system. With analog modeling, digital modeling, analog-digital modeling and embedded modeling, mechanical and electrical management electrical interface components and circuits are modelled. The electromechanical management electrical interface integrated simulation system, which is in high precision, fine granularity, and high degree of confidence, is built to promote the process of aviation simulation instead of test.",1970
Model-based Development of a System of Systems Using Unified Architecture Framework (UAF): A Case Study,"In the development of safety- and security-relevant systems the V-model is established providing verification possibilities at each development stage. Usually, methods and tools of Model-based Systems Engineering (MBSE) are used in combination with the V-model for the development of single and self-contained complex systems. Nowadays, ubiquitous connectivity leads to a high degree of communication between systems enabling their cooperation for the provision of new services in a so-called System of Systems (SoS). In contrast to conventional systems engineering new methods and tools are required for service enabling SoS. In order to fulfill requirements of System of Systems Engineering (SoSE) the Object Management Group (OMG) developed the Unified Architecture Framework (UAF) for representation of enterprise architecture. This paper presents an approach for model-based development of SoS using UAF according to the V-model. In addition, an application of this new method shows differences between single system and SoS development methods.",1970
Requirements for a System Model in the Context of Digital Engineering,"The vision of achieving digital engineering in the US Department of Defense has instigated work on defining the information content and structure of the system model. However, few seem to have asked what are the requirements for the system model? In this paper, we use a requirements process to elicit and define the requirements for the system model. The system model is a digital artifact containing descriptions of all the essential objects, their properties, and the relationships between them for the system-of-interest (SoI). The paper describes the context of the system model in relationships to the other components of model-based systems engineering (MBSE) consisting of a modeling language, schema, model-based process, presentation framework, MBSE tools, and knowledgeable workforce. The paper describes how these components interact to provide effective MBSE. Requirements are stated for each component. The paper additionally derives information requirements for the system model according to the systems engineering process's information needs by examining the inputs and outputs of each activity in the systems engineering process. Lastly, the paper derives the quality characteristics for the system model from the literature on ontologies, modeling languages, and semiotics. The result is a set of requirements for the system model to support MBSE and the digital thread.",1970
Seamless Integration between Real-time Analyses and Systems Engineering with the PST Approach,"Cyber-physical systems are becoming more and more connected as it is the case for the railway domain. This introduces the need for smart monitoring and communication services besides the traditional control-command functions. As a consequence, more complex architectures are required to leverage connected technologies. This challenges traditional processes used to develop such systems. Model-based system engineering (MBSE) has been proposed to tackle this challenge by allowing virtual integration of the system in order to discover flaws earlier in the development process thus reducing rework costs. MBSE requires that several models of the system are conjointly used to assess architectures at different levels of abstraction starting from the overall system level down to specialty domains. However, there is currently a lack of approaches for using these models conjointly to perform virtual integration. In this paper, we present the PST approach allowing seamless integration between systems engineering and real-time specialty domain analyses to support virtual integration. The approach is illustrated with a system from the railway domain; the on-board equipment of the European Train Control System (ETCS).",1970
A Requirements Validation Framework for Major Infrastructure Projects,"With billions of pounds in lost time and mistakes, the digitisation of information in the construction industry provides the biggest opportunity for improving the built environment assets that people use every day. There is a continued push to improve management and delivery of the best possible products for the users. With growing recognition that more intelligent methods for planning and designing assets is required. Whilst the construction sector made significant gains through the current information digitisation efforts, there is still vast amounts of information that needs to be digitised to ensure usability and add more value to the lifecycle of an asset. This paper provides the initial framework to analyse the impact of requirements validation of an infrastructure asset with real world data, using ifc, asset register and GIS files to demonstrate compliance. It uses systems engineering principles for the application of requirements decomposition, breakdown, and modelling of various MBSE models to show how a function and capability can be validated using semantic web techniques to exchange data. The framework is demonstrated through a highlevel case study for the compliance of a fire safety system of a railway station, based on system and construction data models. Further validation has been accomplished through subject matter expert feedback.",1970
Design of the Environmental Control System of an Unmanned Aerial Vehicle through the MBSE,"Current transformation of the aircraft industry promotes a transition from the document-based to the model-based approach. In this paper, the design of the Environmental Control System (ECS) of an Unmanned Aerial Vehicle (UAV) is developed. This case is exploited to drive the Model Based Systems Engineering (MBSE) implementation towards an effective reuse; to interoperate the functional modelling based on the IBM tools with the numerical simulation provided by the AMESIM® toolbox; and to define a suitable process of heterogeneous simulation, while performing the trade-off activity, through a traced allocation of requirements.",1970
Extension of MBSE for project programmatics management on the Asteroid Redirect Robotic Mission,"Model-based Systems Engineering can be employed beyond management of the technical architecture development of a system to also manage the programmatics associated with Systems Engineering activities of a project. On NASA's Asteroid Redirect Robotic Mission, MBSE has been successfully employed to manage, generate, and interact with the documentation-based deliverables associated with System Engineering activities. This has been involved in defining and tracking project document, milestone, and personnel metadata via the same modeling framework used for the technical architecture management. Additionally, it has focused on improving overall user experiences through linkage of documentation to technical content in the system model, automation of manually intensive tasks, and others stakeholder-oriented features.",1970
A Model Centric Framework and Approach for Complex Systems Policy,"Twenty-first century systems engineering is no longerdocument-centric; instead, it is model-centric. Model-centric systems engineering helps reduce ambiguity, increase clarity, and increase the analytics of the resulting complex systems. However, complex systems are governed by organizational policies that are still document-centric. Such policies are difficult to analyze, and gaps in policy can lead to major deficiencies in the resulting complex systems. This article introduces a framework for policy content modeling (PCM) and analysis. The framework represents the conceptual view and is supported by a step-by-step approach to achieve complete policy modeling and analysis. This approach was used with the intention of identifying and analyzing gaps in policy content and calculating policy toxicity, which negatively affects the resulting system. This framework and approach was also applied to Veterans Affairs (VA) and university policies. The VA PCM is conducted to discover toxicity in the policies and University policies modeling is done to graphically represent an undocumented policy and toxicity in the policy implementation.",1970
KAUSAL: A New Methodological Approach for Model Based Analysis of Complex Failure Chains by Example of an Electromobility Concept,"The increasing complexity of modern products is the cause of many problems concerning safety and technical reliability. Especially in the field of public transport, the consequences of failures are disastrous. In order to prevent this matter, many techniques have been developed for failure analysis such as FMEA (Failure Mode Effects Analysis) or RBD (reliability block diagram). However, those techniques cannot handle the complexity in a mechatronic system, because they are still fragmentary. Therefore, it is necessary to develop an approach, which be able to analyze interactions between all system elements and their failures. For this purpose, the fundamental principles from Systems Engineering are an optimum solution to understand the complexity of a system in order to prevent potential failure by using a model based failure analysis. But, how can failure chains be represented and analyzed transparently in the system model? Are there any possibilities to combine determined failure chains with established methods of different disciplines for a holistic analysis? These crucial questions form the major part of this article and will be demonstrated by example of an electromobility concept.",1970
The Systems Engineering DevOps Lemniscate and Model-Based System Operations,"Systems engineering is defined as a “full life cycle” discipline and provides methodologies and processes to support the design, development, verification, sustainment, and disposal of systems. While this cradle-to-grave concept is well documented throughout literature, there has been recent emphasis on evolving and digitally transforming systems engineering methodologies, practices, and tools for the latter phases of system life cycles. This article adapts principles from the software engineering domain DevOps concept (a collaborative merger of system development and operations) into a Systems Engineering DevOps (SEDevOps) life cycle model. This facilitates a merger of systems engineering processes, tools, and products into a surrogate operational environment in which the sustainment of a system is tied closely to the curation of a system model expanded to include the enabling system elements necessary for operations and sustainment (procedures, scripts, etc.). This progression of the systems engineering mindset, focused on digitally transforming and enhancing system operations and sustainment, improves agility in later life cycle phases. A framework for applying SEDevOps is introduced as a new systems modeling language profile. A use-case leveraging this “model-based system operations” framework, shows how merging support elements into a spacecraft system model improves adaptability during operations, exemplifying elements of a DevOps approach to cyber-physical system sustainment.",1970
Functional Modelling and IDEF0 to Enhance and Support Process Tailoring in Systems Engineering,"The primary reference to modern systems engineering procedure is the International Council on Systems Engineering (INCOSE) Systems Engineering Handbook. The main problem of such handbook is that it has a very high degree of complexity and could appear fragmented as well as challenging to follow for readers, coupled with the isolation of the Input-Process-Output (IPO) diagrams that withhold an overall system vision of the discipline. The authors highlight the embedded complexity of systems engineering and in particular of the INCOSE Systems Engineering Handbook identifying process modelling as a viable and efficient solution. The authors propose IDEF0 as an ideal modelling technique due to the similarity of the IDEF0 diagrams with the IPO diagrams and the addition of the functional modelling hierarchical decomposition. Concluding, the authors present an example of the benefits that using the model, rather than referring to the handbook alone, yield to process tailoring in terms of efficiency and overall system optimisation.",1970
No need to learn from each other? — Potentials of knowledge modeling in autonomous vehicle systems engineering towards new methods in multidisciplinary contexts,"Engineering autonomous driving functions has become a dramatic challenge in automotive engineering since it is now required to integrate knowledge from multi-disciplinary domains. In this context, the widespread engineering methods are showing their limit since they mainly integrate technological centered point of view. Thus, these new requirements lead naturally to the design of new method for engineering in automotive field. The goal of this paper is to sketch an overview of the possible improvements that Knowledge Modeling and ontologies can bring to Systems Engineering and especially in the case of Autonomous Driving functions.",1970
A Tooled Methodology for the System Architect’s Needs in Simulation with Autonomous Driving Application,"Model Based Systems Engineering (MBSE) is a promising solution to formalize and communicate information about the design of complex systems, in particular for the automotive industry which faces new challenges associated to autonomous driving. Numerical simulation is commonly used to support the design of these complex systems, but the possible relations with MBSE should be further investigated. This work, conducted with academic and industrial partners at the research institute IRT SystemX, aims at further bridging the gap between system architecture and numerical simulation. An industrial design problem related to the design of an autonomous vehicle passing traffic lights is used to validate and illustrate new methods and tools based on SysML. Their aim is to: 1) guide the formulation of a question requiring simulation, called solicitation, by the system architect 2) guide the design of a simulation architecture by the simulation architect with a special focus on the consistency with the system. A Java plugin was developed in the SysML editor Papyrus for the solicitation, and a SysML metamodel was defined for the simulation architecture. The solicitation associated to the industrial design problem is answered by a multiobjective optimization of the vehicle's cost and electrical consumption using a co-simulation between the tools Simulink and Amesim.",1970
Developing a CubeSat Model-Based System Engineering (MBSE) reference model — Interim status #3,"Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support key systems engineering tasks for addressing requirements, design, analysis, validation, and verification. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) has been investigating the applicability of MBSE for designing CubeSats. Our application of MBSE is enabled by the graphical modeling language Systems Modeling Language (SysML). SysML is used to model all aspects of a system either directly or through interfaces with other models. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. The CubeSat Reference Model provides the logical architecture. The logical elements can be reused as a starting point for a mission-specific CubeSat logical architecture, followed by the physical architecture and the CubeSat development. Our prior work established the CubeSat Reference Model domain as consisting of the stakeholders, CubeSat enterprise, external environment, and external constraints, with the CubeSat enterprise consisting of space and ground segments. The CubeSat enterprise architecture has been refined to accommodate an external service providing CubeSat transportation to a launch site, integration into a launch vehicle, launch, and deployment. It has also been refined to accommodate a CubeSat project developing its own ground station or operating with an existing ground station that provides uplink and downlink services. Space and ground subsystems had been identified in our prior work. Use cases have now been established to further define the subsystem capabilities. It has been recognized that there are two modeling efforts. One is the SSWG developing a CubeSat Reference Model with its logical architecture. The other is a team eventually taking the CubeSat Reference Model as a basis for its mission-specific logical and physical architectures. Therefore, there are two categories of stakeholders. A stakeholder is any entity that has an interest in the system. The stakeholders for the CubeSat Reference Model include INCOSE, the Object Management Group (OMG), regulatory agencies, and the university teams that will be using the CubeSat Reference Model. We are exploring having NASA, NOAA, and FCC regulations contained within their own SysML models and connecting those models to our CubeSat Reference Model. The stakeholders for the mission-specific CubeSat model are those with an interest in the mission-specific CubeSat space and ground system. Typical stakeholders for a space and ground system include sponsor, user, operator, project manager, project engineer, developer, and tester. The list of stakeholders for a university CubeSat project is much smaller. We are collaborating with OMGs Space Domain Task Force (SDTF) to adopt the CubeSat Reference Model as an OMG specification.",1970
Application Practice of Model-Based System Engineering Method in Civil Aircraft Cabin Pressure Control System Design,"With the improvement of the complexity of civil aircraft,Model Based Systems Engineering(MBSE) plays more important role in the aircraft design nowadays. In this paper, an architecture design method based on MBSE applied in aircraft cabin pressure control system is introduced. A top-down design process including functional physical architecture analysis is presented to ensure final solution can meet stakeholder needs. Functional architecture produced by functional analysis which transfers stakeholder needs and top-level requirements to design requirements has great effects on physical solution design. Physical architecture which is implementation of functional architecture provides enough detail to synthesize a physical architecture. This paper proposes a framework for efficient architecture based MBSE which can also provide common understanding of the scope and characterization of the system for engineers involved in system design. It shows that the proposed MBSE method significantly improves synthesis of design and integration, and ensure the requirements can be properly implemented",1970
Improved System Engineering Technical Review’s Entrance/Exit Criteria with Model Maturity Metrics,"Existing Systems Engineering Technical Reviews (SETR) are currently reliant on static, document-based Entrance/Exit Criteria (EEC) and Objective Qualifying Evidence (OQE) which is often disjointed and difficult to follow. With the implementation of Model-Based Systems Engineering (MBSE) a more qualitative set of EECs, based on expected levels of Descriptive System Model (DSM) maturity, can be used to evaluate readiness for SETR completion. A paradigm shift of this magnitude requires stakeholder buy-in and input to determine evaluation factors for DSM maturity. The ability to dynamically assess model maturity requires well defined. relation-mapping and methodology. Given the above conditions are met, a metric suite can be established, within a profile, to assess a model's maturity and quality. The metric suite can be applied to any model using the same mapping and methodology. The metric suite probes the model and returns a maturity percentage that can be compared to predetermined, tailorable values. This assessment can then be used to determine readiness for a given SETR milestone.This paper captures a proof of concept experiment for implementing metrics as a portion of Entrance Criteria for a Critical Design Review. A subset of metrics was developed to build stakeholder buy-in, indicating the development of a system has matured sufficiently to be reviewed for a SETR milestone decision. The initial demonstration was well received and there are continuing efforts to improve the ability to assess a model's maturity for SETR milestones. The experiment identified that the metrics are unable to assess against gap information. In contrast, the benefits gained from using a dynamic set of entrance criteria include enabling a more event-based SETR, improved confidence in the model's validity, and can be used to provide more data to assist with effort resource planning.",1970
The roles of modeling and simulation in assessing spacecraft Integration Readiness Levels,"Introducing new technologies in Complex Products and Systems (CoPS) requires in-depth knowledge of technology and the system integration process. Technology Readiness Assessment (TRA) is a systematic evidence-based process that assesses technology maturity based on Technology Readiness Levels (TRL). System Readiness Assessment (SRA) is the process of conducting integrated assessments of a developing system to assess technology maturation and provide a systemic understanding of the development life-cycle. The Integration Readiness Levels (IRL) scale complements TRL in representing integration between technological elements in a system, and both scales are used in SRA to calculate system readiness metrics. SRA is expected to be an emerging systems engineering best practice and has evolved over the last decade. However, SRA does not explicitly guide whether simulation could comply with IRL dedicated to interface verification and validation. Modeling and simulation (M&S) play many roles in systems engineering. Digital and M&S technologies advancement, as Model-Based System Engineering (MBSE) and digital twins, may contribute to reducing space missionś costs and schedule, along with trends in systems and technology reuse. This research identified the possible roles of modeling and simulation in assessing spacecraft Integration Readiness Levels. Results showed M&S possible roles for each IRL and whether the roles were essential or support to achieve IRL. Also, a link between system life cycle processes and these results contributes to the SRA research stream. A case study with the China-Brazil Earth Resources Satellite (CBERS) program was used to validate part of the proposed theory, in line with other cases extracted from the literature. This paper contributes to the SRA research stream with these theoretical and practical results, by suggesting future studies that could improve SRA practice and consequently support the decision-making on technology introduction in CoPS.",1970
Be Lean — How to Fit a Model-Based System Architecture Development Process Based on ARP4754 Into an Agile Environment,"An emerging service is moving the known aviation sector in terms of technology, paradigms, and key players the Urban Air Mobility. The reason: new developments in nonaviation industries are driving technological progress in aviation. For instance electrical motors, modern sensor technologies and better energy storage expand the possibilities and enable novel vehicle concepts which require also novel system architectures for flight control systems. Their development is governed by aviation authority and industry recognized standards, guidelines and recommended practices. Comprehensive methods for Model-Based Systems Engineering exist which address these guidance materials but their setup and their application can be quite resource-demanding. Especially the new and rather small key players - start-ups and development teams in an educational environment - can be overwhelmed to setup such development processes. For these clients, the authors propose a custom workflow for the development of system architectures. It shall ensure development rigor, quality and consistency. The authors show how the custom workflow has been established based on the ARP4754A and its level of compliance to the standard’s process objectives. Based on automation of life cycle activities, manual effort can be reduced to allow the application even in small teams. The custom workflow’s activities are explained and demonstrated within a case study of an Experimental Autopilot system architecture.",1970
Model based document and report generation for systems engineering,"As Model Based Systems Engineering (MBSE) practices gain adoption, various approaches have been developed in order to simplify and automate the process of generating documents from models. Essentially, all of these techniques can be unified around the concept of producing different views of the model according to the needs of the intended audience. In this paper, we will describe a technique developed at JPL of applying SysML Viewpoints and Views to generate documents and reports. An architecture of model-based view and document generation will be presented, and the necessary extensions to SysML with associated rationale will be explained. A survey of examples will highlight a variety of views that can be generated, and will provide some insight into how collaboration and integration is enabled. We will also describe the basic architecture for the enterprise applications that support this approach.",1970
Model-based verification and validation of the SMAP uplink processes,"Model-Based Systems Engineering (MBSE) is being used increasingly within the spacecraft design community because of its benefits when compared to document-based approaches. As the complexity of projects expands dramatically with continually increasing computational power and technology infusion, the time and effort needed for verification and validation (V&V) increases geometrically. Using simulation to perform design validation with system-level models earlier in the life cycle stands to bridge the gap between design of the system (based on system-level requirements) and verifying those requirements/validating the system as a whole. This case study stands as an example of how a project can validate a system-level design earlier in the project life cycle than traditional V&V processes by using simulation on a system model. Specifically, this paper describes how simulation was added to a system model of the Soil Moisture Active-Passive (SMAP) mission's uplink process. Also discussed are the advantages and disadvantages of the methods employed and the lessons learned; which are intended to benefit future model-based and simulation-based development efforts.",1970
A Model-Based System Engineering Approach for aviation system design by applying SysML modeling,"Aviation systems are characterized by the synergic interaction between their components from different technological domains. These interactions enable the system to achieve more functionalities than the sum of the functionalities of its components considered independently. Recently, Model-Based Systems Engineering (MBSE) is an interdisciplinary approach for handling complexity during product development. However, the generic methodology guides the engineers toward a specific model-based system design is lacking. Besides, it still calls for efforts on investing in a specific case study. To overcomes the gaps, this paper proposes a generic model-based system engineering methodology to conduct the mission and system-specific design for aviation systems development.",1970
Model-Based System Engineering Adoption in the Vehicular Systems Domain,"As systems continue to increase in complexity, some companies have turned to Model-Based Systems Engineering (MBSE) to address different challenges such as requirement complexity, consistency, traceability, and quality assurance during system development. Consequently, to foster the adoption of MBSE, practitioners need to understand what factors are impeding or promoting success in applying such a method in their existing processes and infrastructure. While many of the existing studies on the adoption of MBSE in specific contexts focus on its applicability, it is unclear what attributes foster a successful adoption of MBSE and what targets the companies are setting. Consequently, practitioners need to understand what adoption strategies are applicable. To shed more light on this topic, we conducted semi-structured interviews with 12 professionals working in the vehicular domain with roles in several MBSE adoption projects. The aim is to investigate their experiences, reasons, targets, and promoting and impeding factors. The obtained data was synthesized using thematic analysis. This study suggests that the reasons for MBSE adoption relate to two main themes: better management of complex engineering tasks and communication between different actors. Furthermore, engagement, activeness and access to expert knowledge are indicated as factors promoting MBSE adoption success, while the lack of MBSE knowledge is an impeding factor for successful adoption.",1970
Data-Driven Safety Verification of Discrete-Time Networks: A Compositional Approach,"This letter proposes a compositional data-driven approach for safety verification of networks of discrete-time subsystems with formal guarantees. Following a modular approach and for each subsystem, we search for a so-called sub-barrier candidate represented as a linear combination of a priori user-defined basis functions. We formulate the conditions on sub-barrier candidates as robust convex programs (RCPs) which are semi-infinite linear programs. Collecting sampled data from each subsystem, we approximate each RCP via a scenario convex program (SCP) which is a finite linear program. We provide an explicit formula to compute the minimum number of sampled data guaranteeing a desired mismatch between the optimal value of each RCP and that of the corresponding SCP in a probabilistic sense. To ensure that the sum of the sub-barrier candidates is a barrier function for the whole network, we define a global dissipativity condition on top of the local SCPs. The local SCPs are thus related to each other via this global condition. This results in a large-scale optimization problem in a standard canonical form which is efficiently solved by the alternating direction method of multipliers (ADMM) algorithm. The effectiveness of our approach is illustrated by applying it to a room temperature control problem in a 100-room building.",1970
THEFOSE - Theoretical Foundations of System Engineering: A first feedback,"System engineering has experienced multiple successes over the years in various industrial projects with a strong emphasis in defense and aerospace. Recently, system engineering has gained several contributions from theory, however the field still lacks a strong theoretical foundation. This request for more theoretical foundations come from both academia and industry in order to make the best of system engineering practices and experience in increasingly multidisciplinary projects. Several research topics need to be addressed such as formal definitions of system engineering terms and concepts, systems semantics, complexity theory of multidisciplinary systems, and formal analysis of system engineering processes and standards. The impact of theoretical computer science on languages (e.g. SysML) and tools used by system engineers, the integration of quantitative methods (e.g. formal methods, value driven design, petri-nets, design space optimization, etc.) with MBSE methods and processes, along with system engineering languages (SysML) and its variants will also be included. This paper proposes a short review on the first special session - THEFOSE - Theoretical Foundations of System Engineering held at the IEEE SYSCON 2015 Conference on System Engineering.",1970
Research on the usage of model element library in airborne software,"With the increasing complexity of the safety-critical airborne system, the traditional design method is difficult to meet the high-security requirements of the civilian aircraft system. Motivated by this question, this article investigates the model-based systems engineering (MBSE) method, especially from the perspective of the airborne software design and verification. By comparing and analyzing the characteristics of SCADE and Matlab software for auto-generated source code, Matlab/Simulink is chosen as the model-based software tool in this paper and is customized to be compliant with the DO-178C/331 airworthiness standard for airborne software. The practice is to explore how to package Matlab/Simulink native blocks into User-Defined Blockset and finally a collection of custom blocks can be utilized as a modeling aid to the software/model development team. This thesis will take the block library of DeadZone as an example to describe the activities performed to facilitate the Library with Inline Code to be compliant with DO-178C/331 objectives.",1970
Application of model based system engineering to IMA development activities,"IMA development is highly complex due to the highly collaborative development nature required by IMA. There are benefits to airframer and system suppliers, but these benefits can only be achieved efficiently through a highly organized methodology. Model Based Systems Engineering facilitates this process by shortening development time and cost. Application of MBSE in the IMA system development activities can shorten development lifecycle duration, cost and reduce integration risks. MBSE can be used throughout the IMA system development process, including the following phases: requirements capture, architecture definition, configuration, integration and verification.",1970
A model-based risk management approach - Marketing vs safety case study,"There may be many points of view that need to be considered when identifying, defining and assessing risks. A context based approach supports the identification and understanding of risks as well as providing a focus for risk assessments through the application of different viewpoints. This paper uses the ability to focus on viewpoint to provide the identification of concerns and risks. It discusses ways to identify system views from which concerns can be elicited and proposes the views needed to present cause and effect analysis. Finally, mitigation views will be discussed which are used to present possible system changes based on the results of analysis. A safety critical situation directly related to marketing and business needs will be discussed. This case study will show how the views can be used and how they integrate with existing Model-Based Systems Engineering (MBSE) approaches.",1970
Model-Based STPA: Towards Agile Safety-Guided Design with Formalization,"The competition for market entry in emerging segments such as Urban Air Mobility highlights the need for efficient and flexible development processes. This is accompanied by the trend towards software-intensive avionics systems due to the requirement for complex and computationally expensive algorithms. Considering the successful application of agile developments in the software domain, one might conclude that the agile paradigm would be the perfect fit to address these issues. However, for highly safety-critical domains such as aviation, multiple conflicts with the agile paradigm exist. Especially the constraint to follow rigorous and well documented processes contradicts the ideas of agile. To bridge this gap, a comprehensive and well documented, but still flexible process is necessary. Accordingly, this paper proposes a first step towards such an agile safety-guided design, by combining Model-Based Systems Engineering with the System-Theoretic Process Analysis. Particularly, focus is placed on enabling an iterative safety-guided design by providing functionality to track design changes to the corresponding safety artifacts. This automated functionality is enabled by a formalized execution of the safety analysis. At first glance, formalization sounds like a contradiction to the agile paradigm. However, we argue that formality and agility are not necessarily contradicting each other. Our theory is that moving the focus of formality from the human activities to the assisting functionality even increases overall agility. The iterative safety-guided design and resulting identification of safety improvements is demonstrated with examples of a flight assistance system.",1970
Applying model-based Co-Simulation on modular Production Units in Complex Automation Systems,"Contemporary manufacturing systems face major challenges driven by the ongoing integration of intelligent manufacturing components, mainly caused by the emergence of the Industrial Internet of Things (IIoT). As the interplay of those Cyber-physical Systems (CPS) itself forms a System of Systems (SoS), engineering such a system becomes a difficult task. This is mainly attributed to the evolutionary development of its independently operating components, which results in some kind of unpredictable and often undesirable behavior. Considering this from a developer’s perspective, it is important to investigate the system’s behaviors before its actual implementation. However, as methods applied in Model Based Systems Engineering (MBSE) have proven to be a major technology driver when it comes to developing the architecture of these industrial systems, their simulation is still not standardized. Thus, this paper introduces an Industry 4.0 specific tool-chain enabling the co-simulation of components within any developed industrial system architecture. This allows the investigation of varying industrial CPS and their interplay during run-time with the goal to detect undesired emergent behaviors. By doing so, the model is developed regarding the specifications of the Reference Architecture Industrie 4.0 (RAMI 4.0), while Mosaik is the tool of choice for creating the Co-Simulation environment. In order to validate the developed tool-chain, a case study utilizing modular production units within an industrial automation system is applied.",1970
Iterative feedback design of de Laval nozzle,"The cold gas propulsion through de Laval nozzles is a convenient way to enable position and attitude manoeuvres of groundbased satellite simulators. A parametric model of a de Laval nozzle is established base on the theory of one-dimensional isentropic flow, and the methodology of Model-Based Systems Engineering (MBSE) is adopted to guide the iterative feedback design process. In the process of design, the effect of design factors on the nozzle performance are evaluated, such as nozzle shape, length of convergent and divergent section, inlet and outlet diameters, and throat diameter. Simulation and experimental results demonstrate the improvement of the nozzle performance through iterative feedback design.",1970
Low-Cost System Architecture Solutions for Small Unmanned Aircraft Traffic Management,"As commercial and hobbyist interest in small, unmanned aircraft systems (sUAS) grows, traffic density in our low-altitude airspace is rapidly increasing. With many of these vehicles providing the human operator knowledge of their location through line-of-sight observation, often without integrated collision avoidance technology, sUAS are presenting an increasing concern for the safety and security of individuals on the ground below, as well as all air vehicles in low altitude airspace. Government, industry partners, and academia have collaborated for the past decade to develop an understanding and potential solutions to the communication deficiencies between sUAS operators, air traffic controllers, and air vehicles. These activities have paved the way for dramatic innovation to overcome the deficiencies in situation awareness of sUAS operators and air traffic controllers with regard to proximity operations of sUAS with each other, ground-based obstacles and potentially manned aircraft. This research has proposed system architectures based upon the needs of government and commercial entities. Simultaneously, the hobbyist community has also recognized this problem and began developing competitive technologies consistent with their perceived needs. These solutions vary along multiple dimensions, including safety, security, and cost. This paper will employ Model-Based Systems Engineering (MBSE) to perform an architectural analysis of technologies related to the emerging solution set with the goal of uncovering a promising architecture solution for the future of UAS traffic management (UTM) which provides the potential for an integrated solution between these communities.",1970
Use of SysML for Quantitative System Reliability and Availability Analysis,"In projects using Model Based Systems Engineering (MBSE) and SysML, it is now possible to easily perform reliability/availability modeling and prediction starting at the conceptual design phase and continuing throughout the development using the SysML reliability library and SysML profile described here. The innovation is the way in which the profile extends standard SysML model elements to reliability and availability analysis. Values for failure rates, restoration rates, recovery probabilities, and other parameters are entered by SysML designers at the time they are creating the system and stored in SysML. Equations for reliability block configurations (series, parallel, active/standby and k out of n) have been implemented and included in the version of the library presented here. An example demonstrated the application of the library model elements. Also discussed were model verification and how the library can be extended.",1970
Command Pattern-based MOF Design and Testing,"With the development of science and technology, the systems become more and more complex, and the difficulty of system development and maintenance also increases. To solve this problem, researchers propose MBSE(Model-Based Systems Engineering) and its standard system language SysML. At present, there are not many system modeling tools, and their scalability and quality need to be improved. This paper explores the design and testing of MOF(Meta Object Facility) based on the command pattern, trying to improve the expansibility and software quality of SysML modeling tools. Firstly, the MOF layer based on the command pattern is implemented to maintain the model data, then an existing modeling platform is refactored based on this base layer, and a large number of test codes are generated to ensure the reliability of the system. The experimental results show that the scalability and reliability of the system have been effectively improved.",1970
The conception of a large-scale Systems Engineering environment,"With the rise of artificial intelligence, it is time to shape the systems engineering tooling environment for the future. In the last decade, we have seen several emerging technologies that will potentially have a great impact in complex systems. These new technologies are expected to cause a disruptive impact not only in the products but also in to the tools used across the whole product life cycle. For this reason, is imperative to perform a critical review of the current systems engineering tooling ecosystem. This assessment should also map the open research problems that could prevent the complete integration of the new technologies into the systems engineering framework. This paper proposes a new architecture for a system engineering environment to operate in large scale projects. The objective of this research is twofold: it will first identify the capabilities for the next generation platform, and secondly, it will evaluate how artificial intelligence applications can be integrated in compliance with DO-330. The concept developed by this research will drive tool design recommendations enabling the use of artificial intelligence driven applications in a systems engineering tooling ecosystem.",1970
A Declarative Approach for Transforming SysML Models to Executable Simulation Models,"Systems Modeling Language (SysML) is an object management group standard for systems-of-systems engineering. It enables the description of complex system models; however, it cannot effectively support all system engineering activities. For instance, system performance evaluation is usually performed via simulation. In this case, the transformation of SysML system models to executable simulation models for specific simulation methodologies and tools is required. Model transformation is a key component for addressing the challenges of seamless integration of SysML model simulation in model-based system engineering. In this paper, we explore a declarative approach, based on the query/view/transformation-relations (QVT-R) standard, for the transformation of SysML models to executable simulation models, fully adhering model-driven architecture (MDA) concepts. It is supported by a framework implemented to provide executable simulation model and code generation. Methodological guidelines, for the effective use of a declarative language as QVT-R, for model transformation, are provided, emphasizing the utilization of existing domain-specific SysML profiles, as well as executable simulation library components. The experience obtained from two different domains, namely, enterprise information and railway transportation systems, modeled as systems-of-systems via SysML, is discussed, based on a quantitative analysis of the respective QVT-R transformations.",1970
System-of-Systems Quality Attribute-Based Architectural Alternatives,"Building on a previously published research into a system-of-systems (SoS) quality attribute (QAt) balancing approach, this article extends the identification of desired characteristics for a selected as-is SoS architecture into defined design configurations as candidate architectures. We propose a process framework for the identification of the desired characteristics as QAts of interest to be balanced against selected performance measures. We show the extension of QAts to operational activities to be accounted for within the architecture and design techniques for employment against an as-is SoS architecture. We show how the operational activities and design techniques can be mapped to metrics used to compare alternative design configurations. These design configurations are then quantified in terms of the metrics for later comparison. We illustrate the framework using a generic DoD satellite communications (SATCOM) case study. Although our focus here is on a SATCOM example with a selected sub-et of attributes, the framework can be extended to address multiple similar issues across a multidomain space.",1970
Enabling the Digital Transformation of the Workforce: A Digital Engineering Competency Framework,"This paper describes the goals, approaches, initial results, and preliminary implementation of WRT-1006, a multiphase research task within the Systems Engineering Research Center (SERC). Evidence across the Services and industry has affirmed digital engineering is a critical practice necessary to support acquisition in an environment of increasing global challenges, dynamic threats, rapidly evolving technologies, and increasing life expectancy of our systems currently in operation. Digital engineering updates the systems engineering practices to take full advantage of computational technology, modeling, data analytics, and data sciences. The Department of Defense's vision for digital engineering is to modernize how the Department designs, develops, delivers, operates, and sustains systems, while continuing to practice systems engineering efficiently and effectively. Digital transformation is fundamentally changing the way acquisition and engineering are performed across a wide range of government agencies, industries, and academia. As the Department of Defense (DoD) transitions to digital engineering, there is a need to develop and maintain an acquisition workforce and culture that is literate in model-based engineering, competent in digital engineering models, methods, processes, tools, and understands digital artifacts across the acquisition lifecycle. One of the critical steps that was identified to enable this digital transformation is the development of a competency model that can be used to modernize the workforce. This paper outlines the results after completion of Phase 1 of WRT-1006, which concluded in the initial release of the Digital Engineering Competency Framework (DECF) by SERC, and the initial Phase 2 efforts of implementing the framework as a benchmark for the content of a digital engineering training curriculum. The purpose of the DECF is to provide clear guidance for the DoD acquisition workforce, in particular the engineering acquisition workforce, through clearly defined competencies that illuminate the knowledge, skills, abilities, and behaviors required for digital engineering professionals. The approach taken to develop the DECF drew from existing competency models in fields neighboring digital engineering and from the feedback of experienced practicing digital engineering community. The initial version of the DECF v.1.0 was released as a key WRT1006 Phase 1 result with confidence in the maturity of the structure and general content. The overarching structure of the DECF v.1.0 consists of competency areas, proficiency levels within the competency, and constituting knowledge, skills, abilities, and behaviors (KSABs). Now that this benchmark is established, the second phase of our project involves the comparison of the DECF to the existing Defense Acquisition University (DAU) curriculum to determine what elements of such existing curriculum already support the competencies in the model. This is a bidirectional analysis that will both identify gaps in the training curriculum and potentially identify curriculum content that should be incorporated into the competency model. Although this project is specifically applying the DECF to the acquisition process, the model has applications in any area that will implement Digital Engineering initiatives. Furthermore, this framework has additional use cases that will be explored further including hiring for Digital Engineering positions and ensuring the current work force has the necessary skillsets to adequately implement a digital transformation.",1970
Utilizing an Enterprise Architecture Framework for Model-Based Industrial Systems Engineering,"Accompanied by the fourth industrial revolution, current and future manufacturing systems are undergoing a major transformation. Driven by the integration of cyber-physical systems and the thereby resulting autonomy of its single components, organizing the interplay of its physical counterparts becomes more and more challenging. In order to structure and realize such an industrial system in a collaborative manner, the Reference Architecture Model Industrie 4.0 (RAMI 4.0) has been developed. However, although being widely accepted by the community, the standardized architecture is missing actual industrial applications. A major reason for this issue might be missing specifications in the standard itself, hindering the mutual development of such a critical infrastructure at the right level of detail. Thus, in order to counteract the mentioned problem, this work delineates the alignment of RAMI 4.0 with a well-established framework for specifying enterprise architectures, named The Open Group Architecture Framework (TOGAF). By coalescing the system development concepts of RAMI 4.0 and TOGAF, both of the approaches could benefit from each other. The result is thereby evaluated with an actual industrial case study.",1970
Applying Model-Based Ontology Coverage Analysis to Mission Architectures,"This paper introduces a method for Model-based Ontology Coverage Analysis (MOCA) and applies it to SysML models of mission architectures. An ontology is a set of concepts that constitute a common language, standard terminology, and consistent pattern reference across multiple models within an organization, industry, or domain. The purpose of MOCA is to assess the overlap between a system architecture model and a given ontology, and thereby the architecture model's compliance with the ontology and the ontology's utilization by the architecture. We demonstrate MOCA on a SysML model of a humanitarian airlift mission, using a conceptual mission architecting SysML profile model that serves as the ontology. MOCA automates and simplifies reasoning over models, and creates digital model-based artifacts that support stakeholders in concept validation, decision making, and system/mission design. Thus, MOCA enhances digital systems engineering.",1970
Simulating SysML transportation models,"Model-based Systems Engineering (MBSE) promises efficient and effective systems development, by providing integrated system model views and streamlining the transition between different development activities. For instance, system testing with simulation should be provided as a simple facility for the performance evaluation of complex systems. Transportation systems are complex and their behavior is determined by dynamic factors. However, research efforts define simulation models for transportation systems, using custom or simulation-specific notation. Additionally, model-based approaches for transportation systems emphasize peripheral issues, such as safety conditions and environmental impact. In this work, a framework that enables seamless performance evaluation of Railway Transportation System (RTS) models via simulation is proposed. The de facto standard for MBSE modeling, Systems Modeling Language (SysML), is selected as the modeling infrastructure, while other standards, like Query/View/Transformation (QVT), are used for the generation of executable simulation models. The latter can be simulated in Discrete Event System Specification (DEVS) simulators and the simulation results are returned in the RTS SysML model. Additionally, the application of the framework in the public RTS of Athens and the obtained simulation results are presented.",1970
Mind Maps Upstream SysML v2 Diagrams,"Over the past two decades, the promoters of Model Based Systems Engineering (MBSE) have encouraged systems engineers to transition from document-centric approaches to model-based ones. Literacy of systems engineers in reading, sharing and elaborating models has therefore become an issue. Whatever the modeling language, elaboration of models is a highly complex intellectual process and SysML is no exception. Feedback from industry practitioners and MBSE lecturers suggests that developers of SysML models often stumble on the same problem: thinking about the system before modeling it in SysML. The authors of this paper propose to ease that elaboration process by using mind maps. With their graphic form and rather flexible way of organizing ideas, mind maps turn out to be a good candidate to help thinking about the system. Unlike approaches that directly switch from mind maps to SysML diagrams dedicated to one specific system, this paper introduces an intermediate step: mind maps first enable elaboration of diagrams patterns. The latter may in turn be instantiated on one or several systems. Without loss of generality, the proposed approach is step-wise illustrated on real-time systems monitored by software controllers. Patterns are proposed to cover need expression, requirement capture, use case driven analysis and design.",1970
"Reconciling Formal, Multi-Layer, and Hetero-functional Graphs with the Hetero-functional Incidence Tensor","The developing consensus across a number of STEM fields is that each of the NAE game-changing goals is is characterized by an “engineering system” that is analyzed and resynthesized using a meta-problem-solving skill set. Two fields in particular have attempted to traverse this convergence challenge: systems engineering and network science. Systems engineering has developed as a practical and interdisciplinary engineering discipline that enables the successful realization of complex systems from concept, through design, to full implementation based upon graphical modeling languages. In contrast, network science has developed to quantitatively analyze networks that appear in a wide variety of engineering systems but suffers from disparate terminology and a lack of consensus. This paper provides a tensor-based formulation of several of the most important parts of hetero-functional graph theory. More specifically, it discusses the system concept, the hetero-functional adjacency matrix, and introduces the hetero-functional incidence tensor for the first time. The tensor-based formulation described in this work makes a stronger tie between HFGT and its ontological foundations in MBSE. Finally, the tensor-based formulation facilitates an understanding of the relationships between HFGT and multilayer networks “despite its disparate terminology and lack of consensus In so doing, this tensor-based treatment is likely to advance Kivela et. al’s goal to discern the similarities and differences between these mathematical models in as precise a manner as possible.",1970
Development of a sentry smart bearing as a node for connectivity and monitoring of steelmaking system,"The Model Based Systems Engineering (MBSE) is herein applied to design a physical node for an interconnected system, based upon data exchange. As a test case the concept of smart bearing equipped with sensors to be used to monitor a cold rolling mill is preliminarily developed. The paper focuses on the two activities of inner and outer monitoring of the bearing service. Outer monitoring is aimed at detecting any abnormal operation of the cluster mill, while the inner one identifies any symptom of damage within the bearing components. The effectiveness of the MBSE approach is investigated, whilst the system is decomposed and analyzed. Layout, connectivity and autonomous power generation are assumed as a reference to assess a preliminary design synthesis, by resorting to some available technologies, and to check the suitability of the smart bearing for the proposed application. Limitations and benefits of the MBSE approach within this context are even discussed.",1970
Definition and use of logical and physical architecture within vehicle concept development,"The automotive industry is currently undergoing a change in the development philosophy from component-oriented towards function-oriented Model-Based Systems Engineering (MBSE). This originates in upcoming, disrupting trends where cars are transforming to digital, connected systems. The interconnected relationships in the vehicle system and the company organization will not be manageable with today's development methods. MBSE requires a sophisticated methodology, like the RFLP-framework suggests. Fundamental to MBSE is the architecture aspect of the system. Such architecture is represented with a system model and offers different architecture views (FLP), for specific concerns. Especially the differentiation between logical (L) and physical (P) perspective is rather uncommon, no standard understanding can be identified. This contribution compares existing understandings of L and P architecture views and derives a detailed definition. As L and P are consecutive architecture views and strongly dependent on each other, the transition and specification process of those is elaborated as well. Thereby the so called architecture node is introduced, offering a methodical support to transform L into P architecture. In conclusion, the relevance of P-decisions in the RFLP-framework is to be emphasized.",1970
"Model-Based Systems Architecting with Decision Quantification for Cybersecurity, Cost, and Performance","The architecture selection process early in a major system acquisition is a critical step in determining the success of a program. There are recognized deficiencies that frequently occur in this step such as poor transparency into the final selection decision and excessive focus on lowest cost, which does not necessarily result in best value. This research investigates improvements to this process by integrating Model-Based Systems Engineering (MBSE) techniques; enforcing rigorous, quantitative evaluation metrics with a corresponding understanding of uncertainties; and eliciting stakeholder feedback in order to generate an architecture that is better optimized and trusted to provide improved value for the stakeholders. The proposed methodology presents a decision authority with an integrated assessment of architecture alternatives, to include expected performance evaluated against desired parameters with corresponding uncertainty distributions, and traceable to the concerns of the system's stakeholders. This thus enables a more informed and objective selection of the preferred alternative. We present a case study that analyzes the evaluation of a service-oriented architecture (SOA) providing satellite command and control with cyber security protections. This serves to define and demonstrate a new, more transparent and trusted architecture selection process, and the results show that it consistently achieves the desired improvements. Several excursions are also presented to show how rigorously capturing uncertainty could potentially lead to greater insights in architecture evaluation, which is a robust area for further investigation. The primary contribution of this research then is improved decision support to an architecture selection in the early phases of a system acquisition program.",1970
Skill-based Metamodel for sustaining the process-oriented cyber-physical System Description,"Digitalization slowly but steadily transforms the modern production cells by adding an IT layer to their structure, which, subsequently, leads to the use of cyber-physical systems (CPS) as production cell components. Digital representation of those components through the definition of the corresponding description models starts in the early design phase of the engineering process. The model-based systems engineering (MBSE) approach promotes increased reusability of component models and allows an automatic generation of the system of interest model and its validation through simulation, which results in a shorter design phase. However, existing solutions for CPS description models contain mainly skills and functionalities of the component from a task-oriented perspective to achieve platform-independent code generation for the components control. Semantic information in the skills description usually is completely absent or present only to the extent, which is not enough to match the corresponding components to the product requirements and necessary production processes. Instead, production cell components are manually assigned to the manufacturing processes, which are required for the product. This manual step hinders the automatic production cell model generation based on the product requirements. To allow automatic matching from product descriptions to specific CPSs, a new approach to CPS description is necessary. This description should allow the entirely automatic generation of production cell models through the matching of CPS skills and product requirements. In this paper, a semantic metamodel for CPS is presented. This metamodel enriches CPS models with high-granularity graph-based skill descriptions, which, in combination with the appropriate manufacturing process descriptions, allow automatic matching for production planning and further simulation and ontimization.",1970
Translating SysML Activity Diagrams for nuXmv Verification of an Autonomous Pancreas,"Model Based Systems Engineering (MBSE) provides a single platform capable of defining complex, multidisciplinary systems, but commonly-used tools such as Systems Modeling Language (SysML) lack the ability to formally validate and verify these systems. Symbolic model checking operates on system models of similar levels of abstraction to SysML, providing a push-button technique for ensuring the possible behavior set always obeys temporal requirements, e.g., for safe operation. We propose a translation method from SysML activity diagrams to the popular symbolic model checker nuXmv to enable their formal verification in four main steps: main module definition, submodule definition, activity diagram organization, and activity diagram translation. We apply this process to the Autonomous Artificial Pancreas System (AAPS) as a trade study. We then verify and validate the AAPS nuXmv model against a set of specifications derived from the AAPS safety requirements.",1970
Integrating Machine Learning in Digital Twins by utilizing SysML System Models,"Fueled by the opportunities for supporting many design and production activities and for establishing new business models, Digital Twins have become a popular topic within research and industrial application during the last years. However, many enterprises still struggle with an efficient integration of Digital Twins into their products or production. Notably, smaller enterprises are facing a tremendous amount of effort required for the modelling and operation of Digital Twins. While less feature-rich informational Digital Twins may be viable, autonomous Digital Twins using methods of Machine Learning (ML) are unattainable for these companies due to the high complexity. With Model-Based Systems Engineering (MBSE), an approach was introduced to grasp this complexity using system models e.g., SysML-diagrams. The main purpose of these diagrams is an improvement of stakeholder communication. This paper presents a novel approach to further utilize these diagrams and derive a framework for ML in the context of Digital Twins. For this purpose, system elements and data origins are directly combined with the necessary components of ML algorithms.",1970
A Semantics Modeling Approach Supporting Property Verification based on Satisfiability Modulo Theories,"Property verification in Model-based systems engineering (MBSE) supports the formalization of model properties and evaluates the constraints of model properties to select an optimal system architecture from alternatives for tradeoff optimization. However, there is a lack of an integrated method that property verification enables to be applied in multi domain specific modeling languages, which is not conductive to the reuse of property verification for different architecture and may increase the learning and use cost. To solve the problem, a semantic approach combining a unified modeling method GOPPRRE modeling method with Satisfiability Modulo Theories (SMT) is proposed to realize property verification. The syntax of the multi-architecture modeling language KARMA based on the GOPPRRE modeling method is extended to realize property verification based on Satisfiability Modulo Theories, which enables the KARMA language to verify the models by evaluating the constraints which are defined based on the model properties. The proposed approach supports the evaluation of property constraints defined by different modeling languages for trade-off optimization in a unified language. The approach is evaluated by a case of optimizing the matching between workers and processes in a multi-architecture modeling tool MetaGraph which is developed based on KARMA. From the result, such approach enables to evaluate constraints consisting of properties and select an optimal scheme from the alternatives.",1970
SAMOS for Spatial Architecture based on Multi-physics and Organisation of Systems in conceptual design,"The conceptual design is a decisive phase where the simulation teams would like to quickly pre-validate spatial architectures from the physical architecture proposed by the system architects. In order to support them to efficiently achieve this task while meeting various industrial requirements, three approaches were proposed and compared, and finally the last and innovative approach called SAMOS (Spatial Architecture based on Multi-physics and Organization of Systems) is presented and described. The corresponding platform will allow to validate the spatial allocation of components under geometrical and multi-physical constraints, while facilitating the collaboration between the different design actors during the conceptual design.",1970
Towards the reuse of physical models within the development life-cycle: a case study of Simulink models,"In order to enable a collaborative Model-based Systems Engineering (MBSE) environment through computer systems, it is completely necessary to enable the possibility of communicating tools (interoperability) and reusing previous engineering designs saving costs and time. In this context, the understanding of the underlying concepts and relationships em-bedded in the system artifacts becomes a cornerstone to properly exploit engineering artifacts. MBSE tool-chains and suites, such as Matlab Simulink, can be applied to different engineering activities: architecture design (descriptive modeling), simulation (analytical modeling) or verification. Reuse capabilities in specific engineering tools are a kind of non-functional aspect that is usually covered providing a type of search capability based on artifact metadata. In this work, we aim to ease the reuse of the knowledge embedded in Simulink models through a solution called PhysicalModel2Simulink. The proposed approach makes use of an ontology for representing, indexing and retrieving information following a meta-model (mainly to semantically represent concepts and relationships). Under this schema, both meta-data and contents are represented using a common domain vocabulary and taxonomy creating a property graph that can be exploited for system artifact discovery. To do so, a mapping between the Matlab Simulink meta-model and the RSHP (RelationShHiP) meta-model is defined to represent and serialize physical models in a repository. Then, a retrieval process is implemented on top of this repository to allow users to perform text-based queries and look up similar artifacts. To validate the proposed solution, 38 Simulink models have been used and 20 real user queries have been designed to study the effectiveness, in terms or precision and recall, of the proposed solution against the Matlab Simulink searching capabilities.",1970
Formal methods for a system of systems analysis framework applied to traffic management,"Formal methods for systems and system of systems engineering (SoSE) can bring precision to architecting and design, and increased trustworthiness in verification; but they require the use of formal languages that are not broadly comprehensible to the various stakeholders. The evolution of Model Based Systems Engineering (MBSE) using the Systems Modeling Language (SysML) lies in a middle ground between legacy document-based SoSE and formal methods. SysML is a graphical language but not a formal language. Initiatives in the Object Management Group (OMG), such as the development of the Foundational Unified Modeling Language (fUML) seek to bring precise semantics to object-oriented modeling languages. Following the philosophy of fUML, we offer a framework for associating precise semantics with Unified Modeling Language (UML) and SysML models essential for SoSE architecting and design. Straightforward methods are prescribed to develop the essential models and to create semantic transformations between them. Matrix representations can be used to perform analyses that are concordant with the system of UML or SysML models that represent the system or SoS. The framework and methods developed in this paper are applied to a Traffic Management system of systems (TMSoS) that has been a subject of research presented at previous IEEE SoSE conferences.",1970
Fuzzy classification context for the responsive and formal design process,"This paper presents an application of a fuzzy relation in system modeling (from requirements) to be used for a Systems Engineering (SE) methodology. We define fuzzy classifications (models for distributed systems), extract component and system theories (sets of logical expressions), and ensure consistency of requirements for the Responsive and Formal Design (RFD) Process. The RFD process is a SE methodology that relates a set of requirements, associated models, simulations, and the relationship between them, by integrating Model-Based Systems Engineering (MBSE) to manage system modeling complexity with formal methods to ensure that designs are verifiably correct against their requirements. To translate informal requirements to logical expressions in the RFD process, we first model requirements using a 3-tuple structure called a classification formulated from Barwise and Seligman's channel theory. A classification consists of ""tokens"" (observed situations) and ""types"" (situation features) and a binary relation classifying tokens with types. However, classifying tokens using types as present (represented as `1') or absent (represented as `0') as used in channel theory is not always possible (since it involves vagueness and imprecission) and the representation lacks expressiveness to reason about relations among such types (vague situation features). Hence, a binary classification doesn't capture uncertainity. In this paper, we consider a degree of truth in the relation between tokens and types to define a fuzzy classification. We then develop an algorithm that extracts a theory from a fuzzy classification. This helps in formal proof for checking consistency (no contradiction) and deducing to requirements (verifying properties). We demonstrate our development using three small satellites measurement system whose goal is to image the colorful auroral ovals seen around Earth's magnetic poles.",1970
Domain-specific languages and diagram customization for a concurrent engineering environment,"A major open question for advocates of Model-Based Systems Engineering (MBSE) is the question of how system and subsystem engineers will work together. The Systems Modeling Language (SysML), like any language intended for a large audience, is in tension between the desires for simplicity and for expressiveness. In order to be more expressive, many specialized language elements may be introduced, which will unfortunately make a complete understanding of the language a more daunting task. While this may be acceptable for systems modelers, it will increase the challenge of including subsystem engineers in the modeling effort. One possible answer to this situation is the use of Domain-Specific Languages (DSL), which are fully supported by the Unified Modeling Language (UML). SysML is in fact a DSL for systems engineering. The expressive power of a DSL can be enhanced through the use of diagram customization. Various domains have already developed their own schematic vocabularies. Within the space engineering community, two excellent examples are the propulsion and telecommunication subsystems. A return to simple box-and-line diagrams (e.g., the SysML Internal Block Diagram) are in many ways a step backward. In order allow subsystem engineers to contribute directly to the model, it is necessary to make a system modeling tool at least approximate in accessibility to drawing tools like Microsoft PowerPoint and Visio. The challenge is made more extreme in a concurrent engineering environment, where designs must often be drafted in an hour or two. In the case of the Jet Propulsion Laboratory's Team X concurrent design team, a subsystem is specified using a combination of PowerPoint for drawing and Excel for calculation. A pilot has been undertaken in order to meld the drawing portion and the production of master equipment lists (MELs) via a SysML authoring tool, MagicDraw. Team X currently interacts with its customers in a process of sharing presentations. There are several inefficiencies that arise from this situation. The first is that a customer team must wait two weeks to a month (which is 2-4 times the duration of most Team X studies themselves) for a finalized, detailed design description. Another is that this information must be re-entered by hand into the set of engineering artifacts and design tools that the mission concept team uses after a study is complete. Further, there is no persistent connection to Team X or institutionally shared formulation design tools and data after a given study, again reducing the direct reuse of designs created in a Team X study. This paper presents the underpinnings of subsystem DSLs as they were developed for this pilot. This includes specialized semantics for different domains as well as the process by which major categories of objects were derived in support of defining the DSLs. The feedback given to us by the domain experts on usability, along with a pilot study with the partial inclusion of these tools is also discussed.",1970
Automatic generation of shop floor gateway configurations from systems modeling language,"In the development of production systems, the engineering of Manufacturing Execution Systems poses a complex and time-consuming task. One of the specific tasks, which contribute to this fact, are the efforts necessary for the configuration of the shop floor gateway of an MES. In the past few years, a great number of promising approaches for the model-based systems engineering of production systems including MES have been proposed. This paper describes industrial research activities, which practically investigate the opportunities of using common MBSE approaches and applying necessary extensions for an automatic generation of shop floor MES gateway configurations. As a basis, systems engineering models for production systems, i.e., an extension to Systems Modeling Language, and standard model transformation mechanisms, i.e., MOF-Model-to- Text Transformation Language, are used. After an introduction to the investigated approach, this paper presents and demonstrates a possible tool chain, which is based on existing implementations of established standards, using a lab-scale application example.",1970
Model-based Development of a Federated Database Infrastructure to support the Usability of Cross-Domain Information Systems,"The Centre for the Study of Manuscript Cultures (CSMC) at the Universität Hamburg hosts a steadily growing number of autonomously developed databases. These databases often run in heterogeneous hardware and software environments and use different, project-specific data models. These conditions lead to a high degree of autonomy but to an increasing heterogeneity. The heterogeneity then leads to the problem that these databases cannot be easily merged into a federated database system (FDBS). In general, a FDBS integrates multiple autonomous database systems into a single FDBS. The challenge is now to merge multiple heterogeneous systems into one FDBS to provide successful federated searches. Here, the term successful means that the results of a search query are correctly and completely answered by all integrated domain-specific database systems. In addition to delivering correct and complete results from these queries, semantically and syntactically correct mappings of various database schemes must be ensured. We argue that at the faculty of the Humanities, a cross-domain use of autonomously developed databases offers added value in terms of data analysis and evaluation. Hence, the challenge that exists is to develop a suitable federated database infrastructure that supports the development of autonomous information systems, while heterogeneity does not increase. To meet this challenge, in IT projects in the defense sector and in the public administration of the federal government, the V-model is a mandatory procedural standard to develop IT systems systematically. When developing a cross-domain information system, special attention should be paid to the development of variants, i.e. the project-specific information systems, so that the extension of the federated infrastructure at the faculty is guaranteed and can be maintained in the long term. In the area of Model-based Systems Engineering (MBSE) variant modeling is a very current topic and no standard exists. However, there are some approaches that can be used, such as the method Variant Modeling with SysML (VAMOS). VAMOS is characterized by its ease of use to model variants and can be combined very well with other methods. In this paper we present a model-based approach to develop a federated database infrastructure for supporting the usability of a cross-domain information system. For the development of a federated database infrastructure we present how the V-model can be combined with the VAMOS method using the tool Cameo Systems Modeler for modeling and simulating in general, the broker-based SysML Toolbox for simulating database interactions, and the database management system Heurist for creating a cross-domain information system.",1970
Enabling Space Exploration Medical System Development Using a Tool Ecosystem,"The NASA Human Research Program's (HRP) Exploration Medical Capability (ExMC) Element is utilizing a Model Based Systems Engineering (MBSE) approach to enhance the development of systems engineering products that will be used to advance medical system designs for exploration missions beyond Low Earth Orbit. In support of future missions, the team is capturing content such as system behaviors, functional decompositions, architecture, system requirements and interfaces, and recommendations for clinical capabilities and resources in Systems Modeling Language (SysML) models. As these products mature, SysML models provide a way for ExMC to capture relationships among the various products, which includes supporting more integrated and multi-faceted views of future medical systems. In addition to using SysML models, HRP and ExMC are developing supplementary tools to support two key functions: 1) prioritizing current and future research activities for exploration missions in an objective manner; and 2) enabling risk-informed and evidence-based trade space analysis for future space vehicles, missions, and systems. This paper will discuss the long-term HRP and ExMC vision for the larger ecosystem of tools, which include dynamic Probabilistic Risk Assessment (PRA) capabilities, additional SysML models, a database of system component options, and data visualizations. It also includes a review of an initial Pilot Project focused on enabling medical system trade studies utilizing data that is coordinated across tools for consistent outputs (e.g., mission risk metrics that are associated with medical system mass values and medical conditions addressed). This first Pilot Project demonstrated successful operating procedures and integration across tools. Finally, the paper will also cover a second Pilot Project that utilizes tool enhancements such as medical system optimization capabilities, post-processing, and visualization of generated data for subject matter expert review, and increased integration amongst the tools themselves.",1970
Simulation model generation of discrete event logistics systems (DELS) using software design patterns,"To provide automated access from a formal system model to multiple analysis tools, such as discrete event simulation or optimization, we extend current model-based systems engineering (MBSE) methodologies by introducing a new model to model transformation method based on object-oriented creational patterns from software design. Implemented in MATLAB's discrete event simulation tool, SimEvents, we demonstrate the methodology by generating two distinct use cases based on a distribution supply chain and manufacturing system.",1970
Exporting Object-Process Methodology system models to the Semantic Web,"Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages enables detailed representation of domain-specific knowledge of different aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stages - defining the OPM ontology in a way that conforms to Semantic Web specifications and developing a module for exporting OPM models from their visual representation to and back from Resource Description Framework (RDF). We discuss the scope of the ontology and different approaches of element representation. We portray the implementation of the export module as an extension to OPM CASE tool (OPCAT). The ontology and export module are validated by round-trip transformation of OPM models from their visual representation to RDF and back by experimenting with OPM experts.",1970
Exploring LoS in railway transportation systems using SysML,"Railway Transportation Systems (RTSs) are systems of high complexity consisting of other systems. Thus, they may be studied as Systems-of-Systems (SoS) using the Systems Modeling Language (SysML). Since their purpose is to provide transportation services that have a critical role in urban societies and affect millions of users, they have to be precisely evaluated, focusing on their adequacy to deliver the expected service quality. In the case of RTSs, service quality is expressed by Level of Service (LoS) indicators related to the passenger's experience within RTS components, such as stations and trains. Such indicators express, for example, space and time restrictions, and are standardized in international bodies. In this paper, an approach, integrating LoS concepts in Model-Based Systems Engineering (MBSE), is proposed, enabling the description and verification of LoS requirements for RTS SysML models. Exploiting SysML, a RTS model can be generated, populated with basic transportation entities and specific LoS requirements associated to them. Requirements are described in a simple, abstract fashion by the RTS engineer, while more specific requirements are automatically generated and associated with basic RTS components. Furthermore, verification of RTS LoS is facilitated, helping the system designer to assess alternative RTS operation scenarios. In this context, a case study discussing the Athens Metro System is briefly examined.",1970
SysML modeling for embedded systems design optimization: A case study,"Model-Based Systems Engineering (MBSE) with the SysML language allows the designer to include requirement capture and design representation in a single model. This paper proposes a methodology to obtain the best design alternative, from a SysML design, by using multi-objective optimization techniques. A SysML model is extended with stereotypes, objective functions, variability and constraints. Then an integer representation of the problem can be generated and solved as a constraint satisfaction problem (CSP). The paper illustrates our methodology using an Embedded Cognitive Safety System (ECSS) design. From a component repository and redundancy alternatives, the best design alternatives are generated, to minimize the total cost and maximize the estimated system reliability.",1970
Ontology-based Requirements Transformation,"This paper presents an ontology-based approach to the supply chain-aware transformation of functional and environmental load requirements given by so-called Mission Profiles (MPs). The approach aims at improving the efficiency of the engineering process through supporting the transformation process and enabling a better integration of the transformation into existing Model-based Systems Engineering (MBSE) processes. We propose a methodology and a supporting system which aids in the transformation process while the latter feature is obtained by constructing and working on models. Consequent utilization of the standardized language OWL to express model representations further enables better knowledge integration and transfer among heterogeneous systems. In addition to that, this favors knowledge reuse across projects which can reduce overall costs. Moreover, the system enables stripping off irrelevant information from MPs, thus improving protection of intellectual property.",1970
Adapting the Hatley-Pirbhai Method for the Era of SysML and Digital Engineering,"The Hatley-Pirbhai method is an integrated approach to model-based systems engineering that was first articulated in the 1980s and actively used and further developed into the early 2010's. Many approaches from the method can be very productively applied to current MBSE and digital engineering efforts and may help to guide the development of complex models and simplify what can otherwise be overwhelming complexity in the choice of models. This paper reviews the key elements of the Hatley-Pirbhai method, discusses how the base method can be adapted to use current notations, and then examines the elements of a longer-term program to integrate the strongest aspects of the methods with current architecture framework concepts.",1970
Defining Object-Process Methodology in Web Ontology Language for Semantic Mediation,"Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages allows detailed representation of domain-specific knowledge of different components and aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stage - defining the OPM ontology in a way that conforms to Semantic Web specifications. We discuss different approaches of element representation and validate the ontology by round-trip transformation of OPM models from their visual representation to Resource Description Framework (RDF) and back.",1970
Addressing Deep Uncertainty in Space System Development through Model-based Adaptive Design,"When developing a space system, many properties of the design space are initially unknown and are discovered during the development process. Therefore, the problem exhibits deep uncertainty. Deep uncertainty refers to the condition where the full range of outcomes of a decision is not knowable. A key strategy to mitigate deep uncertainty is to update decisions when new information is learned. In this paper, the spacecraft development problem is modeled as a dynamic, chance-constrained, stochastic optimization problem. The Model-based Adaptive Design under Uncertainty (MADU) framework is presented, in which conflict-directed search is combined with reuse of information to solve the development problem efficiently in the presence of deep uncertainty. The framework is built within a Model-based Systems Engineering (MBSE) paradigm in which a SysML model contains the design, the design space, and information learned during search. The development problem is composed of a series of optimizations, each different than the previous. Changes between optimizations can be the addition or removal of a design variable, expansion or contraction of the domain of a design variable, addition or removal of constraints, or changes to the objective function. These changes are processed to determine which search decisions can be preserved from the previous optimization. The framework is illustrated on a case study drawn from the thermal design of the REgolith X-ray Imaging Spectrometer (REXIS) instrument. This case study demonstrates the advantages of the MADU framework with the solution found 30% faster than an algorithm that doesn't reuse information. With this framework, designers can more efficiently explore the design space and perform updates to a design when new information is learned. Future work includes extending the framework to multiple objective functions and continuous design variables.",1970
Applying model-based system engineering to modelling and simulation requirements for weapon analysis,"The use of Model-Based Systems Engineering (MBSE) to support the definition of requirements and design of modern complex aerospace systems is becoming increasingly accepted. However, MBSE tools and techniques also have many beneficial applications in the definition of requirements for conceptual modelling, and in the design for modelling, simulation, analysis, and implementation of aerospace systems. An MBSE based methodology, known as the Whole-of-System Analytical Framework (WSAF) [1], was developed to provide structure, rigour and traceability to the definition of modelling and simulation requirements for the analysis of weapon and combat system performance. The WSAF is grounded in standard analysis principles and practises but applies MBSE tools and techniques to support the analyst throughout the process [2]. Employing the WSAF, the study definition for the analysis of a weapon system's performance is achieved by deconstructing the systems of interest into their functional components. This activity considers the weapon “kill chain” from initial target detection through to assessing the effect of the weapon [3], and can include the entire combat system (including third party support platforms). Each system's functionality is then systematically analysed in order to identify the questions that must be addressed by a study. The modelling, simulation and analysis requirements necessary to answer those questions are then derived [1] [2]. By functionally defining the whole weapon system kill chain, analysts are able to ensure that their analysis is complete and rigorous, while the MBSE tools provide the required traceability [2]. The WSAF has been applied across the Australian defence domain and is utilised by one of DST Group's partner organisations, Defence Research and Development Canada (DRDC). This paper describes the WSAF methodology using case studies from DST Group and DRDC. Lessons accumulated by both organisations are discussed, covering the application of MBSE tools and techniques to support weapon and combat system modelling, simulation and analysis for over a decade.",1970
Towards the Integration of Cybersecurity Risk Assessment into Model-based Requirements Engineering,"Engineering projects requires to consider the increasingly significant needs and constraints regarding expected behaviors, services, quality and security. These requirements are introduced into system and software engineering projects as functional and non-functional properties. Satisfying such properties implies rigorous processes that steer the project, from the requirements identification and definition to the system deployment and maintenance. Model-Based System Engineering (MBSE) is an effective approach to address security requirements and risk assessment at the early stages of the development life cycle, which enables cost-efficient fixes. The aim of this work is to investigate how cybersecurity risk assessment could be integrated into model-based requirement engineering. We propose a Model-based Cyberisk Assessment (MBCA) method, that comprises: (1) A semantic alignment between risk assessment concepts and system modeling concepts and (2) A modeling language extension to represent security concepts and metrics throughout the system modeling life cycle. To illustrate our approach, validate its applicability and evaluate its expressiveness, we applied it to an industrial in-flight entertainment system.",1970
"Model-based Tools designed for the FACE™ Technical Standard, Editions 3.0 & 2.1","The promise of model-based systems engineering (MBSE), as described by DO-178C's supplement, DO-330 [1], [2] is with a sufficiently described system and software model, one should be able to auto-generate system's control software, testing, and lifecycle documentation. If aligned to a Modular Open Systems Approach (MOSA), like the Future Airborne Capability Environment (FACE) Technical Standard [3], and if aligned to Military Aircraft Airworthiness Qualification efforts, the lifecycle artifacts can be used and reused across a fleet of dissimilar aircraft systems, enhancing aircraft capabilities across the battlespace [4]. The Open Group FACE Consortium [https://www.opengroup.org/face] has long requested metrics regarding time savings and level of effort (LOE) using the Modular Open Systems Approach described by the FACE Approach. This paper presents three (3) working use cases of using the TES-SAVi AWESUM® MBSE tool suite converting FACE Technical Standard data models. AWESUM® now has the capability to convert software developed to the FACE Technical Standard from Standard, Editions 2.x to 3, up to the interface validation process. Designed as a complete lifecycle tools suite, AWESUM® has the ability to address the complete lifecycle objectives described by DO-178C, support software aligned to the FACE Technical Standard, and support Military Airworthiness Qualification processes [5]. The use cases reported within this paper include the conversion of the BALSA (Basic Avionics Lightweight Source Archetype) User Supplied Model (USM) v2 with ~100 data elements to USM v3; secondly, the v2 to v3 conversion of a US Army Small Business Innovation Research (SBIR) topic requesting common reusable FACE development efforts, namely the Army Common Engine FADEC Interface (CEFI) FACE component, which was intentionally designed to leverage BALSA as its starting point for design; and thirdly a sizable real-world application, the conversion of a Raytheon Missile Systems' (RMS) program with ~15,000 data elements. This third product is a FACE Domain Specific Data Model (DSDM) awarded FACE Conformance Certification in April 2019 to FACE Technical Standard, Edition 2.1. This DSDM is based on the Unmanned Aircraft System (UAS) Control Segment (UCS) Version 3.4 [6]. This paper records the efficiencies of MBSE tools applied to FACE Technical Standard development efforts, lessons learned, and metrics on level of effort (LOE) saved. Should the products be ported and reused across a fleet of dissimilar aircraft platforms, the reuse efficiencies further increase.",1970
Collaboration between System Architect and Simulation Expert,"In the development of complex systems, modelbased systems engineering based on SysML enables the fast generation of development artifacts on an abstract level and allows to start an early validation process. However, SysML artifacts often lack depth of detail. Hence, to validate the system architecture, the SysML specification model is mostly supplemented by more concrete interdisciplinary or domain specific simulation models created with other modeling languages and in separate tools. This publication proposes and analyzes systematically workflows for the collaboration between a system architect and a simulation expert based on different development scenarios in an industrial context. These collaboration workflows define process steps and information flows for continuous and complete validation processes. Furthermore, this work presents how these collaboration workflows can be implemented in an industrial context under the use of standards like the SysML Extension for Physical Interaction and Signal Flow Simulation (SysPhS) and the Open Services for Lifecycle Collaboration (OSLC).",1970
SCRUM++ Framework concepts,"Traditional design processes must adapt to new industrial challenges, to the rapid evolution of technologies and the resulting complexity of systems. Today's industry, particularly in the field of mechatronics, must design and develop ever more innovative products while reducing time-to-market in order to maintain a competitive edge. As late changes during the realization and detailed design phases lead to a considerable increase in costs and design time, it is necessary to introduce more flexibility during the development process. The agile approach has already proven successful in the design of software system and offer many benefits, as it aims to limit the rigidity of the specifications, interfaces and organization, and to involve in a more flexible way the different actors, customers, specifiers and partners. In this context, we propose a MBSE approach to identify the set of requirements related both to the mechatronic product development and to the dynamic market, companies and current new trends, in order to define the SCRUM++ framework key concepts that aim to meet previous requirements, by supporting agile hybridization methods.",1970
Reliability Analysis of Complex NASA Systems with Model-Based Engineering,"The emergence of model-based engineering, with Model-Based Systems Engineering (MBSE) leading the way, is transforming design and analysis methodologies. [7] The recognized benefits to systems development include moving from document-centric information systems and document-centric project communication to a model-centric environment in which control of design changes in the life cycles is facilitated. In addition, a “single source of truth” about the system, that is up-to-date in all respects of the design, becomes the authoritative source of data and information about the system. This promotes consistency and efficiency in regard to integration of the system elements as the design emerges and thereby may further optimize the design. Therefore Reliability Engineers (REs) supporting NASA missions must be integrated into model-based engineering to ensure the outputs of their analyses are relevant and value-needed to the design, development, and operational processes for failure risks assessment and communication.",1970
The Digital (Mission) Twin: an Integrating Concept for Future Adaptive Cyber-Physical-Human Systems,"Top-down decomposition of a complex system of systems (SoS) requires representation of the behavior of multiple individuals and cyber-physical systems performing a wide variety of tasks, usually at different times and with different goals. In the future, as humans and machines learn and co-adapt in their mission context, systems engineering must develop approaches that support dynamic analysis and synthesis in both the design and operation of systems. The concept of a “digital (mission) twin” provides an integration framework for design and control of future complex cyber-physical-human SoS. The framework builds on mission function task (MFT) analysis, providing a basis for model-based systems engineering (MBSE) activities to identify and address needs for automation or other forms of advanced technology that improve overall system performance. However, human-driven adaptation and eventually machine adaptation of complex SoS poses organizational and methodological challenges. We discuss the need for and opportunities for convergence of three often segregated SE methodologies: product engineering, human systems integration, and mission/operations analysis by expanding the product or process engineering view of a digital twin to the mission level. In the present this gives us a framework to analyze and specify automation and adaptation opportunities at the mission level. In the future we envision this twin continuously operates with the real systems to manage both emergent mission conditions and lifecycle adaptation. We applied this framework to a complex military mission using a case where artificial intelligence can be incorporated widely across a set of mission tasks to significantly improve performance.",1970
Model-based system engineering design of a versatile control test bench of an electric vehicle’s powertrain for educational purpose,"Nowadays, electric vehicle has attached significant attention because of the increasingly stringent exhaust emission policies all over the world. However, a lot of research efforts are still devoted to develop and innovate on the electric traction systems. In high-quality education, especially engineering education, topics concerning the vital and actual concerns should comprise more than theoretical knowledge, in purpose to close the relationship between the current technologies and the learner’s circumstances through giving a practical technical expertise and training in the sphere of overall engineering competences. This article presents the first phase regarding designing and developing a test bench of a fully electric vehicle's Powertrain used for research and educational purposes, model-based systems engineering (MBSE) is utilized as a methodology to achieve this goal thorough the CESAM architecting and modelling framework. Utilizing the aforementioned methodology, an operational standpoint architecture of the electric Powertrain’s test bench is developed and presented as the first phase of the system’s design.",1970
Ontological reasoning for consistency in the design of cyber-physical systems,"The design of Cyber-Physical Systems (CPS) involves a multitude of stakeholders. Each of these stakeholders has a specific view on the system under design. Unfortunately, when designers create artefacts in their different views in a concurrent manner, the integration of the different views may reveal inconsistencies. This leads to time consuming, iterative design processes where inconsistencies are resolved, in turn possibly creating new ones. It is hence necessary to reason explicitly about the view-specific properties that depend on, and influence properties of other views. This enables consistency during integration and reduces the development time and effort. In this paper we formalise the interrelationships between the different views, in the context of different design processes, to allow designers to meaningfully and efficiently manage inconsistencies. Our formalisation introduces ontological domain properties and their relations as the link between the view-specific properties used by the stakeholders. Thus, our approach combines the state of the art of Model-Based Systems Engineering (MBSE) and Semantic Web. The relevance of this approach is demonstrated by means of a motivating example.",1970
Evaluating a Fractionated Spacecraft system: A business case tool for DARPA's F6 program,"The Defense Advanced Research Projects Agency (DARPA) has recently begun an effort to further refine its Fractionated Spacecraft vision. This vision (called the ""F6"" program) seeks to explore distributed spacecraft architectures capable of performing complex functions similar to current monolithic spacecrafts. However, the ability of fractionated systems to work separately would provide significant benefits not achievable by monolithic systems. The question of interest to this study was ""Can these benefits be quantified and evaluated in a meaningful fashion in order to compare them to monolithic architectures?"" Rather than narrowing the approach to one or two concepts, the strategy was to expand the decision space in order to generate and evaluate a variety of alternatives under different scenarios and design choices. The stimuli were specifically selected to capture many issues not included in such studies such as technology obsolescence, funding profile changes, equipment failure scenarios, and even changes to mission objectives during the mission. Each stimulus has a variety of decision options or responses which a manager can exercise including delay, cancellation, acceleration of a development, or even new developments. It is argued that the very nature of fractionation will result in systems far more agile to external (and internal) stimuli, but this has never been shown explicitly. This study explores the use of Real Options in conjunction with traditional Net Present Value techniques to quantify the desirability of alternative candidate designs in terms of their adaptability and survivability. Our approach to evaluating the business case for each use case was to explicitly model both the implementation and operation phases for the life cycle of a fractionated cluster. The models were integrated into Phoenix Integration's ModelCenter® framework and used to generate Implementation Value Metrics (IVMs) and Operational Value Metrics (OVMs) associated with the use cases under evaluation. A number of models were developed to support these evaluations using Excel, Matlab, and Arena® (a commercial discrete-event simulation software product). The Model-Based Systems Engineering (MBSE) approach used in this study yielded transformations between high-level frameworks (OWL and SysML) and the models used to generate the data we needed for the evaluation. This rule-based transformation process will be critical for exploring the large decision trade spaces in a reasonable amount of time. This paper presents the results of the business case analyses; the underlying OVM's and IVM's, the approaches used to model the problem, explore the tradespace, refine the exploration, and generate results. We also discuss possible directions for future work. Specifically, it should be noted that while the approach described herein is being developed for, and funded by, DARPA, it has general applicability to a much wider variety of applications.",1970
Formalization of the responsive and formal design process using category theory,"In this paper, we formalize the Responsive and Formal Design (RFD) process using category theory. The RFD process combines Model-Based Systems Engineering (MBSE) to manage system modeling complexity and formal methods to ensure that designs are verifiably correct against their requirements. It consists of a set of levels of abstraction. Each level of abstraction represents a set of requirements and its associated models, simulations, and the relationship between them. Abstraction and refinement functions relate different levels of representation. In this paper, we represent and analyze the RFD process using category theory. Category theory provides us a means (using a collection of objects and arrows) to represent each level of abstractions and communications between them. We represent each level of abstraction using a pullback categorical structure (define the objects and morphisms). The facts and theorems in one level of abstraction will be passed to another via a refinement or an abstraction functor (function). The two functors operate in an inverse (adjoint) relationship. This means refinement traceability is met in the design process fundamentally. Additionally, since adjunction is a weaker relation than any other relations (such as equality, isomorphism, and equivalence) between two categories, it is a relatively better option for relaxing the design space. Finally, we introduce an idea of defining a category of refinements (i.e. a category of functors) and interpreting the universal properties.",1970
Automated Generation of Consistent Graph Models With Multiplicity Reasoning,"Advanced tools used in model-based systems engineering (MBSE) frequently represent their models as graphs. In order to test those tools, the automated generation of well-formed (or intentionally malformed) graph models is necessitated which is often carried out by solver-based model generation techniques. In many model generation scenarios, one needs more refined control over the generated unit tests to focus on the more relevant models. Type scopes allow to precisely define the required number of newly generated elements, thus one can avoid the generation of unrealistic and highly symmetric models having only a single type of elements. In this paper, we propose a 3-valued scoped partial modeling formalism, which innovatively extends partial graph models with predicate abstraction and counter abstraction. As a result, well-formedness constraints and multiplicity requirements can be evaluated in an approximated way on incomplete (unfinished) models by using advanced graph query engines with numerical solvers (e.g., IP or LP solvers). Based on the refinement of 3-valued scoped partial models, we propose an efficient model generation algorithm that generates models that are both well-formed and satisfy the scope requirements. We show that the proposed approach scales significantly better than existing SAT-solver techniques or the original graph solver without multiplicity reasoning. We illustrate our approach in a complex design-space exploration case study of collaborating satellites introduced by researchers at NASA JPL.",1970
Product Line Architecture Design of Software-Intensive Physical Protection Systems,"A physical protection system (PPS) integrates people, procedures, and equipment for the protection of assets or facilities against theft, sabotage, or other malevolent intruder attacks. Since PPSs are not radically different and share lots of commonalities, there is an important potential for reuse and herewith an opportunity to substantially reduce the cost and development time, and enhance the quality of the developed PPSs. In this paper, we report on the design of a product line architecture for a family of software-intensive PPSs. With this, we adopt a model-based systems engineering (MBSE) approach in which we focus on the architecture design of PPSs. We model the corresponding architecture view models for the PPS product line architecture and discuss the development of specific PPSs.",1970
Automatic Synchronization of Mechanical CAD Models and a SysML-based Mechatronic Model using AutomationML,"Due to the increasing integration of different disciplines, Model-based Systems Engineering (MBSE) is becoming more beneficial for the development of mechatronic systems. However, even though all relevant discipline-specific models can be integrated into one system model, how to maintain consistency between a discipline-specific model and the central system model during model updates still needs to be considered. In this paper, an approach for automatic synchronization of a discipline-specific model i.e. mechanical CAD model and the central SysML-based model i.e. a SysML4 Mechatronics plant model, is introduced. AutomationML(AML), a data exchange format which enables a lossless exchange of information between different discipline-specific engineering tools, is applied during the model synchronization. Mapping rules are proposed to facilitate a consistent round-trip engineering and transformation. Feasibility and applicability of this approach are demonstrated through a use case on a production plant with two applied commercial tools, PTC Integrity Modeler and Creo Parametric.",1970
High Performance Computing for Precision Landing and Hazard Avoidance and Co-Design Approach,"The Safe and Precise Landing Integrated Capabilities Evolution (SPLICE) project continues NASA's technology development for Precision Landing and Hazard Avoidance (PL&HA). The High-Performance Space Computing (HPSC) project manages a contract to build a multi core processor that is intended to be NASA's computing platform for future human and robotic spaceflight missions. This paper describes the flight computer for the PL&HA payload that will be used in SPLICE flight testing onboard suborbital rockets. This computer is being designed as a surrogate architecture for the HPSC chip, using a Xilinx Multi-Processor System on a Chip (MPSoC). Field testing with the surrogate architecture facilitates cross-agency experience with the HPSC and positions projects for future technology infusion opportunities. The MPSoC is hosted on a custom baseboard and interfaced to a second custom board that provides the sensor and vehicle interfaces. Early design trades for the SPLICE surrogate implementation are described. Preliminary performance testing on the surrogate platform using an optical navigation algorithm developed for the Orion vehicle is described, and shows 2.5 times execution speedup resulting from minimal modifications to the original code. In general, High Performance Computing/Embedded Computing (HPC/HPEC) required to address computational challenges in a wide range of NASA missions has consistently had challenges in implementation due to the diversity in the disciplines required to develop a solution. Typically, algorithm designers with expertise in the physics of the problem, and numeric approaches to solving the relations that model the physics, do not have expertise in processing architectures. There are strong dependencies between the overall performance of the system and the choices made in the modeling of the physics, the numerical approaches to solutions for the physical relations, and how these operations are mapped to computational resources in an architecture. To address this concern, a Model-Based Systems Engineering (MBSE) based concept for conducting multi-disciplinary co-design of the Guidance, Navigation, and Control (GN&C) algorithms, processing hardware configuration, and system software is introduced.",1970
A new SysML Model for UAV Swarm Modeling: UavSwarmML,"In recent years, autonomous or teleoperated robots have played an increasingly important role in civilian applications. In particular, unmanned aerial vehicles (UAVs) are autonomous aerial robots that come in a wide variety of basic frameworks and particular specifications. Thus, a swarm of UAVs is a collection of aerial vehicles that work together to achieve a specific goal. However, the design of UAVs swarms is a complex process. Therefore, in this paper we propose a continuous approach to the design a swarm of UAVs based on the model-based systems engineering (MBSE) method. This approach consists of three design levels; the swarm Modeling level, the swarm simulation level and the swarm implementation level. Indeed, we have created a new Systems Modeling Language (SysML) model using Domain Specific Language (DSL) to model the swarm mission, the hardware specifications of the UAV swarms and the software implementation of the swarm system. We called this model “UavSwarmML”. Subsequently, we used in the simulation phase Robot Operating System (ROS) as a middleware to simulate and implement our swarm system to validate the developed models. A case study of an autonomous UAV swarm flight mission was chosen to validate this design approach and illustrate its contributions to the efficient design of UAV swarms.",1970
Enhanced Feasibility Assessment of Payload Adapters for NASA's Space Launch System,"The first flight of NASA's new exploration-class launch vehicle, the Space Launch System (SLS), will test a myriad of systems designed to enable the next generation of deep space human spaceflight, and launch from Kennedy Space Center no earlier than December 2019. The initial Block 1 configuration for Exploration Mission 1 (EM-1)will be capable of lofting at least 70 metric tons (t)of payload and send the Orion crew vehicle into a distant retrograde lunar orbit, paving the way for future crew missions to cislunar space and eventually Mars. A Block 1B version of SLS will lift at least 34 t to trans-lunar injection (TLI)in its crew configuration and at least 37 t to TLI in its cargo configuration no earlier than 2024. For Mars-class payloads, larger fairings and payload adapters for the Block 2 cargo vehicle are under consideration. For missions beyond the Earth-Moon system, SLS offers greater characteristic energy (C3)than any other launch vehicle, enabling shorter transit times or heavier payloads with more robust science packages for missions to the outer solar system. Indeed, the unmatched combination of thrust, payload volume and departure energy that SLS provides opens new opportunities for human and robotic exploration of deep space. To support the delivery of infrastructure on all of these flights, a family of SLS Payload Adapters (PLA)is being developed to provide ELV class (1575-mm, 2624-mm, 4394-mm)and larger spacecraft/payload interfaces for both crewed (Orion)and cargo (fairing)missions. These PLAs also provide the potential of accommodating various configurations of 6U, 12U and 27U Secondary Payloads (SPL). Work on demonstrating the manufacturing of these 8.4-m diameter composite structures is already in progress at Marshall Space Flight Center in Huntsville, Alabama, which manages the SLS Program. Because of the many potential configurations required to support SLS missions ranging from sending Europa Clipper to Jovian space to establishing a lunar orbiting Gateway, there is a critical need for establishing the fewest PLA designs that can accommodate the most SLS payloads possible. This paper will summarize applications from a NASA Engineering and Safety Center (NESC)led Model Based Systems Engineering (MBSE)pathfinder activity to develop a “digital” PLA feasibility assessment approach. This approach will help potential users optimize their interface to SLS by providing analysts with the means to reduce PLA feasibility definition cycle time/effort by over 75%. This also allows more feasibility assessment “turns” available to single and multiple payload elements on a single SLS launch. This translates into providing users with options that allows them to optimize upmass available to payload versus being required for PLA structure.",1970
Algorithmic Input Generation for More Effective Software Testing,"It is impossible in practice to comprehensively test even small software programs due to the vastness of the reachable state space; however, modern cyber-physical systems such as aircraft require a high degree of confidence in software safety and reliability. Here we explore methods of generating test sets to effectively and efficiently explore the state space for a module based on the Traffic Collision Avoidance System (TCAS) used on commercial aircraft. A formal model of TCAS in the model-checking language NuSMV provides an output oracle. We compare test sets generated using various methods, including covering arrays, random, and a low-complexity input paradigm applied to 28 versions of the TCAS C program containing seeded errors. Faults are triggered by tests for all 28 programs using a combination of covering arrays and random input generation. Complexity-based inputs perform more efficiently than covering arrays, and can be paired with random input generation to create efficient and effective test sets. A random forest classifier identifies variable values that can be targeted to generate tests even more efficiently in future work, by combining a machine-learned fuzzing algorithm with more complex model oracles developed in model-based systems engineering (MBSE) software.",1970
Reliability Analysis and Failure Mitigation Strategies for the PROVE Pathfinder CubeSat Payload,"The University of Bristol is developing the PROVE (Pointable Radiometer for Observation of Volcanic Emissions) Pathfinder payload, a part of a 6U CubeSat hoped to launch in the next year. PROVE Pathfinder's aim is to image volcanic ash plumes from several different locations and aspects along its orbital trajectory. These images will be used to gain more knowledge of the ash cloud, useful in protecting civil aviation in the case of large-scale volcanic eruptions with ash associated. As CubeSats have historically suffered from a high failure rate, a thorough understanding of the reliability of the PROVE Pathfinder system is essential to mitigating the mission risk. This paper presents the analysis, results and recommended failure mitigation strategies from a reliability study carried out on the PROVE Pathfinder payload system. Several different analysis approaches were used to study the reliability of the system. These included Failure Mode Effects and Criticality Analysis (FMECA), Fault Tree Analysis (FTA), Monte Carlo simulation and a reliability model of PROVE Pathfinder devised using Model Based Systems Engineering (MBSE). Various estimates of system reliability were produced, with a final figure of 80% reliability. This estimate took account of the numerous mitigation strategies identified during the study, including cold redundancy in payload controllers and aluminum radiation shielding. While some discrepancies in qualitative reliability estimates were found, the insight gained during the study greatly assisted with identifying mitigation strategies and generally improved system reliability. A framework for reliability analysis approaches and mitigation strategy identification for general use on spacecraft systems is proposed, with opportunity for future development.",1970
Vision for Cross-Center MSBE Collaboration on the Gateway Program,"Model-Based Systems Engineering (MBSE) can be a challenge when there is only one modeler and one model involved. For the Gateway Program, due to its unique acquisition approach, the modeling efforts involve multiple NASA centers with each developing their own models. Every additional model to be integrated compounds the difficulties, necessitating stronger ontologies and explicitly defined interfaces between models. To help facilitate this integration, a vision of collaboration between centers is in its beginning stages. This vision includes looking at models as systems themselves and developing their own use cases, requirements and interfaces between each of them. The goal of this paper is to share the Gateway Program's cross-center vision for model collaboration, the lessons learned in developing and implementing that vision for the various system engineering products needed to satisfy life cycle review criteria and how treating models as systems helped in these efforts.",1970
A comparative study of languages for model-based systems-of-systems engineering (MBSSE),"Teaching model-based systems engineering has become more challenging as research and development has shifted from systems to include systems-of-systems (SoSs). SoSs involve primarily combination of hardware and software, as well as humans and organizations. The need to teach model-based system-of-systems engineering has thus raised the need to determine what the most suitable language for modeling and teaching SoSs is. We developed a new course format, in which groups jointly reverse-engineer and model Web-based information systems in two different modeling languages, UML and OPM, and then individually assess their peers' projects. The goal of this study was to compare UML with OPM as two candidates. We developed and evaluated an online peer assessment tool which students used. About 130 undergraduate students in groups of six divided into teams of three modeled 23 systems in both UML and OPM. They then evaluated, compared, and ranked the clarity & understandability and the completeness of the four models of two systems that their peers had constructed. Findings demonstrate that neither the order of the models assessment nor the assessor gender affected the grading, indicating assessment reliability. We found significant differences in model clarity and understandability in favor of OPM and no differences in completeness between OPM and UML models. These findings validate our approach of teaching both conceptual modeling languages and using peer assessment in large-scale project-based undergraduate information systems engineering courses.",1970
Model-Driven Systems Engineering for Virtual Product Design,"Model-Based Systems Engineering (MBSE) aims to provide a systems engineering methodology that leverages modeling methods to support design, analysis, verification, and validation of systems. As such, methodologies for MBSE have to be able to integrate heterogeneous engineering models from a variety of domains, including mechanical engineering, product design, legislation, and many more. Most research in this area usually only focuses on general system descriptions of a step in the system development process, without providing any interdisciplinary or interprocess connections. Thus, the models created by the domain experts are often unconnected and not suited for automated model transformations. We present a method to integrate abstract system descriptions in the Systems Modeling Language (SysML) with Computer-Aided Design (CAD) models, which are not only the primary model for geometrical hardware descriptions but also the starting point of most process chains in the context of virtual product development. The transformations of our method are realized in a plug-in for the MagicDraw modeling environment and support to generate parameters of a parameter and constraint CAD modeling approach from a SysML model. This automates the integration of abstract system descriptions with design models to foster a coherent virtual product development.",1970
A Systematic Mapping Study on Modeling for Industry 4.0,"Industry 4.0 is a vision of manufacturing in which smart, interconnected production systems optimize the complete value-added chain to reduce cost and time-to-market. At the core of Industry 4.0 is the smart factory of the future, whose successful deployment requires solving challenges from many domains. Model-based systems engineering (MBSE) is a key enabler for such complex systems of systems as can be seen by the increased number of related publications in key conferences and journals. This paper aims to characterize the state of the art of MBSE for the smart factory through a systematic mapping study on this topic. Adopting a detailed search strategy, 1466 papers were initially identified. Of these, 222 papers were selected and categorized using a particular classification scheme. Hence, we present the concerns addressed by the modeling community for Industry 4.0, how these are investigated, where these are published, and by whom. The resulting research landscape can help to understand, guide, and compare research in this field. In particular, this paper identifies the Industry 4.0 challenges addressed by the modeling community, but also the challenges that seem to be less investigated.",1970
Small spacecraft in small solar system body applications,"In the wake of the successful Philae landing on comet 67P/Churyumov-Gerasimenko and the launch of the first Mobile Asteroid Surface Scout, MASCOT, aboard the Hayabusa2 space probe to asteroid (162173) Ryugu, small spacecraft in applications related to small solar system bodies have become a topic of increasing interest. Their unique combination of efficient capabilities, resource-friendly design and inherent robustness makes them attractive as a mission element at the frontiers of exploration of the solar system by larger spacecraft as well as stand-alone low-cost approaches to open up the solar system for a broader range of interests. The operators' requirements for cutting-edge missions compatible with available launch capabilities impose significant constraints in resources, timelines, timeliness, mass and size. To create spacecraft feasible within these constraints, the mission design teams need to accept a broad range of equipment maturity levels from fresh concepts to off-the-shelf units. The resulting Constraints-Driven Engineering (CDE) environment has led to new methods which transcend traditional evenly-paced and sequential development. We evolved and extended Concurrent Design and Engineering (CD/CE) methods originally incepted for initial studies into Concurrent Assembly, Integration and Verification (CAIV). It is applied in all phases in most of our projects to achieve convergence of asynchronous subsystem maturity timelines and to match parallel tracks of integration and test campaigns. When facing such a challenge, Model-Based Systems Engineering (MBSE) supports design trades and constant configuration evolution due to unforeseen changes. Proactive change and schedule acceleration has resulted from system-level CD/CE optimization across interface boundaries by MBSE-aided CAIV.",1970
Building a Semantic Layer for Early Design Trade Studies in the Development of Commercial Aircraft,"To improve the adoption of Model-based Systems Engineering (MBSE), data that is distributed across engineering disciplines needs to be made available in an open and descriptive way. This paper describes a new approach to implementing a semantic layer that allows integrating and publishing MBSE data stored in heterogeneous models in a uniform way by means of Semantic Web technologies. The tool-independent views on engineering data provided by the semantic layer enable the implementation of services for accessing, classifying, checking and reuse of federated information. We report on the creation of a common vocabulary in the Ontology Modeling Language (OML) that can be automatically instantiated from distributed models into a knowledge graph. We demonstrate the benefits of our approach using a Systems Modeling Language (SysML) based early design trade study in the aeronautics domain.",1970
Requirement Analysis with SysML for Concept Design of Offshore Wind Farm Grid Connection,"Energy networks are continuously changing and expanding, e.g. due to the integration of renewable energies. For example, many offshore wind farms (OWF) have been built and are planned in the near future. This makes the development of reliable and cost-efficient grid connection systems important. High voltage direct current (HVDC) is a suitable technology for connecting large OWFs far away from shore. Many HVDC based grid connection topologies are possible. Therefore, a systematic development methodology for complex systems based on a holistic approach is required. As part of this research, Model Based Systems Engineering (MBSE) integrating the System Modeling Language (SysML) is applied for the development of a HVDC grid connection for OWFs. With this methodology it is possible to develop a detailed system model for a case study step by step, considering stakeholder objectives, constraints and requirements. SysML allows the creation of an abstract system model allowing an appropriate design in the early project phase while avoiding costly late changes. This paper focuses as a first step on the requirement engineering with a subsequent conceptual design of the grid connection system and provides a levelized cost of energy (LCOE) improved and efficient system concept as a result.",1970
Dynamic gate product and artifact generation from system models,"Model Based Systems Engineering (MBSE) is gaining acceptance as a way to formalize systems engineering practice through the use of models. 12The traditional method of producing and managing a plethora of disjointed documents and presentations (“Power-Point Engineering”) has proven both costly and limiting as a means to manage the complex and sophisticated specifications of modern space systems. We have developed a tool and method to produce sophisticated artifacts as views and by-products of integrated models, allowing us to minimize the practice of “Power-Point Engineering” from model-based projects and demonstrate the ability of MBSE to work within and supersede traditional engineering practices. This paper describes how we have created and successfully used model-based document generation techniques to extract paper artifacts from complex SysML and UML models in support of successful project reviews. Use of formal SysML and UML models for architecture and system design enables production of review documents, textual artifacts, and analyses that are consistent with one-another and require virtually no labor-intensive maintenance across small-scale design changes and multiple authors. This effort thus enables approaches that focus more on rigorous engineering work and less on “PowerPoint engineering” and production of paper-based documents or their “office-productivity” file equivalents.",1970
Model-based off-nominal state isolation and detection system for autonomous fault management,"This paper presents a model-based fault management (FM) system designed to provide off-nominal state detection and isolation capabilities that are key components to assessing spacecraft state awareness. The ability to autonomously isolate spacecraft failures to component levels will enable faster and more targeted responses and recovery thereby reducing down time. The use of model-based systems and practices is being explored by the FM community as a viable approach to developing more capable, autonomous systems in order to meet mission objectives. Model-based systems can provide better fault identification than traditional methods of fault detection such as limit-checking. They also lend themselves to more straight-forward approaches to verification and validation. We have chosen a particular model-based technique called Constraint Suspension for autonomous fault detection and isolation that does not require explicit fault modeling. The system is composed of a diagnostic engine and nominal system models of the target application, for example sensors and actuators. Sensed data are propagated through models of nominal system behavior. Faults are diagnosed when inconsistencies arise between sensed and modeled data. Several benefits result from this choice. First, because knowledge of faulty behavior is not required, it is possible to detect unanticipated and unforeseen faults. In fact, anomalous, degraded, and failed states all can be detected. Second, the same models used for nominal analyses and operations can be re-used for fault management, saving development resources and time. Third, the core diagnostic engine algorithm is complete and requires no additions to accommodate a potentially growing number of faults over time resulting in a relatively compact software footprint. Related to the second and third points is that the core algorithm and, potentially, models can be reused from mission to mission. Finally, the system can be used early in the design phase as a tool for sensor placement analyses and model verification. Health information produced by the FM system can be used to make resource allocation and planning and scheduling decisions by ground operations or by other on-board autonomy agents. Autonomous fault detection, isolation, and recovery (FDIR) on board space vehicles will provide protection and increased mission availability and reliability. On the ground such systems enable lights-out monitoring as well as training and support for operators. This paper presents the development of fault detection and isolation algorithms and models. Application of the system to a spacecraft attitude control system is discussed. Finally we apply Model-Based Systems Engineering (MBSE) modeling patterns to the fault management system models as a way to facilitate the development of the models through the use of SysML.",1970
Case study: Agile hardware/firmware/software product line engineering at Rockwell Collins,"Rockwell Collins, in Cedar Rapids, Iowa, is using a product line approach for a family of radios they produce for military and international markets, with an agile systems engineering process tailored individually for synchronized software, firmware, and hardware development. This mixed-discipline engineering group encompasses some 350 employees working on multiple projects simultaneously for multiple customers. The product line approach provides an agile systems target-context for the agile systems engineering process — re-using common product-line hardware, firmware, and software whenever possible, evolving the product line with both internally-funded development and opportunities presented by customer project work, and accommodating special customer needs that grow the knowledge and capability base for potential later use in product-line extension. This article focuses on the mixed-discipline agile systems engineering process reviewed in the September, 2015, INCOSE Agile Systems Engineering Life Cycle Model (ASELCM) discovery workshop, and doesn't address the proprietary strategy and detail of the product line architecture. Notable elements that will be discussed include a parallel evolving product line roadmap as the strategic driving function, a facilitating central relationship-management role for systems engineering, synchronization of mixed engineering disciplines, an enabling infrastructure for agile hardware development, strong opportunity management complimenting traditional risk management, and comparison to the ASELCM Model-Based Systems Engineering (MBSE) pattern.",1970
An optimized method for generating fault tree from a counter-example,"With the development of the Model Based Systems Engineering (MBSE), the Model-based safety analysis (MBSA) process and techniques have been widely studied and applied, which include system modeling, safety properties verification and safety analysis. As a core task, model checking explores the state space of the system model to generate counter-examples which describe system state sequences not meeting safety requirements. Although these sequences are useful for safety analysis, we still need to get the traditional safety artifacts such as a fault tree to keep the conclusion complete. Many studies have focused on how to generate fault trees from the counter-example automatically. However, there are some disadvantages in the existing generation methods. For instance, the generated fault tree contains many branch redundancies making the respective tree broad and difficult to understand, which limits the effectiveness and efficiency of the model checking technique. Based on investigating model checking mechanisms and counter-example forms, and combined with the traditional fault tree algorithm, this paper proposed a new optimized method that can translate the system state sequence obtained from the counter-example in NuSMV into a fault tree. By analyzing system operation process and function flow, and considering system hierarchical decomposition as well, the structure of the generated fault tree can be optimized, including redundant nodes removing and dimensions reducing, to improve its logical hierarchy and readability. Finally, a case study about airborne equipment is provided to demonstrate and validate the proposed method.",1970
Kick-off Your Reliability Program with a Requirements Failure Modes and Effects Analysis,"SUMMARYThoroughly checking requirements in the very early stages of development is extremely important to reducing the risk of out-of-phase rework later in the program’s lifecycle. Therefore, one of a development program’s first goals is to converge on achievable system design requirements that satisfy the customer’s functional and performance needs. Part of this system design requirements development activity is quantifying risks and risk mitigations associated with the requirements, where risk mitigation may include creating new requirements or changing existing requirements. Conducting a Requirements Failure Modes and Effects Analysis (FMEA) during this early stage of development is an excellent way of reviewing and cutting potential gaps or ambiguous requirements that lead to out-of-program-phase rework. This paper explains what a Requirements FMEA is and its key steps using practical examples. Furthermore, this paper will show the reader how to perform a Requirements FMEA using Model Based Systems Engineering (MBSE) methods for even greater benefits.",1970
Identifying Multidisciplinary Metrics to Analyze NASA Case Studies,"Background: Communication is fundamental to the success of engineered systems, enabling interactions between the system's stakeholders. Systems engineering, an integrative discipline on which the contributions of many disciplines are evaluated against each other, may particularly benefit from research in communication methods. Specifically, storytelling may be beneficial to engineers because it enables sense-making. Research into storytelling is conducted to identify storytelling metrics that could be useful in engineering communication, specifically engineering case studies. Literature review: Although storytelling has been identified in past research as possibly useful to Model-Based Systems Engineering (MBSE) and software requirement writing, a rigorous study of the use of storytelling elements in systems engineering communication has not been performed. Research question: How are storytelling elements currently being applied in engineering case studies? Research methodology: Twelve interdisciplinary metrics from storytelling, content analysis, and engineering are identified from the literature and used to characterize a collection of 48 NASA case studies. The values of the metrics for each case study are determined and analyzed using statistical and content analyses. Results and discussion: Analysis of the 12 metrics indicates that the case study design region with a historical backstory structure, climactic plot structure, and early points of attack is most frequently used by designers. Conclusions: The analysis indicates that certain storytelling elements applied in engineering case studies are used more frequently. Further work is needed to leverage the metrics as design variables in engineering case study writing.",1970
Model-based architecture optimization for major acquisition analysis of alternatives,"Architecture selection trade studies in DoD acquisitions, in particular during the mandated Analysis of Alternatives (AoA) process of a Major Defense Acquisition Program (MDAP), typically select several parameters of interest and generate a comparison set of 4 or 5 potential architectures. These architectures are then individually evaluated on each parameter of interest, with the results manually compared. Measures of effectiveness (typically dealing with technical performance) and cost are independently analyzed per DoD guidance. Based on advances in model-based systems engineering (MBSE), systems architecting best practices, and analytical tools, we propose a better option to conduct a multidisciplinary optimization (MDO) for the parameters of interest, including cost, to generate the architecture that presents the best value for the government while meeting affordability and performance constraints. This allows for more potential architectures to be evaluated quickly and can lead to the identification of the most promising architectures that may not have been identified utilizing more traditional manual methods. MDO can also be demonstrated to have greater transparency, more robust uncertainty analysis, and increased flexibility in adapting to scope changes in the evaluation than a more manual approach. In this research, a satellite architecture trade study analyzing disaggregation, modular satellite development, and alternative orbits was conducted with the more manual technique per current AoA guidance, and the MDO technique utilizing the ModelCenter™ tool developed by Phoenix Integration, Inc. The results of the techniques were compared and demonstrated how MDO can capture extra value from an architecture trade study, in particular an AoA, than a more manual process. In addition, the techniques themselves were compared on the basis of cost, level of effort, uncertainty, transparency, and flexibility with the intent of identifying improved DoD guidance for MDAP acquisitions.",1970
A rule-based tool for science traceability of Mars exploration mission architectures,"One approach used by NASA when evaluating a science mission architecture is to develop a Science Traceability Matrix (STM), which presents a flow-down of mission objectives into science objectives, measurement objectives, and measurement and instrument requirements. Recently, the science traceability and alignment framework (STAF) was proposed as an improvement over the STM. One limitation of both approaches used for traceability purposes is that they must be manually completed by experts and thus cannot be used to compare many alternatives as done in trade space exploration. This can be addressed to some extent using formal modeling languages such as SysML and model-based systems engineering (MBSE) tools, which can automatically construct tables showing traceability between requirements. However, despite the presence of parametric diagrams, it is still challenging to quantify how changes in the system architecture affect requirement satisfaction. Here, the authors present a knowledge-based tool that can address both needs: given a system architecture, it can generate traceability hierarchies similar to the ones in STM and STAF while also providing a quantitative assessment of requirement satisfaction. This executable STM is implemented as a rule-based system that uses a database of measurement requirements for a given mission. Upon execution, the tool provides not only a score but also a rationale for full or degraded satisfaction of the mission requirements. As an example, the three Mars mission architectures proposed in the Decadal Survey were evaluated. Traceability to the objectives established by the Decadal Survey along with the science value achieved by each concept and the rationale for why the missions cannot satisfy certain measurements were generated.",1970
System Validation on the Europa Clipper mission in Early Implementation Phase,"NASA's next flagship mission - Europa Clipper, will embark on a journey to Jupiter's icy moon Europa in 2024 to assess its environment and habitability with a highly capable spacecraft. Post Jupiter-Orbit- Insertion, the spacecraft will be commanded to perform intricate, yet meticulously planned Europa flybys to perform science investigations using a suite of instruments, while withstanding Jupiter's harsh radiation environment. The success of this mission is dependent on a well-coordinated project and its elements such as the flight hardware and software, the ground support and mission operations teams, procedures and other cross-cutting elements. The Europa Clipper project needs to ensure that these elements are realized at a reasonable confidence level prior to launch and other mission critical events. System Validation test and analysis activities exercise and confirm the integrity of the system of all project elements in the expected flight environment with reasonable stressing conditions. These activities go beyond system design requirements verification and are driven by validation objectives that describe the end-to-end functional and operational capabilities required during nominal and off-nominal flight-like scenarios and critical events. The challenges associated with validating that the Europa Clipper project as a whole can function and perform correctly to meet the intended mission objectives with the as-delivered capabilities of all of its elements are daunting. This paper discusses the systematic methodology established in the early implementation phase of the Europa Clipper project for developing System Validation activities and their validation objectives, and addressing any validation-related challenges on the project. Approaches include decomposition of mission objectives using activity timelines in the Mission Design plan for developing nominal scenarios, use of fault trees for exploring off-nominal cases and system boundaries, and use of Model-based Systems Engineering (MBSE) tools for planning and prioritizing these activities.",1970
Deploying model-based systems engineering with IBM® rational® solutions for systems and software engineering,"Prerequisites - to be provided by Customer. Provide overview of present workflow - not process. Provide requirements associated to the project (e.g. project objective and definition, functional requirements) that will be the basis of the 6 weeks MbSE engagement. Identify “core team” that will be assigned to the project for the next 6 weeks.",1970
