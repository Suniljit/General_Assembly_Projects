@article{https://doi.org/10.1002/j.2334-5837.2016.00315.x,
author = {Parthasarathi, Hans and Ramachandra, S and Srinivasamurthy, PN},
title = {Model-Based Systems Engineering for Aero Gas Turbine Engine Subsystems},
journal = {INCOSE International Symposium},
volume = {26},
number = {s1},
pages = {70-82},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00315.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00315.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00315.x},
abstract = {Abstract Enhanced complexity of modern systems often brings challenges in achieving performance, cost and time targets during development. Aero gas turbine engines are highly complex systems involving several modules and subsystems. Full Authority Digital Electronic Controller (FADEC) of aero engine is a very complex subsystem by itself, encompassing hardware and software to control the engine during all phases of operation. The current paper outlines an approach for system-level design of FADEC using model-based systems engineering (MBSE). FADEC is described comprehensively and consistently using SysML language. This includes defining the requirements of FADEC, importing them into SysML model and analysing these requirements, proposing multiple operations including the flow of control and data to fulfil these requirements, proposing a high-level system architecture, modelling the interaction between subsystems, and verifying system performance through simulation. This model is expected to help individual design teams in development of the FADEC meeting the project goals.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00167.x,
author = {Friedland, Brittany and Malone, Robert and Herrold, John},
title = {Systems Engineering a Model Based Systems Engineering Tool Suite: The Boeing Approach},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {386-398},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00167.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00167.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00167.x},
abstract = {Abstract Given the scope of some of the large scale system architecture models created at The Boeing Company, it is currently necessary for Boeing to customize its own Model Based Systems Engineering (MBSE) tool suites from Commercial-Off-The-Shelf (COTS) platforms to accommodate these models. Boeing successfully applies a modified set of Systems Engineering (SE) architectures to specify the required MBSE tool suites and also has developed a unique SE skill set for engineers creating these specifications and developing and deploying the subsequent tool suites. Furthermore, Boeing uses an MBSE tool suite to create these tool suite specifications as models, and also manages the configuration of the MBSE tool suite within the models.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2002.tb02490.x,
author = {Lee, Joong Yoon and Park, Young Won},
title = {9.2.3 A Sublayer Generation of System Architecture Using the Model Based Systems Engineering Tool},
journal = {INCOSE International Symposium},
volume = {12},
number = {1},
pages = {416-422},
doi = {https://doi.org/10.1002/j.2334-5837.2002.tb02490.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2002.tb02490.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2002.tb02490.x},
abstract = {Abstract This paper describes a set of practical methods and templates developed to practice the Model Based Systems Engineering (MBSE), a computer-aided systems engineering, in an efficient manner. It also shows the steps to build more credible data model. The scope of the work includes the systems engineering engine process which represents the requirements analysis, functional analysis/allocation, and synthesis. This work focuses on the functional architecture generation. The SE engine process is tailored to accommodate the specific needs encountered from practical applications of the MBSE. The outcome of the work includes the templates for requirement and scenario description methods essential to construct MBSE database. To ensure the model credibility, the study presents the use of belief criteria.},
year = {2002}
}
@article{https://doi.org/10.1002/j.2334-5837.2013.tb03048.x,
author = {Bayer, Todd J. and Chung, Seung and Cole, Bjorn and Cooke, Brian and Dekens, Frank and Delp, Chris and Gontijo, I. and Wagner, Dave},
title = {Update on the Model Based Systems Engineering on the Europa Mission Concept Study},
journal = {INCOSE International Symposium},
volume = {23},
number = {1},
pages = {694-709},
doi = {https://doi.org/10.1002/j.2334-5837.2013.tb03048.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2013.tb03048.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2013.tb03048.x},
abstract = {Abstract In May 2012 the Europa study team delivered to NASA the final reports on three distinct concepts for exploring Europa on a limited budget. The depth and quality of these reports have been widely praised by independent reviewers as well as by our sponsor. The application of Model Based Systems Engineering (MBSE) techniques is credited with enabling the team to study three quite different mission concepts for the resources normally sufficient to study only one or two. The Europa MBSE infusion itself has been awarded the NASA Systems Engineering Excellence Award in 2012. The Europa team is now preparing for its Mission Concept Review and has reaffirmed and strengthened the MBSE application. Significant new capabilities have been completed, most importantly the Powered Equipment List (PEL) and the computation of scenario-based power and energy margins. This paper provides an update on the continued successful application of MBSE in the dynamic environment of early mission formulation, the significant new results produced and several additional lessons learned in the process.},
year = {2013}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00216.x,
author = {Vipavetz, Kevin and Shull, Thomas A. and Infeld, Samantha and Price, Jim},
title = {Interface Management for a NASA Flight Project using Model-Based Systems Engineering (MBSE)},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {1129-1144},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00216.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00216.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00216.x},
abstract = {Abstract The goal of interface management is to identify, define, control, and verify interfaces; ensure compatibility; provide an efficient system development; be on time and within budget; while meeting stakeholder requirements. This paper will present a successful seven-step approach to interface management used in several prior NASA flight projects. The seven-step approach using Model Based Systems Engineering will be illustrated by interface examples from the Materials International Space Station Experiment-X (MISSE-X) project. The MISSE-X was being developed as an International Space Station (ISS) external platform for space environmental studies, designed to advance the technology readiness of materials and devices critical for future space exploration. Emphasis will be given to best practices covering key areas such as interface definition; writing good interface requirements; utilizing interface working groups; developing and controlling interface documents; handling interface agreements; the use of shadow documents; and the importance of interface requirement ownership, interface verification, and product transition.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00805.x,
author = {Roodt, Donovan and Nadeem, Malaeka and Vu, Lam-Thien},
title = {Model-Based Systems Engineering for complex rail transport systems – A case study},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {1581-1595},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00805.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00805.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00805.x},
abstract = {Abstract The replacement of the signalling and control systems on Sydney's critical heavy-rail network infrastructure is envisaged to take years and affect many systems across the operational railway. Systems Engineering has been adopted early in the system lifecycle to manage the complexity and risks in a rigorous and consistent manner. This paper aims to document the real-life application of a Model-Based Systems Engineering (MBSE) methodology in the conceptual design stage on Transport for New South Wales’ Digital Systems Program. It illustrates how this methodology was applied to capture the operational and maintenance concepts, derive the architecture and interfaces and guide resulting requirements. It provides valuable lessons-learnt for the acquiring organisation on the deployment of MBSE, its benefits and lessons learnt.},
year = {2020}
}
@article{https://doi.org/10.1002/iis2.12988,
author = {Chami, Mohammad and Abdoun, Nabil and Bruel, Jean-Michel},
title = {Artificial Intelligence Capabilities for Effective Model-Based Systems Engineering: A Vision Paper},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {1160-1174},
doi = {https://doi.org/10.1002/iis2.12988},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12988},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12988},
abstract = {Abstract Both Model-Based Systems Engineering (MBSE) and Artificial Intelligence (AI) have been challenged for their deployment in real-world applications. Although MBSE remains the focal point of any systems engineering activities, its adoption still faces significant hurdles to demonstrate its return on investment. Recently, AI has received intensive attention, and its applications made their way into our daily life products. From an industrial perspective, within the context of the design and development of mechatronic systems, there is a lack of coherent foundation to enable the application of AI in MBSE. This vision paper discusses the role of AI in solving a set of MBSE challenges. As a result, we contribute by describing the actual MBSE adoption challenges and follow up with the characterization of the capabilities of AI in solving these challenges. With this initial work, we aim to trigger both AI and MBSE communities for further research discussions and industrial applications to help in achieving an intelligent design and development environment.},
year = {2022}
}
@article{https://doi.org/10.1002/iis2.12975,
author = {Ploeg, Cacia and Lai, Kimberly and Olechowski, Alison},
title = {Prioritization of Best Practices in the Implementation of Model-Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {961-975},
doi = {https://doi.org/10.1002/iis2.12975},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12975},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12975},
abstract = {Abstract Model-based systems engineering (MBSE) is a form of systems engineering that is reported to lead to many benefits; yet few companies have successfully implemented MBSE, partly due to a predominance of guidance for adoption that does not recognize differences in organizational context. This paper uses a combination of a literature review and semi-structured interviews to evaluate the hypothesis that the applicability of best practices varies on a case-by-case basis due to factors such as company size, industry, and location. A list of best practices is compiled from existing works and validated with interviews, ultimately resulting in a more complete and accurate list of best practices, along with a recommendation that each company should uniquely assess their circumstances and prioritize this list of best practices accordingly. The findings presented in this paper provide improved guidance towards the use of best practices for successful MBSE implementation.},
year = {2022}
}
@article{https://doi.org/10.1002/iis2.12907,
author = {Caines, Charles and Jaques, David and Geiger, Jeremy},
title = {Standard Verification using Model Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {32},
number = {S2},
pages = {179-186},
keywords = {MBSE, Reference Architecture, Standard, SysML, Verification},
doi = {https://doi.org/10.1002/iis2.12907},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12907},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12907},
abstract = {Abstract Systems engineering has embraced MBSE and other digital engineering techniques that have been in use in software engineering for decades. One area that MBSE lacks is automation of verification and validation of requirements for standards. System models require rework to model standards and in the case of reuse, extensive verification to ensure they have been implemented properly. SysML can utilize architectural constraints for system models in a similar way to how software engineers use architectural constraints in software architectures. Architectural constraints can be used to verify conformance with architectural decisions and standard implementation. This tool can be applied to automated standard compliance verification using query functions for analysis or validation suites for fast verification of architectural constraints. This technique has been applied to larger Reference architectures with success in finding errors architecture design as well.},
year = {2022}
}
@article{https://doi.org/10.1002/inst.12128,
author = {Hecht, Myron J.},
title = {A MODEL-BASED SYSTEMS ENGINEERING APPROACH TO RESILIENCY ANALYSIS OF AN ELECTRICAL DISTRIBUTION FACILITY},
journal = {INSIGHT},
volume = {19},
number = {4},
pages = {50-53},
doi = {https://doi.org/10.1002/inst.12128},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12128},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12128},
abstract = {ABSTRACT This article describes a model-based systems engineering (MBSE) approach to cyberattack resilience modeling for an electrical power substation and demonstrates that (1) resiliency can be quantitatively characterized to enable design tradeoffs and (2) the analysis can be incorporated into a Systems Modeling Language (SysML) model to enable it to be incorporated into an MBSE development effort. The resiliency analytical model described here using the Markov model, derives from previous work on survivability analysis. For the system under analysis, it showed that the most important performance parameter for cyber resilience is propagation resistance followed by an attack rate mitigation. However, this applicability of this result is limited to this particular system with the parameter values described below. What is of more general importance is the value of such modeling, that when combined with SysML parametric analysis capability and the differential equation solvers in tools such as Matlab, has promise in improving resiliency with respect to cyber threats in the national energy.},
year = {2016}
}
@article{https://doi.org/10.1002/iis2.12909,
author = {Larsen, Martin H. and Muller, Gerrit and Kokkula, Satyanarayana},
title = {A Conceptual Model-Based Systems Engineering Method for Creating Secure Cyber-Physical Systems},
journal = {INCOSE International Symposium},
volume = {32},
number = {S2},
pages = {202-213},
keywords = {Cyber-Physical Systems, threat modeling, MBSE, Cyber Security},
doi = {https://doi.org/10.1002/iis2.12909},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12909},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12909},
abstract = {Abstract The Air Traffic Control industry is being increasingly exposed to rising levels of risk, as criminals and cyber-attackers look to exploit system vulnerabilities. Air Navigation Service Providers become more demanding regarding cybersecurity concerns in the products they acquire. Consequently, systems engineers need to consider cyber security concerns early in their system's development life cycle. Model-Based Systems Engineering methodologies are widely used to manage complex engineering projects in terms of system requirements, design, analysis, verification, and validation activities, leaving cyber security aspects aside. This paper presents a conceptual solution of a model-based security method that aims to enable systems engineers to perform threat modeling analysis of cyber-physical systems early and incorporate mitigation strategies into the system design, thereby reducing the cyber-physical system's overall security-related risks. Based on a real-life case study the method will be validated later during execution period from Jan. – May 2022.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00725.x,
author = {Lu, Jinzhi and Wang, Guoxin and Ma, Junda and Kiritsis, Dimitris and Zhang, Hang and Törngren, Martin},
title = {General Modeling Language to Support Model-based Systems Engineering Formalisms (Part 1)},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {323-338},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00725.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00725.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00725.x},
abstract = {Abstract Model-based systems engineering (MBSE) has been proposed for systems engineering (SE) whereby modeling approaches have been developed to support formalisms of system artifacts. By using traditional MBSE approaches, these formalisms are described by different languages; however, the use of different tools for such languages leads to gaps which result in integration difficulties for various system engineering product views, such as the requirements, architecture, and others. In this study, a textual modeling language is developed based on a graph, object, point, property, role, and relationship approach, known as “Karma,” to formalize models and meta-models. Its main goal is to construct different MBSE languages and their models, and to formalize the model-transformation and code-generation processes during the entire lifecycle. Based on the Karma language, an MBSE tool is developed to formalize the entire SE approach of products with the use of models, and to support automated model transformation for architecture-driven and code-generation schemes (introduced in Part 2 of this paper series). Finally, we evaluate the feasibility of the Karma language with our developed tool MetaGraph with an example which is based on the use of an auto-braking case in an autonomously driven system.},
year = {2020}
}
@article{https://doi.org/10.1002/sys.21573,
author = {Younse, Paulo J. and Cameron, Jessica E. and Bradley, Thomas H.},
title = {Comparative analysis of a model-based systems engineering approach to a traditional systems engineering approach for architecting a robotic space system through knowledge categorization},
journal = {Systems Engineering},
volume = {24},
number = {3},
pages = {177-199},
keywords = {cognitive psychology, knowledge management, model-based systems engineering (MBSE), robotic space systems, system architecture},
doi = {https://doi.org/10.1002/sys.21573},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21573},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21573},
abstract = {Abstract This study compares the types and quantities of knowledge that are captured by a model-based systems engineering (MBSE) approach and a traditional architecting approach to measure the benefits of the MBSE approach in managing the complexity of a robotic space system. The MBSE approach was implemented with Cameo Systems Modeler using Systems Modeling Language (SysML) and applied to architecting an orbiting sample Capture and Orient Module (COM) system concept for a Capture, Containment, and Return System payload concept for potential Mars Sample Return. An architecture framework was established, covering system, subsystem, and assembly levels, along with structure, behavior, data, and requirements perspectives. The COM system architecture was captured in parallel using both the MBSE and non-MBSE approaches in order to provide a side-by-side comparison of the approaches. The approaches were evaluated based on how well each represented the information content of the COM system architecture. A total of 4389 knowledge elements were classified using the Revised Bloom's Taxonomy knowledge dimension and used to quantitatively compare the two approaches. The MBSE approach more completely captured architectural knowledge than the non-MBSE approach. Limitations to the SysML-based MBSE approach were also identified, including its ability to fully represent certain high-level conceptual, procedural, and metacognitive knowledge such as design principles, design approaches and rationales, risks, development strategies and rationales, organizational core competencies, and requirement verification methods. The overall results demonstrate the benefits of MBSE in managing the complexity of robotic space systems and strengthen the case for adopting MBSE within the systems engineering community.},
year = {2021}
}
@article{https://doi.org/10.1002/iis2.12996,
author = {Ross, Jeremy and Vinarcik, Michael and Caron, Christopher and Craft, Christopher and Pien, Stephen and Prajapati, Ashishkumar},
title = {Applying Model-Based Systems Engineering Methods to a Novel Shared Systems Simulation Methodology},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {1303-1319},
doi = {https://doi.org/10.1002/iis2.12996},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12996},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12996},
abstract = {Abstract The need to develop increasingly complex, integrated systems and multi-domain systems-of-systems is initiating a transformation within the discipline of systems engineering. The critical trends of increasing interconnectivity, compressed development times, growing cybersecurity concerns, and a rapidly changing workforce are driving current systems engineering practices into obsolescence. Model-Based Systems Engineering (MBSE) is a formalized approach to systems engineering that uses models as an integral component of a system's technical definition with the objective of enhancing communication through rigor and precision and managing system complexity. This paper discusses the application of MBSE methods to the definition of a shared systems architecture and the development of novel methodologies for extending the model-based approach from the system definition space into the system simulation and analysis domain. Approaches for interface management of design properties between a model-based architecture and system simulation will be reviewed, with the effectiveness of each approach discussed.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2017.00414.x,
author = {Friedland, Brittany and Herrold, John and Ferguson, Glendora and Malone, Robert},
title = {Conducting a Model Based Systems Engineering Tool Trade Study Using a Systems Engineering Approach},
journal = {INCOSE International Symposium},
volume = {27},
number = {1},
pages = {1087-1099},
doi = {https://doi.org/10.1002/j.2334-5837.2017.00414.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2017.00414.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2017.00414.x},
abstract = {Abstract Evaluating and choosing a comprehensive Commercial-Off-The-Shelf (COTS) platform to serve as the basis for a deployable large scale Model Based Systems Engineering (MBSE) tool suite is a challenging task with many factors to take into account. Applying a Systems Engineering approach to the problem gives a highly useful roadmap for choosing an effective solution. Boeing evaluated 25 candidate COTS platforms against end users processes and accompanying business requirements that were used to identify and specify the desired tool suite functionality, desired behavior, and design constraints. Design constraints included a range of considerations from scalability concerns to implementation specific needs. This paper outline the criteria against which the candidates solutions were evaluated and the results of the evaluations.},
year = {2017}
}
@article{https://doi.org/10.1002/sys.21537,
author = {Poller, Andreas},
title = {Exploring and managing the complexity of large infrastructure projects with network theory and model-based systems engineering—The example of radioactive waste disposal},
journal = {Systems Engineering},
volume = {23},
number = {4},
pages = {443-459},
keywords = {large infrastructure projects, model-based systems engineering, network theory, Object-Process Methodology, Systems Modeling Language},
doi = {https://doi.org/10.1002/sys.21537},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21537},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21537},
abstract = {Abstract Given that model-based systems engineering (MBSE) captures the structure and behavior of an engineered system in an overarching system model, MBSE appears to be a promising approach to managing large infrastructure projects (LIPs). However, it is not apparent how to most appropriately organize the associated system model—and hence the infrastructure project itself. Furthermore, MBSE may today not be readily accepted by the civil engineering industry. In this research, a hypothetical project for the geological disposal of radioactive waste is taken as an example of an LIP and initial system models of the entire disposal project are created. Furthermore, a network representation of the project is generated and examined with network theory. Based on the results, different project organizations are synthesized and evaluated. Eventually, the initial system models are updated to accommodate the most suitable organization according to the network analysis results. In addition, the perception of, and attitude toward MBSE is assessed by means of a cross-sectional survey in a civil engineering company. The generation of system models of LIPs is found to be straightforward. Network theory is able to unveil the complex structure of LIPs in order to identify the most suitable way to organize them and the associated system models. The survey results suggest that MBSE may find broad acceptance in the civil engineering industry.},
year = {2020}
}
@article{https://doi.org/10.1002/j.2334-5837.2005.tb00775.x,
author = {Schindel, William D.},
title = {11.2.1 Requirements Statements Are Transfer Functions: An Insight from Model-Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {15},
number = {1},
pages = {1604-1618},
doi = {https://doi.org/10.1002/j.2334-5837.2005.tb00775.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2005.tb00775.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2005.tb00775.x},
abstract = {Abstract Traditional systems engineering pays attention to careful composition of prose requirements statements. Even so, prose appears less than what is needed to advance the art of systems engineering into a theoretically-based engineering discipline comparable to Electrical, Mechanical, or Chemical Engineering. Ask three people to read a set of prose requirements statements, and a universal experience is that there will be three different impressions of their meaning. The rise of Model-Based Systems Engineering might suggest the demise of prose requirements, but we argue otherwise. This paper shows how prose requirements can be productively embedded in and a valued formal part of requirements models. This leads to the practice-impacting insight that requirements statements can be non-linear extensions of linear transfer functions, shows how their ambiguity can be further reduced using ordinary language, how their completeness or overlap more easily audited, and how they can be “understood” more completely by engineering tools.},
year = {2005}
}
@article{https://doi.org/10.1002/iis2.12959,
author = {Lu, Jinzhi and Wang, Guoxin and Yan, Yan and Cameron, David and Lei, Feng and Zhang, Yangyang and Tang, Xijin and Wang, Jian and Tang, Junjie and Tang, Jian and Zhang, Huisheng and Reniers, Michel and Törngren, Martin and Ma, Junda and Keraron, Yves and Wu, Shouxuan and Kiritsis, Dimitris},
title = {Semantic Model-based Systems Engineering based on KARMA: A Research and Practice Roadmap 2025},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {706-720},
doi = {https://doi.org/10.1002/iis2.12959},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12959},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12959},
abstract = {Abstract Model-based Systems Engineering is proposed as a graphical approach to support for-malization of system artifacts across system lifecycle based on models since 1993. The previous motivation of graphical specification is to provide a unified graphical description on the perspective of systems engineering in order to formalize system architectural views, to promote communications among stakeholders and to support system analysis and verification. However, when different modeling tools are developed based on such graphical specifications, model and data interoperability across modeling tools is the biggest challenge faced by the tool venders and MBSE practitioners. Thus, semantic specification is proposed again to enhance data interoperability, such as SysML 2.0 as a possible solution. In this paper, we propose a new semantic MBSE language and framework aiming to support complex system development using a semantic two-core mechanism: 1) KARMA language and 2) Industrial Ontologies Foundry (IOF) SE and MBSE ontology. Then, we introduce the KARMA Roadmap 2025 including technical vision, organizational views and standardization. A new KARMA open-source modeling environment is planned to being created in order to provide MBSE application for more industrial practitioners.},
year = {2022}
}
@article{https://doi.org/10.1002/iis2.12969,
author = {Marcos, Leonardo Pollettini and Li, Tiantian and Huang, Wanju and Douglas, Kerrie A and Fentiman, Audeen and DeLaurentis, Daniel A and Kenley, Charles Robert},
title = {Plug-and-Play Adaptive Approach to Integrating Model-Based Systems Engineering Concepts into Academic Curriculum},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {872-887},
doi = {https://doi.org/10.1002/iis2.12969},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12969},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12969},
abstract = {Abstract Model-based Systems Engineering (MBSE) is coveted for improving productivity and product quality. However, adoption is slow because the workforce lacks training. Therefore, a group of MBSE experts at an R-1 university developed a series of MBSE online learning modules that can be integrated into existing courses. Rather than adding courses to engineering programs, this project presents a “plug-and-play” adaptive approach to implementing new topics into existing courses. Faculty can select elements from the modules that best fit their courses and their students' learning needs. To evaluate the effectiveness of the approach and content, parts of the first MBSE module were incorporated in a graduate level engineering course. Surveys and descriptive analysis revealed students' learning experiences and feedback (n = 81). The research findings suggest students had positive experiences with the content and their interest in MBSE increased. Further module design improvement is included and discussed in the paper.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2021.00871.x,
author = {Riesener, Michael and Dölle, Christian and Becker, Annika and Gorbatcheva, Sofia and Rebentisch, Eric and Schuh, Günther},
title = {Application of natural language processing for systematic requirement management in model-based systems engineering},
journal = {INCOSE International Symposium},
volume = {31},
number = {1},
pages = {806-815},
doi = {https://doi.org/10.1002/j.2334-5837.2021.00871.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2021.00871.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2021.00871.x},
abstract = {Abstract Today, manufacturing companies are confronted with an enormous number of product requirements, which increasingly demand an interaction of the different engineering disciplines mechanics, electric/electronic (E/E) and software. At the same time, companies must realize a shorter time to market, lower costs and higher quality. As a result, development methods are required, which support the fast, flexible and structured transfer of numerous requirements into products despite this increased complexity in processes and products. In this context, Model-Based Systems Engineering (MBSE) takes advantage of the increasing digitalization of products and development processes. It provides structures and processes for the efficient processing of requirements by fostering the collaboration between different engineering disciplines and enabling early validation of the product. In this context, it is often challenging that requirements are not structured, but rather unstructured and heterogeneous. For the processing within MBSE, text-based requirements today usually still have to be prepared with high manual effort. This paper presents a methodology that supports the transformation of unstructured and heterogeneous text-based requirements using Natural Language Processing in order to prepare them for further processing within MBSE.},
year = {2021}
}

