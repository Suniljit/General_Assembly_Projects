@article{https://doi.org/10.1002/j.2334-5837.2017.00382.x,
author = {Do, Quoc and Hartigan, Daniel},
title = {An MBSE Methodology for Capability Systems Definition},
journal = {INCOSE International Symposium},
volume = {27},
number = {1},
pages = {613-626},
doi = {https://doi.org/10.1002/j.2334-5837.2017.00382.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2017.00382.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2017.00382.x},
abstract = {Abstract Systems Engineering provides a structured means to define, design, implement, integrate, sustain and manage numerous interdependencies throughout the Lifecycle of complex systems. This paper presents a Model-Based Systems Engineering (MBSE) methodology that focuses on the early Concept stage of the ISO/IEC/IEEE 15288:2015 to define the systems capability in the operational domain, functional domain and solution-independent physical domain. The methodology consists of systemic processes that are governed by an information-centric schema as well as enabling systems language and tools. The schema focuses on the objective information required during the capability design process to inform key design decisions and achieve convergence from conflicting stakeholder viewpoints. The paper opens with an introduction to MBSE and systems capability definition. Then, the detail of the methodology is discussed followed by an application of this approach to the Battlespace Communication Support Centre (BCSC) capability as a case study – reporting on the efficacy, lessons learned and recommendations for future applications.},
year = {2017}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00530.x,
author = {Hause, Matthew},
title = {Systems Interface Management with MBSE: from Theory to Modeling to Reality},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {1012-1026},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00530.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00530.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00530.x},
abstract = {Abstract Systems interoperate using interfaces. They exist between capabilities, organizations, people, systems, people and systems, systems and nature, systems of systems, and so forth. Interfaces are used to support both system to system communication as well as supporting the complete set of enterprise goals. Interfaces are where the most interesting things happen. And where most things go wrong. This paper addresses system interface-management issues and the benefits of Model-Based Systems Engineering (MBSE) approaches. An initial focus will be placed on interface information content that needs to be addressed at each level of system decomposition – from external stakeholders to system boundary to eventually, system component-to-component. The focus will then shift to interface management to model-based and functional/logical design practice. It will also cover system interconnection and communications, how they change, operate and evolve over time to implement mission goals and to satisfy stakeholder needs. Finally it will look at physical systems and the connection to PLM/CAD domains. Defining stakeholder goals and required capabilities Interface definition with MBSE Functional Architecture Interfaces Logical Architecture Interfaces Physical Architecture Interfaces Allocation across cross cutting views How behavior drives interfaces which drive behavior Defining interaction requirements Implementing effective and testable interface specifications Traceability throughout the architecture Service Oriented Architectures.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00468.x,
author = {Liu, Zhigang and Chen, Qi and Xia, Ning and Yang, Mengfei and Du, Qing and Lu, Jinzhi},
title = {An MBSE Tool to Support Architecture Design for Spacecraft Electrical Power System},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {64-78},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00468.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00468.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00468.x},
abstract = {Abstract Since difficulty and complexity of spaceflight missions are increasing, current electric systems in the spacecraft become growingly complicated challenging the spacecraft electrical power system (EPS) architecture development. By using traditional approaches, system architectures are managed by document collections including various reports, documents and data chats. Due to lack of a unified visualization of system architectures, consistency and traceability among data, documents and information are difficult to manage, particular in supporting architecture design and system verification and validation. This paper presents a model-based systems engineering (MBSE) tool with emphasis on domain specific modeling (DSM), architecture visualization, model transformation and automated verification and validation by using Modelica. The MBSE tool aims to develop the architecture models of EPS, to support MBSE-driven visualizations of architectural hierarchies inspired by related techniques of Google Earth and to realize architecture-driven verification \& validation by using Modelica language. Finally, through a case study of EPS, we evaluate the feasibility of our tool.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2019.00595.x,
author = {Biggs, Geoffrey and Post, Kyle and Armonas, Andrius and Yakymets, Nataliya and Juknevicius, Tomas and Berres, Axel},
title = {OMG standard for integrating safety and reliability analysis into MBSE: Concepts and applications},
journal = {INCOSE International Symposium},
volume = {29},
number = {1},
pages = {159-173},
doi = {https://doi.org/10.1002/j.2334-5837.2019.00595.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2019.00595.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2019.00595.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) is gaining popularity in organizations creating complex systems where it is crucial to collaborate in a multi-disciplinary environment. SysML, being one of the key MBSE components, has a good foundation for capturing requirements, architecture, constraints, views and viewpoints. However, SysML does not provide the necessary constructs to capture safety and reliability information in the system model. A group of industry experts at the OMG has been working since 2016 to define a new specification providing the necessary capabilities. This paper provides an update on the progress of this work. It discusses the proposed specification's use of generic concepts to allow information interchange amongst diverse analyses, its use of existing SysML constructs to provide automation of safety and reliability work in existing modelling tools, and describes several of the supported analysis methods.},
year = {2019}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00797.x,
author = {Guo, Jiangmin and Wang, Guoxin and Lu, Jinzhi and Ma, Junda and Törngren, Martin},
title = {General Modeling Language Supporting Model Transformations of MBSE (Part 2)},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {1460-1473},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00797.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00797.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00797.x},
abstract = {Abstract With the increasing complexity of systems, model-based systems engineering (MBSE) has attracted increasing attention in the industry. MBSE formalizes the whole lifecycles of products using models based on systems engineering aiming to improve the development efficiency of complex systems. Traditionally, MBSE approaches require many modeling languages in each phase of the entire lifecycle. Different syntax between such languages leads to difficulty in supporting an integrated description of transformations between models and data. Thus, it is challenged to utilize a general language to describe model formalism and transformation for architecture-driven technology and code generation in one MBSE tool. In this paper, a multi-architecture modeling language called Karma (introduced in Paper Part 1) is proposed to support the model transformations including architecture-driven technology and code generation implementations in one modeling tool. Finally, from one auto-braking case of an autonomous-driving system, we find the availability of the Karma language supporting architecture-driven technology and code generation is verified.},
year = {2020}
}
@article{https://doi.org/10.1002/sys.21633,
author = {Oliver, Everett and Mazzuchi, Thomas and Sarkani, Shahram},
title = {A resilience systemic model for assessing critical supply chain disruptions},
journal = {Systems Engineering},
volume = {25},
number = {5},
pages = {510-533},
keywords = {SEE17 logistics and supportability, SEE24 model-based systems engineering (MBSE), SEE25 systems of systems (SoS), SEE26 modeling and simulation, supply chain disruption},
doi = {https://doi.org/10.1002/sys.21633},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21633},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21633},
abstract = {Abstract Assessing the impact of natural disasters and manmade incidents against critical infrastructure systems is important and challenging. As critical infrastructure sectors become more interdependent, a method is needed to assess how disruptions to one sector affect other sectors. This need is particularly significant in the case of critical national supply chains which have not received the same attention as other critical infrastructure systems. This research develops a methodology for performing supply chain impact assessments by integrating model-based systems engineering (MBSE) with discrete event simulation (DES). SysML models capture the supply chain structure and critical infrastructure interdependencies. Simulation of the supply chain model subjected to external constraints identifies the impacts from critical infrastructure disruptions. This approach enables researchers and public policy planners to assess critical supply chain risks associated with current infrastructure implementations, and to conduct what-if analyses on alternative solutions. Application of this methodology to assess the natural disaster impacts on an urban food supply system demonstrates the effectiveness of modeling and simulation for evaluating the impacts of critical infrastructure disruptions on a wide range of critical supply chains. Future research should apply this methodology to different national supply chains and investigate additional critical infrastructure interdependency linkage mechanisms.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2021.00830.x,
author = {Henderson, Kaitlin and Salado, Alejandro},
title = {Is CAD A Good Paradigm for MBSE?},
journal = {INCOSE International Symposium},
volume = {31},
number = {1},
pages = {144-157},
doi = {https://doi.org/10.1002/j.2334-5837.2021.00830.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2021.00830.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2021.00830.x},
abstract = {Abstract Those looking to advocate for Model-Based Systems Engineering (MBSE) in the Systems Engineering field often turn to more established fields that have made a similar transition to models to assure others it will be beneficial. One practice that is often compared to MBSE is Computer-Aided Design (CAD) from the field of mechanical engineering. However, the adequacy of this comparison is challenged upon a side-by-side examination of what MBSE and CAD are. Based on the established definitions, it is evident that while CAD can be considered a method of mechanical drawing, MBSE cannot be described as only a method. MBSE is more than installing and utilizing software, it is a process in and of itself. Comparing MBSE to CAD runs the risk of oversimplifying MBSE and setting up expectations that may not be met. Therefore, while CAD may represent a similar paradigm shift as MBSE in terms of digitalization, it may not serve as an adequate paradigm in terms of adoption and benefits. In this paper, we characterize and compare CAD and MBSE and identify the similarities and differences between them. We use the resulting insights to level the expectations of adopting and using MBSE.},
year = {2021}
}
@article{https://doi.org/10.1002/j.2334-5837.2015.00122.x,
author = {Schindel1, William D. and Lewis1, Stephen A. and Sherey1, Jason J. and Sanyal2, Saumya K.},
title = {Accelerating MBSE Impacts Across the Enterprise: Model-Based S*Patterns},
journal = {INCOSE International Symposium},
volume = {25},
number = {1},
pages = {1159-1176},
doi = {https://doi.org/10.1002/j.2334-5837.2015.00122.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2015.00122.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2015.00122.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) methods can directly address “silos” problems. This paper reports on work by the INCOSE MBSE Initiative Patterns Challenge Team, focusing on Pattern-Based Systems Engineering (PBSE) using model-based system patterns based on the S*Metamodel, speeding and improving multiple SE processes. Distinctive are (1) the configurable, model-based nature of the patterns (not all historical patterns work has been model-based), (2) the technical scope of the models, encompassing requirements, design, failure mode, verification, other aspects, (3) the system scope of the models, encompassing whole systems, configurable product lines, and platforms, not just libraries of components, (4) the diverse and integrating cross-enterprise domains of the patterns, encompassing products, innovation processes, manufacturing, packaging / distribution, and other domains, and (5) the ability to enable a variety of COTS modeling languages and tools, PLM, and other enterprise information systems to integrate support of management and application of S*Patterns across enterprises.},
year = {2015}
}
@article{https://doi.org/10.1002/sys.21594,
author = {Sohier, Henri and Lamothe, Pascal and Guermazi, Sahar and Yagoubi, Mouadh and Menegazzi, Pascal and Maddaloni, Aldo},
title = {Improving simulation specification with MBSE for better simulation validation and reuse},
journal = {Systems Engineering},
volume = {24},
number = {6},
pages = {425-438},
keywords = {autonomous car, MBSE, requirements, reuse, simulation, verification, validation},
doi = {https://doi.org/10.1002/sys.21594},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21594},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21594},
abstract = {Abstract A simulation can be a complex architecture of simulation models, simulation tools, and computing hardware. However, its development often relies on informal procedures and can begin without a clear, complete, and formal definition of the simulation needs. Simulation traceability is then compromised, which prevents from easily validating whether a simulation meets the needs, or understanding the purpose of a simulation model that can be reused. This paper proposes an approach to improve the definition of simulation needs using Model-Based Systems Engineering. Based on the semi-automatic processing of a system architecture, it presents a new method to formulate a so-called “simulation request” which covers (1) the part of the system to be simulated; (2) the objective of the simulation; (3) the simulation quality, cost, and delivery; (4) the test scenarios; (5) the data for simulation calibration and validation; and (6) the verification and validation of the simulation. All the tooling required for the formulation of the simulation request were prototyped in a SysML editor, with machine learning capabilities for the choice of test scenarios. The method and tooling were tested for the case of an autonomous car passing under traffic lights.},
year = {2021}
}
@article{https://doi.org/10.1002/j.2334-5837.2017.00350.x,
author = {Morkevicius, Aurelijus and Aleksandraviciene, Aiste and Mazeika, Donatas and Bisikirskiene, Lina and Strolia, Zilvinas},
title = {MBSE Grid: A Simplified SysML-Based Approach for Modeling Complex Systems},
journal = {INCOSE International Symposium},
volume = {27},
number = {1},
pages = {136-150},
doi = {https://doi.org/10.1002/j.2334-5837.2017.00350.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2017.00350.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2017.00350.x},
abstract = {Abstract After an organization makes the decision to adopt model-based systems engineering (MBSE), it must go a long way before this decision proves right. There are many obstacles in this way, like stories about unsuccessful MBSE applications, insufficient information on how to proceed, and employee resistance to the cultural change to name a few. Neither of them is a true issue, if suitable enablers for MBSE adoption are chosen. Nowadays, MBSE is enabled by Systems Modeling Language (SysML). However, SysML is neither a framework nor a method: it provides no information about the modeling process and thus must be combined with some methodology to become truly applicable. This paper summarizes the experience of various MBSE adoption projects in the form of a new approach for MBSE. The approach is based on the framework organized in a matrix view and is designated to guide system engineers through the modeling process and help them answer the questions, like how to start, how to structure the model, what views to build, which artefacts to deliver, and in what sequence.},
year = {2017}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01433.x,
author = {Maurandy, Julien and Helm, Achim and Gill, Eberhard and Stalford, Roland},
title = {11.5.3 Cost-Benefit Analysis of SysML Modelling for the Atomic Clock Ensemble in Space (ACES) Simulator},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1726-1745},
keywords = {model-based systems engineering, SysML, systems engineering, modelling, space engineering, cost-benefit analysis, atomic clocks ensemble in space (ACES), international space station (ISS)},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01433.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01433.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01433.x},
abstract = {Abstract Systems Engineering has successfully supported the space industry since its inception with methodologies and techniques to handle complex projects. However, the conventional design approach, ‘Document-Based Systems Engineering’ (DBSE), is more and more reaching its limits. This research evaluates the benefits and the cost associated with the paradigm of ‘Model Based Systems Engineering’ (MBSE) instead of DBSE by applying the Systems Modelling Language (SysML) in the frame of the Atomic Clock Ensemble in Space (ACES) project. ACES is indeed deemed to be a suitable project for this study as it includes both a very complex ground segment as well as a challenging space segment on board the International Space Station. Following an introduction to SysML and the ACES mission, we first develop the metrics on which the cost-benefit analysis is based on. Then, we explain the methodology and models used to perform the analysis which targets to characterise DBSE versus MBSE based on the ACES ground segment development. Then, we use the Analytical Hierarchical Process to determine weighted criteria where attention is also given to the transitional process between DBSE and MBSE. After a critical reflection upon the analysis methodology and its results, we focus on lessons-learned from the use of SysML for the implementation of MBSE in space projects. We have identified five key areas of lessons-learned for using MBSE with SysML itself as well as main deficiencies for Enterprise Architect, the tool used to implement SysML. We conclude with seven suggested improvements which are considered valuable to help improving the performance and acceptance of MBSE for the development of (space) projects in the future.},
year = {2012}
}
@article{https://doi.org/10.1002/inst.12081,
author = {Papke, Barry},
title = {ENABLING AGILE SECURITY WITH MBSE AND UPDM},
journal = {INSIGHT},
volume = {19},
number = {2},
pages = {18-20},
doi = {https://doi.org/10.1002/inst.12081},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12081},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12081},
abstract = {ABSTRACT The agile, evolving threat environment and the increasing cost of damage being inflicted is placing tremendous pressure on the systems engineering discipline to design and implement effective security capabilities. One promising approach is the application of agile systems architecture to the design of system security. In order to be successful, however, systems engineers and security engineers will need to adopt a common design language and a common reference architecture that supports the definition and design of a system that has both resilience and continuous evolution of security capability. This paper presents an approach to overcome these obstacles through application of model-based systems engineering and use of enterprise architecture frameworks to address specific elements of an agile systems architecture which resides in both the design time and operating time domains.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2015.00061.x,
author = {van Ruijven, L.C.},
title = {Ontology for Systems Engineering as a base for MBSE},
journal = {INCOSE International Symposium},
volume = {25},
number = {1},
pages = {250-265},
doi = {https://doi.org/10.1002/j.2334-5837.2015.00061.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2015.00061.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2015.00061.x},
abstract = {Abstract This paper presents a method for creating a Systems Engineering ontology to enable Model-Based Systems Engineering (MBSE). This method is based on creating a set of information models as defined in ISO 15926-11. ISO 15926 is a well-known life cycle data integration standard from the process industry. During the engineering phase of several capital facility projects, the method has also shown to be helpful in Systems Engineering communication between involved parties. Based on the information models and the set of relationships defined herein and in combination with a Reference Data Library (RDL), one can build or configure an information management system or data exchange mechanism to support Systems Engineering processes. The presented ontology has been validated in real projects based respectively on the software tool Relatics and on a RDF Named Graph application using a triple store. Experiences with the described ontology have shown that the topic of ontology is important for systems engineering and that there is merit in further examining the suitability of ISO 15288 as an ontological foundation, enabling formalized MBSE.},
year = {2015}
}
@article{https://doi.org/10.1002/inst.12187,
author = {Mordecai, Yaniv and Dori, Dov},
title = {TOWARDS A QUANTITATIVE FRAMEWORK FOR EVALUATING THE EXPRESSIVE POWER OF CONCEPTUAL SYSTEM MODELS},
journal = {INSIGHT},
volume = {21},
number = {1},
pages = {28-37},
keywords = {Conceptual Modeling, Informativity, Object-Process Methodology, Utility Theory, Information Theory},
doi = {https://doi.org/10.1002/inst.12187},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12187},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12187},
abstract = {ABSTRACT Conceptual models describe, explain, and specify the function, concept, structure, and behavior of complex systems. Quantifying the contribution of conceptual models to stakeholder understanding of the systems-of-interest has been a great challenge. This difficulty hinders justifying the use of formal modeling and simulation of complex systems and the adoption of a holistic model-based systems engineering (MBSE) approach. The informativity of a model is the value of the information it conveys. Conceptual system model informativity is a key performance indicator for MBSE. We introduce MIA – Model Informativity Analysis – a quantitative, utility-based, prescriptive approach for boosting conceptual models’ expressive power and measuring the value of the information they provide. We define an integrated informativity index, “I3”, which aggregates model scores of diverse informativity-enhancing factors. We demonstrate various aspects of MIA with Object Process Methodology, OPM – a model-based systems engineering paradigm and ISO-19450 standard. OPM caters to quantitative informativity analysis due its formality, comprehensive function-structure-behavior modeling, and bimodal equivalent graphical-textual representation.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2013.tb03079.x,
author = {Broodney, Henry and Shani, Uri and Sela, Aviad},
title = {4.5.2 Model Integration – Extracting Value from MBSE},
journal = {INCOSE International Symposium},
volume = {23},
number = {1},
pages = {1174-1186},
doi = {https://doi.org/10.1002/j.2334-5837.2013.tb03079.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2013.tb03079.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2013.tb03079.x},
abstract = {Abstract Model-Based Systems Engineering is making its way into the design processes of many Systems builders. But as with any new concept, it must prove its worth by demonstrating significant Return-On-Investment. One of the benefits of having designs formalized in models is sharing information, models and data, between designers and teams, and allowing valuable analytics to be performed over that collection of information. This paper will discuss a gradually evolving approach to model integration, sharing and collaboration, from simple indexing and relationship maintenance to comprehensive frameworks for information integration based on the recent advances in ontology-based data fusion and model transformations.},
year = {2013}
}
@article{https://doi.org/10.1002/iis2.12956,
author = {Anyanhun, Awele and Adejokun, Ademola Peter and Hause, Matthew},
title = {An MBSE Architectural Framework for Inter-Satellite Communication in a Multiorbit Disaggregated System},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {665-685},
doi = {https://doi.org/10.1002/iis2.12956},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12956},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12956},
abstract = {Abstract The Multi-Orbit Disaggregated System (MODS) concept is a disaggregation strategy geared towards improved resiliency and flexibility of space missions by dispersing payloads and/or functionality across multiple small satellites (SmallSats). Although SmallSats make good candidates for deployment as a MOD System, their success hinges on the ability to realize reliable Inter-Satellite Communication (ISC). To this end, we investigate the efficacy of developing a model-based systems engineering (MBSE) Architectural Framework for ISC to guide and constrain instantiations of ISC architecture solutions. An MBSE architectural framework is a systems engineering artifact that defines a set of views required to describe an architecture based on MBSE principles and practices. It provides a standardized structure and guidance to capture architectural decisions while maximizing opportunities for commonality, consistency, and interoperability within the Domain of Interest. To achieve well-defined architecture descriptions, a MODS architectural framework pattern, and a comprehensive architectural framework for the ISC (sub)system are created and presented. The Systems Modeling Language (SysML) (OMG, 2019) serves as the modeling language for the framework design.},
year = {2022}
}
@article{https://doi.org/10.1002/iis2.12892,
author = {Murphy, Joseph and Dickerson, Charles and Thorpe, Tony and Goodier, Chris and Zahiroddiny, Sonia and Pestana, Andrew},
title = {Complexity identification in major infrastructure project information systems using graph theory},
journal = {INCOSE International Symposium},
volume = {32},
number = {S2},
pages = {16-29},
keywords = {Information Management (IM), Graph Theory (GT), Major Infrastructure Projects (MIPs), Electronic Document Management System (EDMS), Systems Engineering (SE), Model-Based Systems Engineering (MBSE)},
doi = {https://doi.org/10.1002/iis2.12892},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12892},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12892},
abstract = {Abstract Information management for major infrastructure projects is a critical task requiring ever increasing time and resources. Whilst the digitisation of construction industry information has progressed over multiple dimensions, there are still gaps in machine readable information for adequate suitability assessment of projects against their requirements. With digital twins at the heart of the digitisation agenda, it is vital that the industry expand the information available to validate and verify asset and network outcomes throughout their lifecycle. Within the construction industry, systems engineering is being deployed for asset and information requirements and model-based systems engineering can support digital techniques in managing construction information requirements. However, as an intensive task it must be selectively deployed to obtain value within a complex operating system. An opportunity exists to use data and relationships held in electronic document management systems that currently store project requirements. To achieve this, graph/network theory can be used to visualise and analyse the connectivity of document datapoints. This study deploys a python modelling environment to create digraphs that are used to visualise and identify key data from a document management system, identifying the highest degree and betweenness for documents from a sample size of 20 queries producing 327 vertices. It demonstrates a useful means of interrogating the data rapidly that is quick to scale and expand. There are opportunities to deploy this across multiple digital systems to further map complexity and interactions between them. Identification is the critical first step for data driven point of application ‘surgical’ model-based systems engineering.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00551.x,
author = {Biggs, Geoffrey and Juknevicius, Tomas and Armonas, Andrius and Post, Kyle},
title = {Integrating Safety and Reliability Analysis into MBSE: overview of the new proposed OMG standard},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {1322-1336},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00551.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00551.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00551.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) is gaining popularity in organizations creating complex systems where it is crucial to collaborate in a multi-disciplinary environment. SysML, being one of the key MBSE components, has a good foundation for capturing requirements, architecture, constraints, views and viewpoints. It allows linking different types of models that come from different engineering disciplines. However, inherent safety and reliability aspects of a system are not addressed by the SysML language. A new group at the OMG has been created by industry experts in this area to address these aspects in a new standard. In this paper, with the intent to get feedback from the systems engineering community, the members of the newly formed group present the current state of the Safety and Reliability Analysis Profile for UML submission, which extends the SysML language with the tools for modelling safety and reliability aspects. This paper also explains the value users get from taking a model-based approach to safety and reliability analysis and integrating it into the MBSE toolkit. Open issues and challenges are also discussed.},
year = {2018}
}
@article{https://doi.org/10.1002/iis2.12933,
author = {Arifin, Habibi Husain and Morita, Takeshi and Kawamura, Ken and Ayame, Yutaka and Robert Ong, Ho Kit and Mizuno, Yukimi},
title = {A Pragmatic MBSE Approach of Nissan Powertrain Team to Minimizing Document-Based SE},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {313-327},
doi = {https://doi.org/10.1002/iis2.12933},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12933},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12933},
abstract = {Abstract This paper describes a pragmatic Model-Based Systems Engineering (MBSE) approach to reduce dependence on traditional documents and manage complexity of the electrified powertrain system. The approach enables requirements flow-down from an upper abstraction layer to the lower one(s) with stepwise analysis and design for a holistic system architecture of the system of interest. This approach is employed in the Nissan Powertrain development, which aims to solve challenges due to the traditional documents systems engineering (SE) approach to complex systems. This paper describes an MBSE approach developed for Nissan-7 methodology that focuses on knowledge capture, fast feedback on requirements and design, and early verification and validation. The significant benefits of using an MBSE approach over a traditional documents SE approach are: a holistic view of system architecture, knowledge reusability, communicability, and adaptability to new technologies. This paper presents proof of concept example projects that have demonstrated that it is viable to use this approach and apply it to an actual development for future work.},
year = {2022}
}
@article{https://doi.org/10.1002/sys.20198,
author = {Bernard, Yves},
title = {Requirements management within a full model-based engineering approach},
journal = {Systems Engineering},
volume = {15},
number = {2},
pages = {119-139},
keywords = {MBSE, requirements engineering, requirements management, system engineering, UML, SysML, model},
doi = {https://doi.org/10.1002/sys.20198},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.20198},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.20198},
abstract = {Abstract In this paper we show how the Property-Based Requirements (PBR) theory can be used to fully integrate Requirements Engineering (RE) into a Model-Based Systems Engineering (MBSE) method using OMG UML and its SysML profile. The objective is to avoid “in-parallel” management of two distinct expressions of the same specification (or design): once in a set of textual requirements and once in a model, which must be maintained to be consistent. This is achieved by the identification, in common modeling concepts, of Requirement Tracker Artifacts (RTA) that match the pattern defined by the Property-Based Requirement theory. An illustration is provided with both the UML and SysML modeling language. We also outline how relationships defined “by construction” in the model can be exploited to carry out requirements management activities without addition of dedicated and redundant data. © 2011 Wiley Periodicals, Inc.},
year = {2012}
}

