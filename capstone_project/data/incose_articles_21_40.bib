@article{https://doi.org/10.1002/sys.21241,
author = {Bjorkman, Eileen A. and Sarkani, Shahram and Mazzuchi, Thomas A.},
title = {Using model-based systems engineering as a framework for improving test and evaluation activities},
journal = {Systems Engineering},
volume = {16},
number = {3},
pages = {346-362},
keywords = {model-based systems engineering, test and evaluation, Monte Carlo simulation, measurement uncertainty, uncertainty estimation, technical performance measurement},
doi = {https://doi.org/10.1002/sys.21241},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21241},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21241},
abstract = {Abstract Model-based systems engineering (MBSE) approaches are based on a paradigm shift from document-centric engineering to model-based engineering. Although MBSE methods are intended to apply across the entire system life cycle, one area that has not received much attention to date is the role of test and evaluation. Test and evaluation activities provide information that reduces the uncertainty about system performance, effectiveness, and suitability. This uncertainty reduction becomes particularly important within the context of defense systems, which can cost billions of dollars. This paper describes a methodology that uses an MBSE framework and Monte Carlo simulation to define uncertainty reduction goals for test planners to use in developing test strategies and detailed test designs for evaluating technical performance parameters. As tests are completed, physical models can be updated with test data and additional analyses conducted with combat models to determine if the system meets user requirements. The methodology is demonstrated through a simple case study involving a series of tests to predict the landing performance of an aircraft. ©2012 Wiley Periodicals, Inc. Syst Eng 16:},
year = {2013}
}
@article{https://doi.org/10.1002/j.2334-5837.2010.tb01136.x,
author = {Schindel, William D.},
title = {10.1.2 Failure Analysis: Insights from Model-Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {20},
number = {1},
pages = {1227-1239},
doi = {https://doi.org/10.1002/j.2334-5837.2010.tb01136.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2010.tb01136.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2010.tb01136.x},
abstract = {Abstract Processes for system failure analysis (e.g., FMEA) are structured, well-documented, and supported by tools. Nevertheless, we hear complaints that FMEA work feels (1) too labor intensive to encourage engagement, (2) somewhat arbitrary in identifying issues, (3) overly sensitive to the skills and background of the performing team, and (4) not building enough confidence of fully identifying the risks of system failure. In fairness to experts in the process, perhaps such complaints come from those less experienced—but even so, we should care how to describe this process to encourage better technical and experience outcomes. This paper shows how Model-Based Systems Engineering (MBSE) answers these challenges by deeper and novel integration with requirements and design. Just as MBSE powered the requirements discovery process past its earlier, more subjective performance, so also can MBSE accelerate understanding and performance of failure risk analysis–as a discipline deeply connected within the SE process.},
year = {2010}
}
@article{https://doi.org/10.1002/sys.21460,
author = {Huff, Johnathon and Medal, Hugh and Griendling, Kelly},
title = {A model-based systems engineering approach to critical infrastructure vulnerability assessment and decision analysis},
journal = {Systems Engineering},
volume = {22},
number = {2},
pages = {114-133},
keywords = {critical infrastructure vulnerability assessment, integer linear program, system architecture, model-based systems engineering},
doi = {https://doi.org/10.1002/sys.21460},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21460},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21460},
abstract = {Abstract Securing critical infrastructure against attack presents significant challenges. As new infrastructure is built and existing infrastructure is maintained, a method to assess the vulnerabilities and support decision makers in determining the best use of security resources is needed. In response to this need, this research develops a methodology for performing vulnerability assessment and decision analysis of critical infrastructure using model-based systems engineering, an approach that has not been applied to this problem. The approach presented allows architects to link regulatory requirements, system architecture, subject matter expert opinion and attack vectors to a Department of Defense Architecture Framework (DoDAF)-based model that allows decision makers to evaluate system vulnerability and determine alternatives to securing their systems based on their budget constraints. The decision analysis is done using an integer linear program that is integrated with DoDAF to provide solutions for how to allocate scarce security resources. Securing an electrical substation is used as an illustrative case study to demonstrate the methodology. The case study shows that the method presented here can be used to answer key questions, for example, what security resources should a decision maker invest in based on their budget constraints? Results show that the modeling and analysis approach provides a means to effectively evaluate the infrastructure vulnerability and presents a set of security alternatives for decision makers to choose from, based on their vulnerabilities and budget profile.},
year = {2019}
}
@article{https://doi.org/10.1002/sys.21271,
author = {Mitchell, Steven W.},
title = {Transitioning the SWFTS Program Combat System Product Family from Traditional Document-Centric to Model-Based Systems Engineering},
journal = {Systems Engineering},
volume = {17},
number = {3},
pages = {313-329},
keywords = {system evolution, product family, MBSE, model-based systems engineering, baseline management},
doi = {https://doi.org/10.1002/sys.21271},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21271},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21271},
abstract = {ABSTRACT Over the past four years, the Submarine Warfare Federated Tactical Systems (SWFTS) Systems Engineering \& Integration (SE\&I) program has shifted from traditional document-centric systems engineering to a model-based systems engineering (MBSE) process for managing the evolution and support of the common combat system used by most submarines in the U.S. and Royal Australian Navies. At the beginning of this transition a pilot study established technical feasibility, and projected a 13\% reduction in the cost of processing a baseline if MBSE were applied to support the SWFTS system of systems baseline development process. Over the course of two years of development new modeling techniques were invented, and a large-scale system of systems model was designed, implemented, and populated. Now the transition to operations has begun. In early 2012 SWFTS SE\&I produced its first new generation of combat system interface baselines using MBSE. The technical foundation has been established, and the workforce transition is under way. Anticipated cost reductions are still a year away as the workforce ascends the learning curve, but the program is already seeing improvements in the quality and consistency of engineering products. This paper summarizes this document-centric to model-based SE transition, describes the accomplishments and observations to date, and describes the metrics being collected to quantify the achieved return on investment once the transition is complete.},
year = {2014}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00531.x,
author = {Vaneman Ph.D., Warren K.},
title = {Evolving Model-Based Systems Engineering Ontologies and Structures},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {1027-1036},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00531.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00531.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00531.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) is a mysterious concept that means many different things to different stakeholders. MBSE was envisioned to manage the increasing complexity within systems, by replacing traditional document-based system engineering with a model-based approach. However, more than a decade after MBSE was introduced, many systems engineering efforts still default to a “document-like view” rather than integrated, “virtual,” representation of the system. This paper suggests a revised definition for MBSE which supports system design and analysis, throughout all phases of the system lifecycle, and through the collection of modeling languages, model-based processes, structures, and presentation frameworks used to support the discipline of systems engineering in a model-based or model-driven context. To realize this definition, and an environment where the system is virtually represented, the long-sought ontology must be attained for better definition and structure within MBSE. This paper explores how current MBSE methods can be extended to include an ontology.},
year = {2018}
}
@article{https://doi.org/10.1002/sys.21638,
author = {Call, Daniel R. and Herber, Daniel R.},
title = {Applicability of the diffusion of innovation theory to accelerate model-based systems engineering adoption},
journal = {Systems Engineering},
volume = {25},
number = {6},
pages = {574-583},
keywords = {adoption rate, diffusion of innovation theory, innovation, model-based systems engineering, process improvement, systems engineering},
doi = {https://doi.org/10.1002/sys.21638},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21638},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21638},
abstract = {Abstract Systems engineering (SE) is an interdisciplinary domain that can benefit from incorporating contributions from fields not typically associated with technical disciplines, including integrating relevant research from social sciences. The study of innovation has produced the diffusion of innovation theory, which identifies variables that affect the adoption rate of innovations. Of these variables, the perceived attributes of the innovation have been shown to have the most significant impact on the adoption rate of innovations. Shaping the innovation attributes of relative advantage, compatibility, complexity, trialability, and observability and how they are perceived can accelerate its adoption rate. This theory has the potential to accelerate the adoption rate of SE innovations. Model-based systems engineering (MBSE) is an SE innovation that, despite its benefits, has not been adopted generally. An evaluation of the attributes of MBSE as defined by the diffusion of innovation theory can aid in understanding its slow diffusion and inform methods to accelerate its adoption. Since there is some evidence to suggest that this theory is applicable to SE and MBSE, additional research should be conducted to determine the best way to utilize its principles.},
year = {2022}
}
@article{https://doi.org/10.1002/j.2334-5837.2011.tb01298.x,
author = {Dori, Dov},
title = {Synergistic Model-Based Systems Engineering with SysML and OPM},
journal = {INCOSE International Symposium},
volume = {21},
number = {1},
pages = {2143-2539},
doi = {https://doi.org/10.1002/j.2334-5837.2011.tb01298.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2011.tb01298.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2011.tb01298.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) is emerging as a pivotal paradigm, placing modeling as the underlying activity of systems' and products' lifecycle management. SysML is the OMG standard for MBSE, while Object-Process Methodology (OPM), one of the six leading INCOSE MBSE methodologies, is in the process of becoming ISO standard and the basis for model-based standards authoring. OPM and SysML complement each other, as each is especially suited for different lifecycle stages: OPM, which is simple and holistic, is most fit for the early conceptual stages, whereas SysML, which provides for expressing details, is good for later design stages. The tutorial introduces the principles, syntax, and semantics of OPM and SysML, highlighting their commonalities and differences, and showing how to use both in ways that promote synergy and improve critical system features, notably clarity, consistency, and completeness. The resulting model is an indispensible blueprint that puts all the stakeholders on the same page across the system lifecycle span.},
year = {2011}
}
@article{https://doi.org/10.1002/j.2334-5837.2013.tb03122.x,
author = {Smith, Warren},
title = {Essential Model-Based Systems Engineering — Applied and Practical},
journal = {INCOSE International Symposium},
volume = {23},
number = {1},
pages = {1634-1634},
doi = {https://doi.org/10.1002/j.2334-5837.2013.tb03122.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2013.tb03122.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2013.tb03122.x},
abstract = {Abstract Combine the key concepts of MBSE with the essentials of their practical application. This tutorial is designed help you leverage model-based techniques to better meet the engineering challenges of analyzing stakeholder needs and defining system solutions. The tutorial uses a practical top-down system analysis and design example and exercise to explore the application of layered model-based systems engineering (MBSE) to system definition challenges. It examines the range of views available to the systems engineer for understanding and communicating design choices and provides a practical introduction to constructing the model and generating each representation. As the analysis and design advances, the engineer will use a wide variety of views drawn from traditional and SysML representations to portray aspects of the model and gain understanding of stakeholder concerns and the design choices to be made. This tutorial works for both new and experienced systems engineers, capability analysts and others working on an integrated project team, and program/project/capability managers. While a basic understanding of the systems engineering process is assumed, the MBSE framework and approach provide the foundation for those not experienced in systems engineering. The detailed discussion of MBSE methodology and model representations including SysML and traditional SE products delivers value for all but the most experienced model-based systems analysts and engineers. This is an MBSE methods, models, and representations tutorial, not a tool tutorial. The focus is on the practical application of essential MBSE for project success. The concepts taught and methods shared are applicable regardless of the systems engineering tools the attendee may choose.},
year = {2013}
}
@article{https://doi.org/10.1002/j.2334-5837.2017.00449.x,
author = {Weiland, Karen J. and Holladay, Jon},
title = {Model-Based Systems Engineering Pathfinder: Informing the Next Steps},
journal = {INCOSE International Symposium},
volume = {27},
number = {1},
pages = {1594-1608},
doi = {https://doi.org/10.1002/j.2334-5837.2017.00449.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2017.00449.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2017.00449.x},
abstract = {Abstract In 2016, the NASA Engineering and Safety Center established a model-based systems engineering (MBSE) Pathfinder. The primary motivations for establishing the MBSE Pathfinder were to advance the Agency's applications of MBSE and capture lessons-learned to inform the next steps. The MBSE Pathfinder had four teams working in parallel for eight months on different topics of interest to NASA. The teams were encouraged to learn, and use creativity and innovation in their system modeling. The results were captured via reports, webinars, and a knowledge capture meeting. The approach taken for the MBSE Pathfinder was very successful in providing a number of lessons-learned for NASA and for other organizations considering MBSE or pathfinder efforts, and in building a very strong and collaborative user community.},
year = {2017}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01473.x,
author = {Dean, Jered and Henderson, Cody and Gardner, John},
title = {Model-Based Systems Engineering as an Enabler for Regulatory Design Compliance},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {2266-2278},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01473.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01473.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01473.x},
abstract = {Abstract Whether working in the FDA regulated medical field or explosive industrial environments, using model-based systems engineering provides the confidence, traceability and structure to meet regulatory requirements. In addition, the authors propose the methodology to be a means to optimize schedule predictability and development of the most appropriate products. In this paper, the systems engineering process being employed is briefly described and two case studies are explored that make the case for MBSE as a key enabler of efficient design to complex regulations.},
year = {2012}
}
@article{https://doi.org/10.1002/j.2334-5837.2008.tb00844.x,
author = {Piggott, Stephen and Melanson, Philip and Hartman, Leo and Adourian, Chahe},
title = {7.2.2 Advancing Model-Based Systems Engineering at a Small Space Agency},
journal = {INCOSE International Symposium},
volume = {18},
number = {1},
pages = {812-826},
doi = {https://doi.org/10.1002/j.2334-5837.2008.tb00844.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2008.tb00844.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2008.tb00844.x},
abstract = {Abstract This paper reviews recent and current efforts to implement Model-Based Systems Engineering at the Canadian Space Agency. A mission under concept development is being used both for demonstration purposes and also for real process design with SysML. Several support and bridge tools have been developed to help with key process issues. A number of technology issues have come out of our work, leading to a wish list of improvements we would like to see. Also, we have been dealing with organizational resistance that is preventing a wider acceptance of MBSE.},
year = {2008}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01452.x,
author = {Bajaj, Manas and Scott, Andrew and Deming, Douglas and Wickstrom, Gregory and Spain, Mark De and Zwemer, Dirk and Peak, Russell},
title = {Maestro – A model-based systems engineering environment for complex electronic systems},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1999-2015},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01452.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01452.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01452.x},
abstract = {Abstract In this paper we present Maestro, a model-based systems engineering (MBSE) environment for design and simulation of complex electronic systems using Orchestra—a simulation tool developed at Sandia National Laboratories. Maestro is deployed as a plugin for MagicDraw and uses Orchestra domain-specific language (DSL) which is based on SysML. Maestro enables a model-based design and analysis approach that replaces the traditional document-based systems engineering process. It provides a unified graphical modeling environment to domain experts who have had to depend on drawing tools for defining system architecture and manual transcription of system topology in creating complex simulation models.},
year = {2012}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01445.x,
author = {Logan, Paul and Harvey, David and Spencer, Daniel},
title = {Documents are an Essential Part of Model Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1899-1913},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01445.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01445.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01445.x},
abstract = {Abstract Model Based Systems Engineering (MBSE) existed long before the recent emphasis on its merits compared with traditional document-based methods. Advocates disparage documents per se, failing to recognise their importance as information artefacts essential to MBSE. While the digital data model may be the ‘source of truth’, stakeholders view, verify, and use the model via screen-rendered artefacts, which if made permanent to any degree, constitutes ‘printing’ a document. This paper examines the nature and use of documents, both paper and electronic, in traditional and model-based methodologies, and identifies the evidentiary qualities of paper-based documents required for legal acceptance of electronic documents. Document templates are used to initially structure the model schema, populate the model, and progressively auto-generate output documents as complex views on the developed system model. The essential need for documents as information artefacts in gathering, developing, maintaining and reporting the ‘truth’ in a model-based (and model-centric) paradigm is demonstrated.},
year = {2012}
}
@article{https://doi.org/10.1002/sys.21688,
author = {Shoshany-Tavory, Sharon and Peleg, Eran and Zonnenshain, Avigdor and Yudilevitch, Gil},
title = {Model-based-systems-engineering for conceptual design: An integrative approach},
journal = {Systems Engineering},
volume = {n/a},
number = {n/a},
pages = {},
keywords = {conceptual design, MBSE, SysML},
doi = {https://doi.org/10.1002/sys.21688},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21688},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21688},
abstract = {Abstract Conceptual-Design is an early development phase, where innovation and creativeness shape the future system/product. Model-Based-Conceptual-Design (MBCD) attempts to use best-practices of Model-Based-Systems-Engineering (MBSE) to gain the envisioned benefits of model connectivity. Using MBSE supporting tools can transform Conceptual-Design into a digital-engineered process but may impede creativity and innovation. Concurrently, the design domain offers specific methods and tools for innovative Conceptual-Design. In the current study, we explore an existing Conceptual-Design framework and offer MBSE interpretation and tools extensions needed for its digital implementation. Through such exploration we highlight MBCD specific insights and discuss modeling-innovation interrelations. The implementation was accomplished using a domain-specific enabling software package on top of a market-accepted UML/SysML platform, extending the language definitions, where appropriate. The framework guided extensions allow generation of innovative bottom-up alternatives, solution integration, and solutions’ comparison. The use of modeling is shown to offer clearer process definition, specific methods assistance, and alternative ranking—both manually and automatically. Consequently, MBCD is accomplished, which supports innovation, while being digitally connected to full-scale-development models and the organizational assets at large. Through integration into the orderly Systems-Engineering process, traceability is maintained, and repeated iterations are supported, where conceptual decisions may be revisited. Additionally, through the introduction of an assets’ catalog, cross-organizational knowledge sharing is accomplished. The paper presents samples of the extensions, using a simplified example of technology design for Future Firefighting. The value of incorporating Conceptual-Design specific methodology and tools is evaluated through feedback from multiple domain experts. Discussion and future research directions are offered.}
}
@article{https://doi.org/10.1002/j.2334-5837.1998.tb00049.x,
author = {Ali, Michael},
title = {2.3.2 Model-Based Systems Engineering And Object-Oriented Software Engineering: An Integrated Approach},
journal = {INCOSE International Symposium},
volume = {8},
number = {1},
pages = {336-342},
doi = {https://doi.org/10.1002/j.2334-5837.1998.tb00049.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.1998.tb00049.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.1998.tb00049.x},
abstract = {ABSTRACT In this paper, we explore the interface between model-based systems engineering (MBSE) and object-oriented software engineering (OOSE). We show that the context, behavior, and structure models captured by the systems engineering process are precisely those inputs needed to start the object-oriented software engineering process. Conversely, the object-oriented architecture generated by the software engineering process is needed by systems engineering to perform object-based rather than function-based architecture synthesis.},
year = {1998}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00177.x,
author = {Malone, Robert and Friedland, Brittany and Herrold, John and Fogarty, Daniel},
title = {Insights from Large Scale Model Based Systems Engineering at Boeing},
journal = {INCOSE International Symposium},
volume = {26},
number = {1},
pages = {542-555},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00177.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00177.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00177.x},
abstract = {Abstract Development and design of increasingly integrated aerospace systems, by globally distributed engineering teams, presents challenges in bounding the effort required to produce, integrate, manage and validate the large and detailed accompanying specification datasets. Model Based Systems Engineering has become essential in allowing Boeing to meet these challenges. Through verification and validation of sufficiently detailed large scale system architecture models, Boeing has been successful in accelerating data release schedules, while at the same time eliminating specification errors that result in costly rework. In the process of developing these large scale system architecture models, Boeing has acquired some insights into what is required to effectively develop, deploy and manage an MBSE environment, and these insights are detailed in this paper. Additionally, recommendations are made as to how standards organization, the MBSE tool industry, and academia could better support the MBSE community.},
year = {2016}
}
@article{https://doi.org/10.1002/sys.21267,
author = {Micouin, Patrice},
title = {Property-Model Methodology: A Model-Based Systems Engineering Approach Using VHDL-AMS},
journal = {Systems Engineering},
volume = {17},
number = {3},
pages = {249-263},
keywords = {property-based requirement, MBSE, specification model, design model, system model, system configuration, requirement derivation, simulation, specification model validation, specification error, design model verification, design error, failure condition, redundancy, dissimilarity},
doi = {https://doi.org/10.1002/sys.21267},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21267},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21267},
abstract = {ABSTRACT The purpose of this paper is to contribute to the definition of a Model Based Systems Engineering (MBSE) approach which would meet the objective laid out by INCOSE in its Systems Engineering Vision 2020. After briefly presenting the tools used and summarizing a state-of-the-art system design process, we show how it is possible to define property-based requirements (PBRs) as features of specification models and to apply the design process to this specification model in order to develop design models. Then, we show how it is possible to perform a simulation-based verification process of design models in order to detect and remove design errors, to substitute the initial requirements of the system with derived requirements gradually assigned to the subentities of the system, to perform a simulation-based validation process of specification models in order to detect and remove specification errors. Additionally, we show how we define safety PBRs to prevent the consequences of failure conditions and verify mitigation means, such as redundancy or dissimilarity, introduced in design models to meet these safety PBRs. Thus, we consider that our proposals improve MBSE current practices making them safer for the development of present and future systems.},
year = {2014}
}
@article{https://doi.org/10.1002/j.2334-5837.2013.tb03002.x,
author = {Carson, Ronald S. and Sheeley, Barbara J.},
title = {2.5.1 Functional Architecture as the Core of Model-Based Systems Engineering},
journal = {INCOSE International Symposium},
volume = {23},
number = {1},
pages = {29-45},
doi = {https://doi.org/10.1002/j.2334-5837.2013.tb03002.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2013.tb03002.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2013.tb03002.x},
abstract = {Abstract The application of functional architecture from a model-based systems engineering process is examined throughout the product lifecycle. It is shown that focusing on the functionality of the system, in concert with the relationships to other elements of an integrated architecture, is a rich source of information for analyzing, developing, integrating, verifying, operating, and supporting a system. Lessons learned and examples from various product domains are provided.},
year = {2013}
}
@article{https://doi.org/10.1002/inst.12199,
author = {Smith, Warren B. and Castro, Lymari},
title = {Restructuring Requirements Analysis Using Model-Based Systems Engineering and Agile Systems Engineering},
journal = {INSIGHT},
volume = {21},
number = {2},
pages = {21-24},
doi = {https://doi.org/10.1002/inst.12199},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12199},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12199},
abstract = {ABSTRACT In 2009, the US Army initiated a large acquisition program to modernize one of its systems. Due to circumstances, the program had to accelerate the system requirements review (SRR) milestone from eighteen months to five months. This paper describes the new agile requirements analysis process used, which accomplished this seventy percent schedule reduction. The process consisted of using model-based systems engineering (MBSE), storyboarding techniques, collaborative daily analysis of system and subsystems requirements, and the iterative and incremental delivery of requirements which engineers used for the SRR. The paper focuses on the practical application of an agile systems engineering requirements analysis and its benefits to manage caprice, uncertainty, risk, variation, and evolution (CURVE) in a large US Department of Defense (DoD) program while reducing the deployment time.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2010.tb01154.x,
author = {Long, James},
title = {Model-Based Systems Engineering For Project Success: The Complete Process},
journal = {INCOSE International Symposium},
volume = {20},
number = {1},
pages = {1502-1644},
doi = {https://doi.org/10.1002/j.2334-5837.2010.tb01154.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2010.tb01154.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2010.tb01154.x},
abstract = {Abstract This basic tutorial identifies the elements and benefits of a complete, proven model-based system engineering process, and demonstrates its tailorability and value for project success using vignettes from an information management system and a sample System of Systems (SoS) application. The tutorial illustrates how the model-based system engineering process supports both document-driven and model-based paradigms, whether in top-down, middle-out, or reverse engineering environments. It discusses how to know when each element of the process has been completed, and how to develop and validate functional and physical architectures using executable architectures. The requirement for concurrent engineering, the onion model, and synchronization of models and data are presented. The participants will be introduced to a flexible system engineering process suitable for system development tasks across the complexity spectrum. In addition to the process description, the tutorial will include a sample solution to illustrate the recommended techniques, views, completion conditions, and products of an MBSE system development methodology. It will also include examples of the development of graphical views commonly used by practitioners of DoDAF and SysML approaches. This tutorial is focused on highlighting how the use of model-based systems engineering can meet the government requirements for delivering architecture framework products while allowing the engineering organizations (industry and government) to successfully perform the systems engineering required to develop an executable design.},
year = {2010}
}

