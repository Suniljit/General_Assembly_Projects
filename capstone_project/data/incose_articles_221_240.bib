@article{https://doi.org/10.1002/j.2334-5837.2013.tb03075.x,
author = {Yamada, Takahiro},
title = {3.5.1 Model as You Write, or Write as You Model – A Grammar-Based Approach to Modeling and Documentation},
journal = {INCOSE International Symposium},
volume = {23},
number = {1},
pages = {1116-1130},
doi = {https://doi.org/10.1002/j.2334-5837.2013.tb03075.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2013.tb03075.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2013.tb03075.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support activities necessary for development of systems and is expected to replace the document-centric approach that has been practiced by systems engineers. Many models of systems are being developed by many engineers, but most engineers still write documents in addition to developing models. This is because the semantics of the models is not embedded in the models and is usually provided in documents. This paper proposes a novel approach to development of documents and models at the same time. In this approach, technical information is encoded with an artificial language. The grammar of this language specifies how the semantics of situations should be encoded into sentences. Generated sentences can be converted to other forms such as diagrams, tables, and/or text in any natural language. Generated sentences can also be converted to electronic data, which can be used by any application program. With this approach, documents can be used as models, too, because documents are written according to strict syntactic and semantic rules. At the same time, models can be used as documents, too, because the semantic information necessary for interpreting models is embedded in the model. This approach can be applied to any technical information, which includes requirement specifications, design specifications, interface specifications, development plans, test plans, test procedures, and operation procedures.},
year = {2013}
}
@article{https://doi.org/10.1002/j.2334-5837.2016.00328.x,
author = {Chakraborty, Sandeep and Kashyap, Kunal and Shukla, Bal Krishna},
title = {A model based system engineering approach to design Avionics systems: Present and Future prospect},
journal = {INCOSE International Symposium},
volume = {26},
number = {s1},
pages = {234-249},
doi = {https://doi.org/10.1002/j.2334-5837.2016.00328.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2016.00328.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2016.00328.x},
abstract = {Abstract System complexity in Defense and Aerospace Industry is increasing day by day. Conventional System Engineering is document centric. Text based documents describe system specification, store the records, describe concept of operations and interfaces etc. There are numerous design challenges faced by system engineer while working on text based requirements. Programs are prone to errors during Requirements Definition phase. Also as designs grow and change, maintaining documents becomes an uphill task. Model based approach in System Engineering has ability to detect defect at much more early stage than conventional text based method. Model Based Systems Engineering (MBSE) uses various block diagrams, state machines, mathematical equations, functional flow diagrams, object-oriented models which help to understand the Data flow between various subsystems. This paper explains the advantages of model based system engineering over conventional text based approach, a seamless transition strategy from Document-based to model-based approach and its various applications in defense and Aerospace domain with future prospect.},
year = {2016}
}
@article{https://doi.org/10.1002/j.2334-5837.2005.tb00693.x,
author = {Booth, Stuart T.},
title = {4.2.3 Network Centric Architectures:Are We Up To The Task?},
journal = {INCOSE International Symposium},
volume = {15},
number = {1},
pages = {600-609},
doi = {https://doi.org/10.1002/j.2334-5837.2005.tb00693.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2005.tb00693.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2005.tb00693.x},
abstract = {Abstract The emergence of network centric architectures and the achievement of information superiority is the new paradigm that is being embraced by the military's next generation of systems to be developed and deployed. The changes dictated in this new architecture are instigating revolutionary changes throughout the DoD. These changes should have an equally profound effect on system integrators in terms of integration practices and policies that will allow network centric architectures to be realized within budgetary and schedule time constraints. The purpose of this paper is to identify key issues currently limiting the effectiveness of system integrators in their efforts to architect network centric architectures and offer suggestions on how to strengthen the integration process through the application of model-based systems engineering, integrated information repositories, and teams that have both a vertical and horizontal architecture definition and integration responsibilities.},
year = {2005}
}
@article{https://doi.org/10.1002/j.2334-5837.2010.tb01082.x,
author = {Ferris, Timothy L.J. and Do, Quoc},
title = {4.2.3 The Impact of Understanding the Need and Available Products in COTS Selection},
journal = {INCOSE International Symposium},
volume = {20},
number = {1},
pages = {465-476},
doi = {https://doi.org/10.1002/j.2334-5837.2010.tb01082.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2010.tb01082.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2010.tb01082.x},
abstract = {Abstract Nowadays, more and more engineering solutions are built by integrating Commercial-Of-The-Shelf (COTS) products rather than building subsystems from scratch. The selection of COTS for defence acquisition and upgraded projects presents a great challenge to systems engineers due to the rapidly changing nature of electronic systems, particularly those related to sensors, combat and mission systems, weapons and countermeasures, avionics, and communications. This paper explores the issues associated with the selection of COTS subsystems to be integrated into a larger system. When the total number of COTS components of the same kind to be procured is very low, such as one unit, there are additional constraints impacting the selection and procurement process. A case study is presented based on the development of the Systems Integration Sandpit (SIS) for exploring systems integration issues, fostering model-based systems engineering and systems engineering education.},
year = {2010}
}
@article{https://doi.org/10.1002/j.2334-5837.2011.tb01233.x,
author = {Yamada, Takahiro},
title = {5.6.2 Attribute-Oriented Modeling Approach and Its Application to Modeling of Spacecraft Functions},
journal = {INCOSE International Symposium},
volume = {21},
number = {1},
pages = {660-669},
doi = {https://doi.org/10.1002/j.2334-5837.2011.tb01233.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2011.tb01233.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2011.tb01233.x},
abstract = {Abstract Model-Based Systems Engineering (MBSE) uses models as a central and governing role in the specification, design, integration, validation, and operation of a system. If models are used in the development of a system, it can reduce ambiguity of information that exists in the document-based methodology and facilitate sharing of engineering information among different participants involved in the development of the system. There are standard languages like the Unified Modeling Language (UML) or the Systems Modeling Language (SysML) and software tools that facilitate developing of models. One of the problems in MBSE is that it is usually the case that different engineers come up with different models even if the same system is modeled and a standard language like UML or SysML is used. This is because there is no standard that specifies what kinds of components in the system should be represented with what kinds of standard modeling elements defined in UML or SysML. In order to solve this problem, this paper proposes a new approach to modeling of systems. This approach is called the “Attribute-Oriented Modeling (AOM)” approach. The AOM should be used with a standard modeling language like UML or SysML, not instead of them. The central concept of AOM is that types of model elements used in models of systems should be defined with a set of attributes that the system components to be modeled possess. By using this approach, a system is always modeled in the same way no matter who models the system. Furthermore, by using the fact that systems in a particular domain are always modeled in the same way, we can develop generic application programs that can process any model in that domain. This will further promote the utilization of MBSE.},
year = {2011}
}
@article{https://doi.org/10.1002/j.2334-5837.2019.00598.x,
author = {Hause, Matthew},
title = {The Digital Twin Throughout the SE Lifecycle},
journal = {INCOSE International Symposium},
volume = {29},
number = {1},
pages = {203-217},
doi = {https://doi.org/10.1002/j.2334-5837.2019.00598.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2019.00598.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2019.00598.x},
abstract = {Abstract A digital twin is much as it sounds: a digital representation of a specific asset in the field, including current and past configuration states, considering serialized parts, software versions, options, and variants. Condition data is also represented including sensor readings, alerts, and operating environments. A digital twin has significant implications for service, operations, analysis, design, etc. especially when visualized as a Computer Aided Design (CAD)-sourced graphic in 3D virtual or augmented reality. Using this immersive and real-time information, engineers can inspect and verify the asset being serviced, designed or operated to get precise product information. However, the digital twin does not spring into life fully formed straight from the CAD model. It requires an informed system engineering approach to ensure that the integration between physical and digital is fit for purpose. Model-Based Systems Engineering (MBSE) models can be used in conjunction with the digital twin to improve operational models, predict and analyze faults, perform best-fit analysis and eliminate inappropriate system configurations, etc. This paper will look at various aspects of the digital twin and how it can be used in conjunction with MBSE.},
year = {2019}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00755.x,
author = {Wang, Gan},
title = {Implementing a Model-Based, Digital Engineering Enterprise for a Defense Systems Integrator – an Ongoing Journey},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {783-798},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00755.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00755.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00755.x},
abstract = {Abstract As the aerospace and defense industry strives to embrace digital engineering transformation, organizations quickly realize that this transformation is much more than just tools or infrastructure. It requires comprehensive change that involves people, process, and technology, and that calls for organizational strategy and stakeholder commitment. This paper provides an overview of an on-going corporate initiative to develop an enterprise-wide, model-based systems engineering (MBSE) and model-based engineering (MBE) capabilities and to instantiate a transformation of legacy workforce and culture. Our vision is to apply digital engineering (DE) as an enabler to transform legacy, document-based development stovepipes into a product-centric, integrated, digital engineering enterprise. At the implementation level, however, it involves a multipronged investment strategy in technology, infrastructure, process, and people, as well as an incremental process of learning and experiments. This paper lays out the architectural vision, implementation approach, and the business rationales. It also attempts to reflect on the journey to date, discussing some of the early successes, hurdles and challenges in implementing the digital engineering initiative for a diverse defense services business.},
year = {2020}
}
@article{https://doi.org/10.1002/j.2334-5837.1994.tb01719.x,
author = {Oliver, David W.},
title = {Systems Engineering and Object Technology},
journal = {INCOSE International Symposium},
volume = {4},
number = {1},
pages = {292-299},
doi = {https://doi.org/10.1002/j.2334-5837.1994.tb01719.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.1994.tb01719.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.1994.tb01719.x},
abstract = {Abstract This paper extends Systems Engineering methods to include object technology, which has been developing in modern software engineering, (Rumbaugh et. al. 1991). It applies the principles of Model Based Systems Engineering, MBSE, (Oliver 1993a), (Oliver 1993b) to the systems engineering process itself. This results in a layered process description which is tailorable and supports aerospace or commercial methodologies. Multiple phases of engineering - concept phase, requirements analysis phase, and systems architecture and design phase - are supported with a single core set of engineering steps. The additions of semantics and notations from object technology provides a capability to describe the choices of components and the mapping of behavior to components that lead to alternative architectures. Strong emphasis is placed on the systems engineering traditions of trade-off analysis and sequential build and test which have been weak in software engineering methodologies. The joining of systems engineering with object technology provides a seamless engineering path for projects which will implement software in an object-oriented fashion. Integration with existing methodologies is straight forward because existing methodologies can be defined by selecting among the core MBSE steps.},
year = {1994}
}
@article{https://doi.org/10.1002/j.2334-5837.2012.tb01432.x,
author = {Barnes, Patrick},
title = {11.5.2 A NASA Space Communications and Navigation SysML Profile Adaptation},
journal = {INCOSE International Symposium},
volume = {22},
number = {1},
pages = {1711-1725},
doi = {https://doi.org/10.1002/j.2334-5837.2012.tb01432.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2012.tb01432.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2012.tb01432.x},
abstract = {Abstract The NASA Space Communications and Navigation (SCaN) Office has been conducting trade studies to investigate integrating its three independent space networks into an integrated space network. SCaN has also chosen to use a model-based systems engineering approach for the trade studies. SysML, being a general-purpose modeling language for systems engineering, was chosen to model the Operational Process Flow for each of the three, independent space networks, as well as for a common, integrated network. This paper describes how the base SysML profile was modified to meet the purposes of the trade study investigating network monitoring and control. Though the methodology described in this paper, neither completely adheres to, nor completely deviates from, standard SysML usage, a working form of SysML modeling has been developed for the network monitoring and control trade study and future anticipated trade studies.},
year = {2012}
}
@article{https://doi.org/10.1002/iis2.12962,
author = {Morkevicius, Aurelijus and Aleksandraviciene, Aiste and Strolia, Zilvinas},
title = {System Verification and Validation Approach Using the MagicGrid Framework},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {767-781},
doi = {https://doi.org/10.1002/iis2.12962},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12962},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12962},
abstract = {Abstract The ongoing transformation in the industry from a document-based systems engineering to a model-based systems engineering approach reveals a need for new methods of verifying and validating systems. Traditional methods of testing the actual system are getting more and more expensive. A model-based environment could significantly reduce testing and, most importantly, verification and validation processes costs. It allows testing on the system model by applying various techniques, such as simulation, analysis, review, mock-ups, etc. There are, however, very few approaches today detailing how verification and validation of the entire system (taking into count its components and subsystems) could be performed. This paper proposes an approach to perform verification and validation of a system using system models developed with Systems Modeling Language (SysML) and in accordance with the MagicGrid (formerly known as MBSE Grid) framework. The approach covers system testing activities beginning with verification of the lowest modeled system elements against system requirements and finishing with validation of the system as a whole, against stakeholder needs.},
year = {2022}
}
@article{https://doi.org/10.1002/inst.12429,
author = {Morkevicius, Aurelijus and Aleksandraviciene, Aiste and Strolia, Zilvinas},
title = {System Verification and Validation Approach Using the MagicGrid Framework},
journal = {INSIGHT},
volume = {26},
number = {1},
pages = {51-59},
doi = {https://doi.org/10.1002/inst.12429},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12429},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12429},
abstract = {ABSTRACT The ongoing transformation in the industry from a document-based systems engineering to a model-based systems engineering approach reveals a need for new methods of verifying and validating systems. Traditional methods of testing the actual system are getting more and more expensive. A model-based environment could significantly reduce testing and, most importantly, verification and validation processes costs. It allows testing on the system model by applying various techniques, such as simulation, analysis, review, mock-ups, etc. There are, however, very few approaches today detailing how verification and validation of the entire system (taking into count its components and subsystems) could be performed. This paper proposes an approach to perform verification and validation of a system using system models developed with Systems Modeling Language (SysML) and in accordance with the MagicGrid (formerly known as MBSE Grid) framework. The approach covers system testing activities beginning with verification of the lowest modeled system elements against system requirements and finishing with validation of the system as a whole, against stakeholder needs.},
year = {2023}
}
@article{https://doi.org/10.1002/j.2334-5837.2020.00727.x,
author = {Gullhav, Katrine and Haskins, Cecilia},
title = {Engaging Mechanical Engineers in System Modeling},
journal = {INCOSE International Symposium},
volume = {30},
number = {1},
pages = {356-372},
doi = {https://doi.org/10.1002/j.2334-5837.2020.00727.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2020.00727.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2020.00727.x},
abstract = {Abstract In Model Based Systems Engineering (MBSE) the system model is used to capture and share Systems Engineering (SE) data and artifacts. Using the model to communicate with the project engineers is found to be more successful with software (SW) engineers than with other domains. As a result, the system model is developed unevenly. This article reports on how a company, whose system model is decisively more detailed in its description of SW sub-systems, might better involve mechanical (and other) engineers in system modeling. Case-based research is applied to understand the company's challenges. The conclusion is that the challenges originate from failing to consider the differences in how these domains view and relate to a system under development. The research determined that the models developed in the company-specific tool implementation were incapable of producing useful deliverables for non-software engineers. In the absence of a plan for how a mechanical engineer could access information from the model, the authors recommend defining a modeling environment to ensure the necessary contributions from both systems engineers and mechanical engineers.},
year = {2020}
}
@article{https://doi.org/10.1002/sys.21549,
author = {Shallcross, Nicholas and Parnell, Gregory S. and Pohl, Ed and Specking, Eric},
title = {Set-based design: The state-of-practice and research opportunities},
journal = {Systems Engineering},
volume = {23},
number = {5},
pages = {557-578},
keywords = {literature survey, model-based systems engineering (MBSE), SEE11 decision analysis/management, SEE24, set-based design},
doi = {https://doi.org/10.1002/sys.21549},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21549},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/sys.21549},
abstract = {Abstract Increasing system complexity has provided the impetus to develop new and novel systems engineering methodologies. One of these methodologies is set-based design (SBD), a concurrent design methodology well suited for complex systems subject to significant uncertainty. Since the 1990s, numerous private, public, and defense sector design programs have successfully implemented SBD. However, concerns regarding SBD's complexity, tendency toward qualitative methods, and lack of quantitative tools have limited its use. To address these issues, our research surveys 122 refereed journal articles and conference papers to assess SBD's state-of-practice and identify relevant research opportunities. To accomplish these tasks, we perform a structured literature review to identify and assess relevant and influential research. We found that SBD's state-of-practice relies heavily upon decision and tradespace analysis with increasing emphasis on uncertainty modeling and MBSE. We found that the majority of SBD research consists of quantitative methodologies focusing on component and small system applications. We also found that complex system applications used mostly qualitative methodologies. We identify SBD research opportunities for requirements development, MBSE, uncertainty modeling, multiresolution modeling, adversarial analysis, and program management. Finally, we recommend the development of a comprehensive SBD methodology and toolkit, suited for complex system design across all stages of the product development life cycle.},
year = {2020}
}
@article{https://doi.org/10.1002/j.2334-5837.2014.tb03139.x,
author = {Doufene, Abdelkrim and Dauron, Alain and G., Hugo G. Chalé and Krob, Daniel},
title = {2.1.1 Model-Based operational analysis for complex systems - A case study for electric vehicles},
journal = {INCOSE International Symposium},
volume = {24},
number = {1},
pages = {122-138},
doi = {https://doi.org/10.1002/j.2334-5837.2014.tb03139.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2014.tb03139.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2014.tb03139.x},
abstract = {Abstract We present in this paper an operational analysis of a complex system following a Model Based Systems Engineering approach, illustrated by a case study on electric vehicles. We explain some strategic issues and reasons that make electric vehicles important and complex systems, and how these vehicles can significantly contribute to the European policies for sustainable development. We explain why it is necessary to apply a Systems Engineering approach to deal with the complexity of such systems, and we give an overview of the architectural design framework we follow. We present a model of the system of interest and of its environment built from the analysis of public documents and literature reviews. This allowed us to identify the key stakeholders, external interfaces, needs, use cases and operational scenarios. Based on this operational analysis, we present ways to pursue functional and trade-off analyses.},
year = {2014}
}
@article{https://doi.org/10.1002/j.2334-5837.2018.00578.x,
author = {Maheshwari, Apoorv and Raz, Ali K. and Dervisevic, Aleksandra and Campbell, Robert and DeLaurentis, Daniel A. and Colligan, William and Murphy, Andrew and Kolawole, Oluwatomi},
title = {Minimum SysML Representations to Enable Rapid Evaluation using Agent-Based Simulation},
journal = {INCOSE International Symposium},
volume = {28},
number = {1},
pages = {1706-1719},
doi = {https://doi.org/10.1002/j.2334-5837.2018.00578.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2018.00578.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2018.00578.x},
abstract = {Abstract The changing operational requirements and demands for new capabilities, often makes it necessary for systems architects to make substantial changes in a system's architecture. However, the traditional systems engineering processes advocate finalization of architecture at early stages of the design process with little or no change at the later stages of the design. The simulation development is often done towards the end of the design phase and thus, the traditional systems engineering approaches do not support a rapid architecture evolution. In this paper, we propose a Model-Based Systems Engineering (MBSE) process to facilitate rapid evaluation of changes in a system architecture and/or design artifact for complex systems. This process specifies the minimum set of information that needs to be included in system architecture using SysML diagrams with traceability between the diagrams and agent-based simulation (ABS) models of a complex system. We demonstrate this SysML-driven analysis approach to perform a rapid evaluation of evolving system architectures using a NASA-sponsored project to analyze ab initio architectures for the National Airspace System. We also demonstrate how the proposed approach enables early-on investigation during the architecture development whether an architecture will yield the desired operational benefit.},
year = {2018}
}
@article{https://doi.org/10.1002/j.2334-5837.2011.tb01199.x,
author = {Friedenthal, Sandy},
title = {2.5.0 MBSE},
journal = {INCOSE International Symposium},
volume = {21},
number = {1},
pages = {215-215},
doi = {https://doi.org/10.1002/j.2334-5837.2011.tb01199.x},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/j.2334-5837.2011.tb01199.x},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/j.2334-5837.2011.tb01199.x},
abstract = {Abstract The INCOSE MBSE Initiative was established to help enable the Systems Engineering Vision 2020. MBSE was one of 5 components of the SE Vision. This webinar will highlight the MBSE vision, along with the MBSE roadmap and some of the key challenge team and related MBSE activities that the MBSE Initiative has been pursuing. The webinar will also highlight other industry related MBSE efforts, and some general observations about the state of practice.},
year = {2011}
}
@article{https://doi.org/10.1002/iis2.12968,
author = {Swickline, Chris and Jugovic, Heidi},
title = {A Data-Centric System Architecture Model Development Process Emphasizing Rapid Tempo and Quality},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {857-871},
doi = {https://doi.org/10.1002/iis2.12968},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12968},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12968},
abstract = {Abstract For years the system engineering community has been armed with Model Based Systems Engineering (MBSE) using the Systems Modeling Language (SysML) and a host of vendor provided tools to facilitate requirements, architecture and design development. Nonetheless, teams repeatedly struggle to apply MBSE in part because they do not have a method to complement the language and the tools. This paper seeks to offer elements of method focusing on process, a powerful style to enable teamwork in a model, and set of flexible approaches to guide work which is consistent with that style. This paper focuses on an easy to use process for building a System Architecture Model (SAM), allowing for tailoring to meet program-specific needs. The paper identifies and encourages the use of a variety of SAM development approaches which are focused on the themes of data centricity, consistency, commonality in style, and efficiently creating content that will answer most engineering questions related to architecture. This process is implemented in SysML as a “One Page Process”, and made openly available for download. Furthermore, automated validation via a rules-based engine is leveraged to catch and correct defects nearly as quickly as they are generated as well as scale SAM development across a large diverse team of contributors. By leveraging and tailoring this process to meet program needs, one may improve the quality, development tempo, and rigor of their SAM.},
year = {2022}
}
@article{https://doi.org/10.1002/iis2.12937,
author = {Browning, Jeren and Hansel, Joshua and Wilsdon, Katherine and Houck, Kaleb and Pluth, Adam},
title = {Microreactor Testbed Automation through Digital Engineering and Digital Twins},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {375-389},
doi = {https://doi.org/10.1002/iis2.12937},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12937},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12937},
abstract = {Abstract Digital engineering is the practice of creating repeatable frameworks to bring the power of automation and information technologies to complex systems. Model-based systems engineering (MBSE) is an essential part of digital engineering by providing a roadmap for digitalization. Digital engineering and MBSE can be applied in a myriad of situations, one of which is for the development of digital twins for autonomous and remote control. Autonomous and remote operation of physical assets can provide numerous benefits to organizations and industries that deal with complex and distributed systems. The automation of the operation of a physical asset can be achieved through a digital twin, connected to the inputs and outputs of the asset and using machine learning (ML) and artificial intelligence (AI). Development of the digital twin requires understanding of systems interfaces and incorporating this understanding in digital systems. The effort described herein aims to determine the feasibility and benefit of such a process through the development and evaluation of a digital twin connected to a heat-pipe test-bed environment. Many challenges need to ultimately be addressed by a digital twin including data quality, infrastructure, privacy and security, and more. However, the focus of this paper will be on the application and use of digital engineering for the development of autonomous digital twins through a repeatable framework that can be applied across various domains and assets.},
year = {2022}
}
@article{https://doi.org/10.1002/inst.12174,
author = {Leal, Gabriel and Guédria, Wided and Panetto, Hervé},
title = {ASSESSING INTEROPERABILITY REQUIREMENTS IN NETWORKED ENTERPRISES: A MODEL-BASED SYSTEM ENGINEERING APPROACH},
journal = {INSIGHT},
volume = {20},
number = {4},
pages = {15-18},
doi = {https://doi.org/10.1002/inst.12174},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/inst.12174},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/inst.12174},
abstract = {ABSTRACT When two or more systems work together, it is crucial to verify interoperability. Systems engineers should be working to continuously improve the ability to interoperate for maintaining a sustainable and efficient collaboration among the networked systems. Systems could benefit from the use of interoperability assessments for identifying their strengths and weakness as well as their compatibility with potential collaborative peer systems. However, the current assessment approaches do not explicitly define the interoperability requirements and their interdependencies. Acknowledging the different requirement dependencies supports the identification of impacts on the overall system, for example implications within a network caused by changes in the collaboration strategy or the introduction of a new information technology tool. Thus, based on model-based systems engineering, this paper defines a networked enterprise as a system of systems (SoS) and proposes to use the SoS characteristics for identifying interoperability requirements and their dependencies. Further, we formalise and utilise inputs for an assessment tool.},
year = {2017}
}
@article{https://doi.org/10.1002/iis2.12997,
author = {Abdoun, Nabil and Chami, Mohammad},
title = {Automatic Text Classification of PDF Documents using NLP Techniques},
journal = {INCOSE International Symposium},
volume = {32},
number = {1},
pages = {1320-1331},
doi = {https://doi.org/10.1002/iis2.12997},
url = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.12997},
eprint = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/iis2.12997},
abstract = {Abstract One of the regular activities performed by engineers during the design and development of the technical systems is to determine which sentences in a PDF specification document represent a requirement, functional architecture, design solution, variability, or other types of systems engineering (SE) data. Extracting such data from these PDF documents and transferring it into system model elements is still performed manually, requires high effort, and is error prone. Hereby, automatic extraction and classification of such SE data has a great potential, but it is still relatively scarce and a challenging task for engineers working with large PDF specification documents. One solution is to follow a suitable writing formulation which provide an immediate and easy way to classify and analyze the PDF documents. However, such formulations are not always followed strictly. As part of our work towards adopting Artificial Intelligence (AI) for Model-Based Systems Engineering (MBSE), we have been researching the data extraction and data classification topics from PDF files in order to transfer it to system models elements. In this paper, we present the early status of a solution based on AI that uses Natural Language Processing (NLP) techniques to label the SE data existing in PDF files, extract them, and classify them into predefined classes.},
year = {2022}
}

